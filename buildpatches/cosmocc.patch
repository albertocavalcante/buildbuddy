From bcc70f760366f50732ca5a975484f5102fb9b2a9 Mon Sep 17 00:00:00 2001
From: Zoey Greer <zoey@buildbuddy.io>
Date: Mon, 4 Dec 2023 11:06:58 -0500
Subject: [PATCH] did it


diff --git a/BUILD b/BUILD
new file mode 100644
index 0000000..6d43593
--- /dev/null
+++ b/BUILD
@@ -0,0 +1,11 @@
+package(default_visibility = ["//visibility:public"])
+
+filegroup(
+    name = "full",
+    srcs = [
+        "//binaries:bin",
+        "//headers:include",
+        "//libraries:lib",
+    ],
+)
+
diff --git a/WORKSPACE b/WORKSPACE
new file mode 100644
index 0000000..0188bcc
--- /dev/null
+++ b/WORKSPACE
@@ -0,0 +1,3 @@
+workspace(
+    name = "cosmocc",
+)
diff --git a/bin/BUILD b/bin/BUILD
new file mode 100644
index 0000000..fb74399
--- /dev/null
+++ b/bin/BUILD
@@ -0,0 +1,3 @@
+package(default_visibility = ["//binaries/__pkg__"])
+
+exports_files(glob(["**/*"]))
diff --git a/binaries/BUILD b/binaries/BUILD
new file mode 100644
index 0000000..92a8ca2
--- /dev/null
+++ b/binaries/BUILD
@@ -0,0 +1,48 @@
+package(default_visibility = ["//visibility:public"])
+
+filegroup(
+    name = "bin",
+    srcs = [
+        ":ar_bin",
+        ":as_bin",
+        ":cc1_bin",
+        ":cc1plus_bin",
+        ":collect2_bin",
+        ":ld.bfd_bin",
+        ":gcc_bin",
+        ":g++_bin",
+        ":strip_bin",
+        ":objcopy_bin",
+        ":objdump_bin",
+        ":addr2line_bin",
+        ":elfedit_bin",
+        ":nm_bin",
+        ":ranlib_bin",
+        ":readelf_bin",
+        ":size_bin",
+        ":c++filt_bin",
+    ],
+)
+
+genrule(name = "ar_bin", srcs = ["//bin:x86_64-linux-cosmo-ar"], outs = ["ar"], cmd_bash = "cp $< $@")
+genrule(name = "as_bin", srcs = ["//libexec/gcc/x86_64-linux-cosmo/11.2.0:as"], outs = ["libexec/gcc/as"], cmd_bash = "cp $< $@")
+genrule(name = "cc1_bin", srcs = ["//libexec/gcc/x86_64-linux-cosmo/11.2.0:cc1"], outs = ["libexec/gcc/cc1"], cmd_bash = "cp $< $@")
+genrule(name = "cc1plus_bin", srcs = ["//libexec/gcc/x86_64-linux-cosmo/11.2.0:cc1plus"], outs = ["libexec/gcc/cc1plus"], cmd_bash = "cp $< $@")
+genrule(name = "collect2_bin", srcs = ["//libexec/gcc/x86_64-linux-cosmo/11.2.0:collect2"], outs = ["libexec/gcc/collect2"], cmd_bash = "cp $< $@")
+genrule(name = "gcc_bin", srcs = ["//bin:x86_64-linux-cosmo-gcc"], outs = ["bin/gcc"], cmd_bash = "cp $< $@")
+genrule(name = "g++_bin", srcs = ["//bin:x86_64-linux-cosmo-g++"], outs = ["bin/g++"], cmd_bash = "cp $< $@")
+alias(name = "ld_bin", actual = ":ld.bfd_bin")
+genrule(name = "ld.bfd_bin", srcs = ["//libexec/gcc/x86_64-linux-cosmo/11.2.0:ld.bfd"], outs = ["libexec/gcc/ld.bfd"], cmd_bash = "cp $< $@")
+genrule(name = "strip_bin", srcs = ["//bin:x86_64-linux-cosmo-strip"], outs = ["strip"], cmd_bash = "cp $< $@")
+genrule(name = "objcopy_bin", srcs = ["//bin:x86_64-linux-cosmo-objcopy"], outs = ["objcopy"], cmd_bash = "cp $< $@")
+genrule(name = "objdump_bin", srcs = ["//bin:x86_64-linux-cosmo-objdump"], outs = ["objdump"], cmd_bash = "cp $< $@")
+genrule(name = "addr2line_bin", srcs = ["//bin:x86_64-linux-cosmo-addr2line"], outs = ["addr2line"], cmd_bash = "cp $< $@")
+alias(name = "cpp_bin", actual = ":gcc_bin")
+genrule(name = "elfedit_bin", srcs = ["//bin:x86_64-linux-cosmo-elfedit"], outs = ["elfedit"], cmd_bash = "cp $< $@")
+genrule(name = "nm_bin", srcs = ["//bin:x86_64-linux-cosmo-nm"], outs = ["nm"], cmd_bash = "cp $< $@")
+genrule(name = "ranlib_bin", srcs = ["//bin:x86_64-linux-cosmo-ranlib"], outs = ["ranlib"], cmd_bash = "cp $< $@")
+genrule(name = "readelf_bin", srcs = ["//bin:x86_64-linux-cosmo-readelf"], outs = ["readelf"], cmd_bash = "cp $< $@")
+genrule(name = "size_bin", srcs = ["//bin:x86_64-linux-cosmo-size"], outs = ["size"], cmd_bash = "cp $< $@")
+alias(name = "c++_bin", actual = ":g++_bin")
+alias(name = "cc_bin", actual = ":gcc_bin")
+genrule(name = "c++filt_bin", srcs = ["//bin:x86_64-linux-cosmo-c++filt"], outs = ["c++filt"], cmd_bash = "cp $< $@")
diff --git a/headers/BUILD b/headers/BUILD
new file mode 100644
index 0000000..8490e3e
--- /dev/null
+++ b/headers/BUILD
@@ -0,0 +1,3617 @@
+package(default_visibility = ["//visibility:public"])
+
+filegroup(
+    name = "include",
+    srcs = [
+        ":.",
+        ":ape",
+        ":arpa",
+        ":libc",
+        ":linux",
+        ":net",
+        ":netinet",
+        ":sys",
+        ":third_party",
+        ":tool",
+    ],
+)
+
+# ape/
+filegroup(
+    name = "ape",
+    srcs = [
+        ":ape/ape.h_hdr",
+        ":ape/ape.internal.h_hdr",
+        ":ape/idata.internal.h_hdr",
+        ":ape/macros.internal.h_hdr",
+        ":ape/notice.inc_hdr",
+        ":ape/relocations.h_hdr",
+        ":ape/sections.internal.h_hdr",
+    ],
+)
+
+genrule(name = "ape/ape.h_hdr", srcs = ["//include:ape/ape.h"], outs = ["ape/ape.h"], cmd_bash = "cp $< $@")
+genrule(name = "ape/ape.internal.h_hdr", srcs = ["//include:ape/ape.internal.h"], outs = ["ape/ape.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "ape/idata.internal.h_hdr", srcs = ["//include:ape/idata.internal.h"], outs = ["ape/idata.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "ape/macros.internal.h_hdr", srcs = ["//include:ape/macros.internal.h"], outs = ["ape/macros.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "ape/notice.inc_hdr", srcs = ["//include:ape/notice.inc"], outs = ["ape/notice.inc"], cmd_bash = "cp $< $@")
+genrule(name = "ape/relocations.h_hdr", srcs = ["//include:ape/relocations.h"], outs = ["ape/relocations.h"], cmd_bash = "cp $< $@")
+genrule(name = "ape/sections.internal.h_hdr", srcs = ["//include:ape/sections.internal.h"], outs = ["ape/sections.internal.h"], cmd_bash = "cp $< $@")
+
+# arpa/
+filegroup(
+    name = "arpa",
+    srcs = [
+        ":arpa/inet.h_hdr",
+    ],
+)
+
+genrule(name = "arpa/inet.h_hdr", srcs = ["//include:arpa/inet.h"], outs = ["arpa/inet.h"], cmd_bash = "cp $< $@")
+
+# libc/
+filegroup(
+    name = "libc",
+    srcs = [
+        ":libc/ar.h_hdr",
+        ":libc/assert.h_hdr",
+        ":libc/atomic.h_hdr",
+        ":libc/c.inc_hdr",
+        ":libc/calls/asan.internal.h_hdr",
+        ":libc/calls/blockcancel.internal.h_hdr",
+        ":libc/calls/cachestat.h_hdr",
+        ":libc/calls/calls.h_hdr",
+        ":libc/calls/cp.internal.h_hdr",
+        ":libc/calls/createfileflags.internal.h_hdr",
+        ":libc/calls/getcontext.inc_hdr",
+        ":libc/calls/groups.internal.h_hdr",
+        ":libc/calls/internal.h_hdr",
+        ":libc/calls/ipc.h_hdr",
+        ":libc/calls/landlock.h_hdr",
+        ":libc/calls/makedev.h_hdr",
+        ":libc/calls/metalfile.internal.h_hdr",
+        ":libc/calls/mount.h_hdr",
+        ":libc/calls/openbsd.internal.h_hdr",
+        ":libc/calls/pledge.h_hdr",
+        ":libc/calls/pledge.internal.h_hdr",
+        ":libc/calls/prctl.internal.h_hdr",
+        ":libc/calls/sched-sysv.internal.h_hdr",
+        ":libc/calls/sig.internal.h_hdr",
+        ":libc/calls/sigtimedwait.h_hdr",
+        ":libc/calls/sigtimedwait.internal.h_hdr",
+        ":libc/calls/state.internal.h_hdr",
+        ":libc/calls/struct/aarch64.internal.h_hdr",
+        ":libc/calls/struct/bpf.internal.h_hdr",
+        ":libc/calls/struct/cpuset.h_hdr",
+        ":libc/calls/struct/dirent.h_hdr",
+        ":libc/calls/struct/fd.internal.h_hdr",
+        ":libc/calls/struct/filter.internal.h_hdr",
+        ":libc/calls/struct/flock.h_hdr",
+        ":libc/calls/struct/flock.internal.h_hdr",
+        ":libc/calls/struct/framebuffercolormap.h_hdr",
+        ":libc/calls/struct/framebufferfixedscreeninfo.h_hdr",
+        ":libc/calls/struct/framebuffervirtualscreeninfo.h_hdr",
+        ":libc/calls/struct/fsid.h_hdr",
+        ":libc/calls/struct/iovec.h_hdr",
+        ":libc/calls/struct/iovec.internal.h_hdr",
+        ":libc/calls/struct/itimerval.h_hdr",
+        ":libc/calls/struct/itimerval.internal.h_hdr",
+        ":libc/calls/struct/metasigaltstack.h_hdr",
+        ":libc/calls/struct/metastat.internal.h_hdr",
+        ":libc/calls/struct/metatermios.internal.h_hdr",
+        ":libc/calls/struct/rlimit.h_hdr",
+        ":libc/calls/struct/rlimit.internal.h_hdr",
+        ":libc/calls/struct/rusage.h_hdr",
+        ":libc/calls/struct/rusage.internal.h_hdr",
+        ":libc/calls/struct/sched_param.h_hdr",
+        ":libc/calls/struct/sched_param.internal.h_hdr",
+        ":libc/calls/struct/seccomp.internal.h_hdr",
+        ":libc/calls/struct/sigaction.h_hdr",
+        ":libc/calls/struct/sigaction.internal.h_hdr",
+        ":libc/calls/struct/sigaltstack.h_hdr",
+        ":libc/calls/struct/sigaltstack.internal.h_hdr",
+        ":libc/calls/struct/siginfo-freebsd.internal.h_hdr",
+        ":libc/calls/struct/siginfo-meta.internal.h_hdr",
+        ":libc/calls/struct/siginfo-netbsd.internal.h_hdr",
+        ":libc/calls/struct/siginfo-openbsd.internal.h_hdr",
+        ":libc/calls/struct/siginfo-xnu.internal.h_hdr",
+        ":libc/calls/struct/siginfo.h_hdr",
+        ":libc/calls/struct/siginfo.internal.h_hdr",
+        ":libc/calls/struct/sigset.h_hdr",
+        ":libc/calls/struct/sigset.internal.h_hdr",
+        ":libc/calls/struct/sigval.h_hdr",
+        ":libc/calls/struct/sigval.internal.h_hdr",
+        ":libc/calls/struct/stat.h_hdr",
+        ":libc/calls/struct/stat.internal.h_hdr",
+        ":libc/calls/struct/stat.macros.h_hdr",
+        ":libc/calls/struct/statfs-freebsd.internal.h_hdr",
+        ":libc/calls/struct/statfs-linux.internal.h_hdr",
+        ":libc/calls/struct/statfs-meta.internal.h_hdr",
+        ":libc/calls/struct/statfs-netbsd.internal.h_hdr",
+        ":libc/calls/struct/statfs-openbsd.internal.h_hdr",
+        ":libc/calls/struct/statfs-xnu.internal.h_hdr",
+        ":libc/calls/struct/statfs.h_hdr",
+        ":libc/calls/struct/statfs.internal.h_hdr",
+        ":libc/calls/struct/statvfs.h_hdr",
+        ":libc/calls/struct/sysinfo.h_hdr",
+        ":libc/calls/struct/sysinfo.internal.h_hdr",
+        ":libc/calls/struct/termios.h_hdr",
+        ":libc/calls/struct/termios.internal.h_hdr",
+        ":libc/calls/struct/timespec.h_hdr",
+        ":libc/calls/struct/timespec.internal.h_hdr",
+        ":libc/calls/struct/timeval.h_hdr",
+        ":libc/calls/struct/timeval.internal.h_hdr",
+        ":libc/calls/struct/tms.h_hdr",
+        ":libc/calls/struct/ucontext-freebsd.internal.h_hdr",
+        ":libc/calls/struct/ucontext-netbsd.internal.h_hdr",
+        ":libc/calls/struct/ucontext-openbsd.internal.h_hdr",
+        ":libc/calls/struct/ucontext.internal.h_hdr",
+        ":libc/calls/struct/user_regs_struct.h_hdr",
+        ":libc/calls/struct/utsname-linux.internal.h_hdr",
+        ":libc/calls/struct/utsname.h_hdr",
+        ":libc/calls/struct/winsize.h_hdr",
+        ":libc/calls/struct/winsize.internal.h_hdr",
+        ":libc/calls/syscall-nt.internal.h_hdr",
+        ":libc/calls/syscall-sysv.internal.h_hdr",
+        ":libc/calls/syscall_support-nt.internal.h_hdr",
+        ":libc/calls/syscall_support-sysv.internal.h_hdr",
+        ":libc/calls/termios.h_hdr",
+        ":libc/calls/termios.internal.h_hdr",
+        ":libc/calls/ttydefaults.h_hdr",
+        ":libc/calls/typedef/u.h_hdr",
+        ":libc/calls/ucontext.h_hdr",
+        ":libc/calls/weirdtypes.h_hdr",
+        ":libc/calls/wincrash.internal.h_hdr",
+        ":libc/complex.h_hdr",
+        ":libc/cosmo.h_hdr",
+        ":libc/cxx.inc_hdr",
+        ":libc/cxxabi.h_hdr",
+        ":libc/cxxtypescompat.inc_hdr",
+        ":libc/dce.h_hdr",
+        ":libc/disclaimer.inc_hdr",
+        ":libc/dlopen/dlfcn.h_hdr",
+        ":libc/dns/consts.h_hdr",
+        ":libc/dns/dns.h_hdr",
+        ":libc/dns/dnsheader.h_hdr",
+        ":libc/dns/dnsquestion.h_hdr",
+        ":libc/dns/ent.h_hdr",
+        ":libc/dns/hoststxt.h_hdr",
+        ":libc/dns/prototxt.h_hdr",
+        ":libc/dns/resolvconf.h_hdr",
+        ":libc/dns/servicestxt.h_hdr",
+        ":libc/dos.internal.h_hdr",
+        ":libc/elf/def.h_hdr",
+        ":libc/elf/elf.h_hdr",
+        ":libc/elf/pf2prot.internal.h_hdr",
+        ":libc/elf/scalar.h_hdr",
+        ":libc/elf/struct/auxv.h_hdr",
+        ":libc/elf/struct/chdr.h_hdr",
+        ":libc/elf/struct/dyn.h_hdr",
+        ":libc/elf/struct/ehdr.h_hdr",
+        ":libc/elf/struct/lib.h_hdr",
+        ":libc/elf/struct/move.h_hdr",
+        ":libc/elf/struct/nhdr.h_hdr",
+        ":libc/elf/struct/phdr.h_hdr",
+        ":libc/elf/struct/rel.h_hdr",
+        ":libc/elf/struct/rela.h_hdr",
+        ":libc/elf/struct/shdr.h_hdr",
+        ":libc/elf/struct/sym.h_hdr",
+        ":libc/elf/struct/syminfo.h_hdr",
+        ":libc/elf/struct/verdaux.h_hdr",
+        ":libc/elf/struct/verdef.h_hdr",
+        ":libc/elf/struct/vernaux.h_hdr",
+        ":libc/elf/struct/verneed.h_hdr",
+        ":libc/elf/tinyelf.internal.h_hdr",
+        ":libc/errno.h_hdr",
+        ":libc/fmt/bing.internal.h_hdr",
+        ":libc/fmt/conv.h_hdr",
+        ":libc/fmt/divmod10.internal.h_hdr",
+        ":libc/fmt/internal.h_hdr",
+        ":libc/fmt/itoa.h_hdr",
+        ":libc/fmt/leb128.h_hdr",
+        ":libc/fmt/libgen.h_hdr",
+        ":libc/fmt/magnumstrs.internal.h_hdr",
+        ":libc/fmt/wintime.internal.h_hdr",
+        ":libc/imag.internal.h_hdr",
+        ":libc/integral/c.inc_hdr",
+        ":libc/integral/cxx.inc_hdr",
+        ":libc/integral/cxxtypescompat.inc_hdr",
+        ":libc/integral/llp64.inc_hdr",
+        ":libc/integral/lp64.inc_hdr",
+        ":libc/integral/lp64arg.inc_hdr",
+        ":libc/integral/normalize.inc_hdr",
+        ":libc/intrin/asan.internal.h_hdr",
+        ":libc/intrin/asancodes.h_hdr",
+        ":libc/intrin/asmflag.h_hdr",
+        ":libc/intrin/atomic.h_hdr",
+        ":libc/intrin/bsf.h_hdr",
+        ":libc/intrin/bsr.h_hdr",
+        ":libc/intrin/bswap.h_hdr",
+        ":libc/intrin/cmpxchg.h_hdr",
+        ":libc/intrin/cxaatexit.internal.h_hdr",
+        ":libc/intrin/describebacktrace.internal.h_hdr",
+        ":libc/intrin/describeflags.internal.h_hdr",
+        ":libc/intrin/describentoverlapped.internal.h_hdr",
+        ":libc/intrin/directmap.internal.h_hdr",
+        ":libc/intrin/dll.h_hdr",
+        ":libc/intrin/dos2errno.internal.h_hdr",
+        ":libc/intrin/extend.internal.h_hdr",
+        ":libc/intrin/getauxval.internal.h_hdr",
+        ":libc/intrin/getenv.internal.h_hdr",
+        ":libc/intrin/hilbert.h_hdr",
+        ":libc/intrin/kprintf.h_hdr",
+        ":libc/intrin/leaky.internal.h_hdr",
+        ":libc/intrin/likely.h_hdr",
+        ":libc/intrin/macros.h_hdr",
+        ":libc/intrin/newbie.h_hdr",
+        ":libc/intrin/nomultics.internal.h_hdr",
+        ":libc/intrin/packsswb.h_hdr",
+        ":libc/intrin/packuswb.h_hdr",
+        ":libc/intrin/paddw.h_hdr",
+        ":libc/intrin/palignr.h_hdr",
+        ":libc/intrin/pandn.h_hdr",
+        ":libc/intrin/pcmpgtb.h_hdr",
+        ":libc/intrin/pcmpgtw.h_hdr",
+        ":libc/intrin/pmaddubsw.h_hdr",
+        ":libc/intrin/pmovmskb.h_hdr",
+        ":libc/intrin/pmulhrsw.h_hdr",
+        ":libc/intrin/popcnt.h_hdr",
+        ":libc/intrin/promises.internal.h_hdr",
+        ":libc/intrin/psraw.h_hdr",
+        ":libc/intrin/punpckhbw.h_hdr",
+        ":libc/intrin/punpckhwd.h_hdr",
+        ":libc/intrin/punpcklbw.h_hdr",
+        ":libc/intrin/punpcklwd.h_hdr",
+        ":libc/intrin/pushpop.internal.h_hdr",
+        ":libc/intrin/repmovsb.h_hdr",
+        ":libc/intrin/repstosb.h_hdr",
+        ":libc/intrin/safemacros.internal.h_hdr",
+        ":libc/intrin/segmentation.h_hdr",
+        ":libc/intrin/setjmp.internal.h_hdr",
+        ":libc/intrin/strace.internal.h_hdr",
+        ":libc/intrin/ulock.h_hdr",
+        ":libc/intrin/weaken.h_hdr",
+        ":libc/intrin/xchg.internal.h_hdr",
+        ":libc/inttypes.h_hdr",
+        ":libc/iso646.internal.h_hdr",
+        ":libc/isystem/algorithm_hdr",
+        ":libc/isystem/alloca.h_hdr",
+        ":libc/isystem/ammintrin.h_hdr",
+        ":libc/isystem/any_hdr",
+        ":libc/isystem/ar.h_hdr",
+        ":libc/isystem/arm_acle.h_hdr",
+        ":libc/isystem/arm_bf16.h_hdr",
+        ":libc/isystem/arm_fp16.h_hdr",
+        ":libc/isystem/arm_neon.h_hdr",
+        ":libc/isystem/arpa/inet.h_hdr",
+        ":libc/isystem/array_hdr",
+        ":libc/isystem/assert.h_hdr",
+        ":libc/isystem/atomic_hdr",
+        ":libc/isystem/bit_hdr",
+        ":libc/isystem/bitset_hdr",
+        ":libc/isystem/byteswap.h_hdr",
+        ":libc/isystem/cassert_hdr",
+        ":libc/isystem/ccomplex_hdr",
+        ":libc/isystem/cctype_hdr",
+        ":libc/isystem/cerrno_hdr",
+        ":libc/isystem/cfenv_hdr",
+        ":libc/isystem/cfloat_hdr",
+        ":libc/isystem/charconv_hdr",
+        ":libc/isystem/chrono_hdr",
+        ":libc/isystem/cinttypes_hdr",
+        ":libc/isystem/ciso646_hdr",
+        ":libc/isystem/climits_hdr",
+        ":libc/isystem/clocale_hdr",
+        ":libc/isystem/clzerointrin.h_hdr",
+        ":libc/isystem/cmath_hdr",
+        ":libc/isystem/codecvt_hdr",
+        ":libc/isystem/compare_hdr",
+        ":libc/isystem/complex.h_hdr",
+        ":libc/isystem/complex_hdr",
+        ":libc/isystem/condition_variable_hdr",
+        ":libc/isystem/cosmo.h_hdr",
+        ":libc/isystem/cpio.h_hdr",
+        ":libc/isystem/cpuid.h_hdr",
+        ":libc/isystem/crypt.h_hdr",
+        ":libc/isystem/csetjmp_hdr",
+        ":libc/isystem/csignal_hdr",
+        ":libc/isystem/cstdarg_hdr",
+        ":libc/isystem/cstdbool_hdr",
+        ":libc/isystem/cstddef_hdr",
+        ":libc/isystem/cstdint_hdr",
+        ":libc/isystem/cstdio_hdr",
+        ":libc/isystem/cstdlib_hdr",
+        ":libc/isystem/cstring_hdr",
+        ":libc/isystem/ctgmath_hdr",
+        ":libc/isystem/ctime_hdr",
+        ":libc/isystem/ctype.h_hdr",
+        ":libc/isystem/cwchar_hdr",
+        ":libc/isystem/cwctype_hdr",
+        ":libc/isystem/cxxabi.h_hdr",
+        ":libc/isystem/deque_hdr",
+        ":libc/isystem/dirent.h_hdr",
+        ":libc/isystem/dlfcn.h_hdr",
+        ":libc/isystem/elf.h_hdr",
+        ":libc/isystem/emmintrin.h_hdr",
+        ":libc/isystem/endian.h_hdr",
+        ":libc/isystem/err.h_hdr",
+        ":libc/isystem/errno.h_hdr",
+        ":libc/isystem/exception_hdr",
+        ":libc/isystem/execution_hdr",
+        ":libc/isystem/fcntl.h_hdr",
+        ":libc/isystem/features.h_hdr",
+        ":libc/isystem/fenv.h_hdr",
+        ":libc/isystem/filesystem_hdr",
+        ":libc/isystem/float.h_hdr",
+        ":libc/isystem/fnmatch.h_hdr",
+        ":libc/isystem/forward_list_hdr",
+        ":libc/isystem/fstream_hdr",
+        ":libc/isystem/ftw.h_hdr",
+        ":libc/isystem/functional_hdr",
+        ":libc/isystem/future_hdr",
+        ":libc/isystem/getopt.h_hdr",
+        ":libc/isystem/glob.h_hdr",
+        ":libc/isystem/grp.h_hdr",
+        ":libc/isystem/iconv.h_hdr",
+        ":libc/isystem/ifaddrs.h_hdr",
+        ":libc/isystem/immintrin.h_hdr",
+        ":libc/isystem/initializer_list_hdr",
+        ":libc/isystem/inttypes.h_hdr",
+        ":libc/isystem/iomanip_hdr",
+        ":libc/isystem/ios_hdr",
+        ":libc/isystem/iosfwd_hdr",
+        ":libc/isystem/iostream_hdr",
+        ":libc/isystem/iso646.h_hdr",
+        ":libc/isystem/istream_hdr",
+        ":libc/isystem/iterator_hdr",
+        ":libc/isystem/langinfo.h_hdr",
+        ":libc/isystem/libgen.h_hdr",
+        ":libc/isystem/limits.h_hdr",
+        ":libc/isystem/limits_hdr",
+        ":libc/isystem/linux/futex.h_hdr",
+        ":libc/isystem/linux/limits.h_hdr",
+        ":libc/isystem/linux/param.h_hdr",
+        ":libc/isystem/linux/types.h_hdr",
+        ":libc/isystem/list_hdr",
+        ":libc/isystem/locale.h_hdr",
+        ":libc/isystem/locale_hdr",
+        ":libc/isystem/malloc.h_hdr",
+        ":libc/isystem/map_hdr",
+        ":libc/isystem/math.h_hdr",
+        ":libc/isystem/memory.h_hdr",
+        ":libc/isystem/memory_hdr",
+        ":libc/isystem/mm3dnow.h_hdr",
+        ":libc/isystem/mm_malloc.h_hdr",
+        ":libc/isystem/mmintrin.h_hdr",
+        ":libc/isystem/mntent.h_hdr",
+        ":libc/isystem/monetary.h_hdr",
+        ":libc/isystem/mutex_hdr",
+        ":libc/isystem/mwaitxintrin.h_hdr",
+        ":libc/isystem/net/ethernet.h_hdr",
+        ":libc/isystem/net/if.h_hdr",
+        ":libc/isystem/net/if_arp.h_hdr",
+        ":libc/isystem/netdb.h_hdr",
+        ":libc/isystem/netinet/in.h_hdr",
+        ":libc/isystem/netinet/ip.h_hdr",
+        ":libc/isystem/netinet/tcp.h_hdr",
+        ":libc/isystem/netinet/udp.h_hdr",
+        ":libc/isystem/new_hdr",
+        ":libc/isystem/nl_types.h_hdr",
+        ":libc/isystem/nmmintrin.h_hdr",
+        ":libc/isystem/nsync.h_hdr",
+        ":libc/isystem/nsync_atomic.h_hdr",
+        ":libc/isystem/nsync_counter.h_hdr",
+        ":libc/isystem/nsync_cv.h_hdr",
+        ":libc/isystem/nsync_debug.h_hdr",
+        ":libc/isystem/nsync_mu.h_hdr",
+        ":libc/isystem/nsync_mu_wait.h_hdr",
+        ":libc/isystem/nsync_note.h_hdr",
+        ":libc/isystem/nsync_once.h_hdr",
+        ":libc/isystem/nsync_time.h_hdr",
+        ":libc/isystem/nsync_waiter.h_hdr",
+        ":libc/isystem/numeric_hdr",
+        ":libc/isystem/optional_hdr",
+        ":libc/isystem/ostream_hdr",
+        ":libc/isystem/paths.h_hdr",
+        ":libc/isystem/pmmintrin.h_hdr",
+        ":libc/isystem/poll.h_hdr",
+        ":libc/isystem/popcntintrin.h_hdr",
+        ":libc/isystem/pthread.h_hdr",
+        ":libc/isystem/pty.h_hdr",
+        ":libc/isystem/pwd.h_hdr",
+        ":libc/isystem/queue_hdr",
+        ":libc/isystem/random_hdr",
+        ":libc/isystem/ratio_hdr",
+        ":libc/isystem/regex.h_hdr",
+        ":libc/isystem/regex_hdr",
+        ":libc/isystem/sched.h_hdr",
+        ":libc/isystem/scoped_allocator_hdr",
+        ":libc/isystem/search.h_hdr",
+        ":libc/isystem/semaphore.h_hdr",
+        ":libc/isystem/set_hdr",
+        ":libc/isystem/setjmp.h_hdr",
+        ":libc/isystem/sgxintrin.h_hdr",
+        ":libc/isystem/shared_mutex_hdr",
+        ":libc/isystem/signal.h_hdr",
+        ":libc/isystem/smmintrin.h_hdr",
+        ":libc/isystem/span_hdr",
+        ":libc/isystem/spawn.h_hdr",
+        ":libc/isystem/sstream_hdr",
+        ":libc/isystem/stack_hdr",
+        ":libc/isystem/stdalign.h_hdr",
+        ":libc/isystem/stdarg.h_hdr",
+        ":libc/isystem/stdatomic.h_hdr",
+        ":libc/isystem/stdbool.h_hdr",
+        ":libc/isystem/stdc-predef.h_hdr",
+        ":libc/isystem/stdckdint.h_hdr",
+        ":libc/isystem/stddef.h_hdr",
+        ":libc/isystem/stdexcept_hdr",
+        ":libc/isystem/stdint.h_hdr",
+        ":libc/isystem/stdio.h_hdr",
+        ":libc/isystem/stdio_ext.h_hdr",
+        ":libc/isystem/stdlib.h_hdr",
+        ":libc/isystem/stdnoreturn.h_hdr",
+        ":libc/isystem/streambuf_hdr",
+        ":libc/isystem/string.h_hdr",
+        ":libc/isystem/string_hdr",
+        ":libc/isystem/string_view_hdr",
+        ":libc/isystem/strings.h_hdr",
+        ":libc/isystem/strstream_hdr",
+        ":libc/isystem/sys/auxv.h_hdr",
+        ":libc/isystem/sys/cdefs.h_hdr",
+        ":libc/isystem/sys/dir.h_hdr",
+        ":libc/isystem/sys/errno.h_hdr",
+        ":libc/isystem/sys/event.h_hdr",
+        ":libc/isystem/sys/fcntl.h_hdr",
+        ":libc/isystem/sys/file.h_hdr",
+        ":libc/isystem/sys/ioctl.h_hdr",
+        ":libc/isystem/sys/ipc.h_hdr",
+        ":libc/isystem/sys/mman.h_hdr",
+        ":libc/isystem/sys/mount.h_hdr",
+        ":libc/isystem/sys/msg.h_hdr",
+        ":libc/isystem/sys/param.h_hdr",
+        ":libc/isystem/sys/poll.h_hdr",
+        ":libc/isystem/sys/prctl.h_hdr",
+        ":libc/isystem/sys/procfs.h_hdr",
+        ":libc/isystem/sys/ptrace.h_hdr",
+        ":libc/isystem/sys/random.h_hdr",
+        ":libc/isystem/sys/reboot.h_hdr",
+        ":libc/isystem/sys/resource.h_hdr",
+        ":libc/isystem/sys/select.h_hdr",
+        ":libc/isystem/sys/sendfile.h_hdr",
+        ":libc/isystem/sys/signal.h_hdr",
+        ":libc/isystem/sys/socket.h_hdr",
+        ":libc/isystem/sys/stat.h_hdr",
+        ":libc/isystem/sys/statfs.h_hdr",
+        ":libc/isystem/sys/statvfs.h_hdr",
+        ":libc/isystem/sys/syscall.h_hdr",
+        ":libc/isystem/sys/sysinfo.h_hdr",
+        ":libc/isystem/sys/sysmacros.h_hdr",
+        ":libc/isystem/sys/termios.h_hdr",
+        ":libc/isystem/sys/time.h_hdr",
+        ":libc/isystem/sys/times.h_hdr",
+        ":libc/isystem/sys/ttydefaults.h_hdr",
+        ":libc/isystem/sys/types.h_hdr",
+        ":libc/isystem/sys/ucontext.h_hdr",
+        ":libc/isystem/sys/uio.h_hdr",
+        ":libc/isystem/sys/un.h_hdr",
+        ":libc/isystem/sys/user.h_hdr",
+        ":libc/isystem/sys/utsname.h_hdr",
+        ":libc/isystem/sys/vfs.h_hdr",
+        ":libc/isystem/sys/wait.h_hdr",
+        ":libc/isystem/sysexits.h_hdr",
+        ":libc/isystem/syslog.h_hdr",
+        ":libc/isystem/system_error_hdr",
+        ":libc/isystem/termios.h_hdr",
+        ":libc/isystem/tgmath.h_hdr",
+        ":libc/isystem/thread_hdr",
+        ":libc/isystem/time.h_hdr",
+        ":libc/isystem/tmmintrin.h_hdr",
+        ":libc/isystem/tuple_hdr",
+        ":libc/isystem/type_traits_hdr",
+        ":libc/isystem/typeindex_hdr",
+        ":libc/isystem/typeinfo_hdr",
+        ":libc/isystem/uchar.h_hdr",
+        ":libc/isystem/ucontext.h_hdr",
+        ":libc/isystem/uio.h_hdr",
+        ":libc/isystem/unistd.h_hdr",
+        ":libc/isystem/unordered_map_hdr",
+        ":libc/isystem/unordered_set_hdr",
+        ":libc/isystem/utility_hdr",
+        ":libc/isystem/utime.h_hdr",
+        ":libc/isystem/utmp.h_hdr",
+        ":libc/isystem/utmpx.h_hdr",
+        ":libc/isystem/valarray_hdr",
+        ":libc/isystem/variant_hdr",
+        ":libc/isystem/vector_hdr",
+        ":libc/isystem/version_hdr",
+        ":libc/isystem/wait.h_hdr",
+        ":libc/isystem/wchar.h_hdr",
+        ":libc/isystem/wctype.h_hdr",
+        ":libc/isystem/winternl.h_hdr",
+        ":libc/isystem/wmmintrin.h_hdr",
+        ":libc/isystem/x86intrin.h_hdr",
+        ":libc/isystem/xmmintrin.h_hdr",
+        ":libc/limits.h_hdr",
+        ":libc/literal.h_hdr",
+        ":libc/llp64.inc_hdr",
+        ":libc/log/appendresourcereport.internal.h_hdr",
+        ":libc/log/backtrace.internal.h_hdr",
+        ":libc/log/bsd.h_hdr",
+        ":libc/log/check.h_hdr",
+        ":libc/log/color.internal.h_hdr",
+        ":libc/log/countbranch.h_hdr",
+        ":libc/log/countexpr.h_hdr",
+        ":libc/log/gdb.h_hdr",
+        ":libc/log/getcallername.internal.h_hdr",
+        ":libc/log/internal.h_hdr",
+        ":libc/log/libfatal.internal.h_hdr",
+        ":libc/log/log.h_hdr",
+        ":libc/log/rop.internal.h_hdr",
+        ":libc/log/traceme.h_hdr",
+        ":libc/lp64.inc_hdr",
+        ":libc/lp64arg.inc_hdr",
+        ":libc/mach.internal.h_hdr",
+        ":libc/macho.internal.h_hdr",
+        ":libc/macros.internal.h_hdr",
+        ":libc/math.h_hdr",
+        ":libc/mem/alg.h_hdr",
+        ":libc/mem/alloca.h_hdr",
+        ":libc/mem/arraylist.internal.h_hdr",
+        ":libc/mem/arraylist2.internal.h_hdr",
+        ":libc/mem/bisect.internal.h_hdr",
+        ":libc/mem/critbit0.h_hdr",
+        ":libc/mem/gc.h_hdr",
+        ":libc/mem/gc.internal.h_hdr",
+        ":libc/mem/hook.internal.h_hdr",
+        ":libc/mem/internal.h_hdr",
+        ":libc/mem/mem.h_hdr",
+        ":libc/mem/reverse.internal.h_hdr",
+        ":libc/mem/shuffle.internal.h_hdr",
+        ":libc/mem/sortedints.internal.h_hdr",
+        ":libc/nexgen32e/bench.h_hdr",
+        ":libc/nexgen32e/cachesize.h_hdr",
+        ":libc/nexgen32e/cpuid4.internal.h_hdr",
+        ":libc/nexgen32e/crc32.h_hdr",
+        ":libc/nexgen32e/ffs.h_hdr",
+        ":libc/nexgen32e/gc.internal.h_hdr",
+        ":libc/nexgen32e/hascharacter.internal.h_hdr",
+        ":libc/nexgen32e/kcpuids.h_hdr",
+        ":libc/nexgen32e/kompressor.h_hdr",
+        ":libc/nexgen32e/lz4.h_hdr",
+        ":libc/nexgen32e/macros.h_hdr",
+        ":libc/nexgen32e/macros.internal.inc_hdr",
+        ":libc/nexgen32e/msr.internal.h_hdr",
+        ":libc/nexgen32e/nexgen32e.h_hdr",
+        ":libc/nexgen32e/nt2sysv.h_hdr",
+        ":libc/nexgen32e/pcmpstr.inc_hdr",
+        ":libc/nexgen32e/rdtsc.h_hdr",
+        ":libc/nexgen32e/rdtscp.h_hdr",
+        ":libc/nexgen32e/sha.h_hdr",
+        ":libc/nexgen32e/stackframe.h_hdr",
+        ":libc/nexgen32e/trampoline.h_hdr",
+        ":libc/nexgen32e/uart.internal.h_hdr",
+        ":libc/nexgen32e/vendor.internal.h_hdr",
+        ":libc/nexgen32e/vidya.internal.h_hdr",
+        ":libc/nexgen32e/x86compiler.h_hdr",
+        ":libc/nexgen32e/x86feature.h_hdr",
+        ":libc/nexgen32e/x86info.h_hdr",
+        ":libc/nexgen32e/x87conf.inc_hdr",
+        ":libc/nexgen32e/yield.h_hdr",
+        ":libc/normalize.inc_hdr",
+        ":libc/notice.inc_hdr",
+        ":libc/notice.internal.h_hdr",
+        ":libc/nt/accounting.h_hdr",
+        ":libc/nt/automation.h_hdr",
+        ":libc/nt/codegen.h_hdr",
+        ":libc/nt/comdlg.h_hdr",
+        ":libc/nt/comms.h_hdr",
+        ":libc/nt/console.h_hdr",
+        ":libc/nt/createfile.h_hdr",
+        ":libc/nt/debug.h_hdr",
+        ":libc/nt/dll.h_hdr",
+        ":libc/nt/efi.h_hdr",
+        ":libc/nt/enum/accessmask.h_hdr",
+        ":libc/nt/enum/afd.h_hdr",
+        ":libc/nt/enum/bitblt.h_hdr",
+        ":libc/nt/enum/callback.h_hdr",
+        ":libc/nt/enum/color.h_hdr",
+        ":libc/nt/enum/computernameformat.h_hdr",
+        ":libc/nt/enum/consolemodeflags.h_hdr",
+        ":libc/nt/enum/consoleselectionflags.h_hdr",
+        ":libc/nt/enum/context.h_hdr",
+        ":libc/nt/enum/copyfile.h_hdr",
+        ":libc/nt/enum/creationdisposition.h_hdr",
+        ":libc/nt/enum/cs.h_hdr",
+        ":libc/nt/enum/ctrlevent.h_hdr",
+        ":libc/nt/enum/cw.h_hdr",
+        ":libc/nt/enum/dialogresult.h_hdr",
+        ":libc/nt/enum/errormodeflags.h_hdr",
+        ":libc/nt/enum/event.h_hdr",
+        ":libc/nt/enum/eventtype.h_hdr",
+        ":libc/nt/enum/exceptionhandleractions.h_hdr",
+        ":libc/nt/enum/fileflagandattributes.h_hdr",
+        ":libc/nt/enum/fileinfobyhandleclass.h_hdr",
+        ":libc/nt/enum/fileinformationclass.h_hdr",
+        ":libc/nt/enum/filelockflags.h_hdr",
+        ":libc/nt/enum/filemapflags.h_hdr",
+        ":libc/nt/enum/filemovemethod.h_hdr",
+        ":libc/nt/enum/filesharemode.h_hdr",
+        ":libc/nt/enum/filetype.h_hdr",
+        ":libc/nt/enum/fillattribute.h_hdr",
+        ":libc/nt/enum/findexinfolevels.h_hdr",
+        ":libc/nt/enum/findexsearchops.h_hdr",
+        ":libc/nt/enum/formatmessageflags.h_hdr",
+        ":libc/nt/enum/fsctl.h_hdr",
+        ":libc/nt/enum/fsinformationclass.h_hdr",
+        ":libc/nt/enum/getfileexinfolevels.h_hdr",
+        ":libc/nt/enum/heap.h_hdr",
+        ":libc/nt/enum/ht.h_hdr",
+        ":libc/nt/enum/idc.h_hdr",
+        ":libc/nt/enum/imageauxsymboltype.h_hdr",
+        ":libc/nt/enum/importobjectnametype.h_hdr",
+        ":libc/nt/enum/importobjecttype.h_hdr",
+        ":libc/nt/enum/io.h_hdr",
+        ":libc/nt/enum/ioctl.h_hdr",
+        ":libc/nt/enum/jobobjectinfoclass.h_hdr",
+        ":libc/nt/enum/keyaccess.h_hdr",
+        ":libc/nt/enum/keyedevent.h_hdr",
+        ":libc/nt/enum/keyinformationclass.h_hdr",
+        ":libc/nt/enum/kwaitreason.h_hdr",
+        ":libc/nt/enum/lang.h_hdr",
+        ":libc/nt/enum/loadlibrarysearch.h_hdr",
+        ":libc/nt/enum/lockfile.h_hdr",
+        ":libc/nt/enum/mb.h_hdr",
+        ":libc/nt/enum/memflags.h_hdr",
+        ":libc/nt/enum/memoryinformationclass.h_hdr",
+        ":libc/nt/enum/mf.h_hdr",
+        ":libc/nt/enum/mk.h_hdr",
+        ":libc/nt/enum/movefileexflags.h_hdr",
+        ":libc/nt/enum/objectinformationclass.h_hdr",
+        ":libc/nt/enum/offerpriority.h_hdr",
+        ":libc/nt/enum/ofn.h_hdr",
+        ":libc/nt/enum/pageflags.h_hdr",
+        ":libc/nt/enum/pdh.h_hdr",
+        ":libc/nt/enum/processaccess.h_hdr",
+        ":libc/nt/enum/processcreationflags.h_hdr",
+        ":libc/nt/enum/processinfoclass.h_hdr",
+        ":libc/nt/enum/procthreadattributes.h_hdr",
+        ":libc/nt/enum/progress.h_hdr",
+        ":libc/nt/enum/pwr.h_hdr",
+        ":libc/nt/enum/rdw.h_hdr",
+        ":libc/nt/enum/reggetvalueflags.h_hdr",
+        ":libc/nt/enum/regtype.h_hdr",
+        ":libc/nt/enum/replacefile.h_hdr",
+        ":libc/nt/enum/sc.h_hdr",
+        ":libc/nt/enum/sectioninformationclass.h_hdr",
+        ":libc/nt/enum/sectioninherit.h_hdr",
+        ":libc/nt/enum/sectionmapflags.h_hdr",
+        ":libc/nt/enum/securityimpersonationlevel.h_hdr",
+        ":libc/nt/enum/securityinformation.h_hdr",
+        ":libc/nt/enum/signal.h_hdr",
+        ":libc/nt/enum/sio.h_hdr",
+        ":libc/nt/enum/size.h_hdr",
+        ":libc/nt/enum/startf.h_hdr",
+        ":libc/nt/enum/statfs.h_hdr",
+        ":libc/nt/enum/status.h_hdr",
+        ":libc/nt/enum/sw.h_hdr",
+        ":libc/nt/enum/symboliclink.h_hdr",
+        ":libc/nt/enum/systeminformationclass.h_hdr",
+        ":libc/nt/enum/th32cs.h_hdr",
+        ":libc/nt/enum/threadaccess.h_hdr",
+        ":libc/nt/enum/threadinfoclass.h_hdr",
+        ":libc/nt/enum/threadpriority.h_hdr",
+        ":libc/nt/enum/threadstate.h_hdr",
+        ":libc/nt/enum/tokeninformationclass.h_hdr",
+        ":libc/nt/enum/tokentype.h_hdr",
+        ":libc/nt/enum/tpm.h_hdr",
+        ":libc/nt/enum/valueinformationclass.h_hdr",
+        ":libc/nt/enum/version.h_hdr",
+        ":libc/nt/enum/vk.h_hdr",
+        ":libc/nt/enum/wa.h_hdr",
+        ":libc/nt/enum/wait.h_hdr",
+        ":libc/nt/enum/wm.h_hdr",
+        ":libc/nt/enum/ws.h_hdr",
+        ":libc/nt/enum/wsa.h_hdr",
+        ":libc/nt/enum/wsaid.h_hdr",
+        ":libc/nt/enum/wt.h_hdr",
+        ":libc/nt/errors.h_hdr",
+        ":libc/nt/events.h_hdr",
+        ":libc/nt/files.h_hdr",
+        ":libc/nt/iocp.h_hdr",
+        ":libc/nt/ipc.h_hdr",
+        ":libc/nt/iphlpapi.h_hdr",
+        ":libc/nt/memory.h_hdr",
+        ":libc/nt/messagebox.h_hdr",
+        ":libc/nt/nt/debug.h_hdr",
+        ":libc/nt/nt/file.h_hdr",
+        ":libc/nt/nt/ipc.h_hdr",
+        ":libc/nt/nt/key.h_hdr",
+        ":libc/nt/nt/loader.h_hdr",
+        ":libc/nt/nt/memory.h_hdr",
+        ":libc/nt/nt/process.h_hdr",
+        ":libc/nt/nt/sections.h_hdr",
+        ":libc/nt/nt/signing.h_hdr",
+        ":libc/nt/nt/thread.h_hdr",
+        ":libc/nt/nt/thunk/process.inc_hdr",
+        ":libc/nt/nt/thunk/time.inc_hdr",
+        ":libc/nt/nt/time.h_hdr",
+        ":libc/nt/ntdll.h_hdr",
+        ":libc/nt/ntdllimport.h_hdr",
+        ":libc/nt/paint.h_hdr",
+        ":libc/nt/pdh.h_hdr",
+        ":libc/nt/pedef.internal.h_hdr",
+        ":libc/nt/privilege.h_hdr",
+        ":libc/nt/process.h_hdr",
+        ":libc/nt/registry.h_hdr",
+        ":libc/nt/runtime.h_hdr",
+        ":libc/nt/signals.h_hdr",
+        ":libc/nt/startupinfo.h_hdr",
+        ":libc/nt/struct/acl.h_hdr",
+        ":libc/nt/struct/afd.h_hdr",
+        ":libc/nt/struct/ansistring.h_hdr",
+        ":libc/nt/struct/byhandlefileinformation.h_hdr",
+        ":libc/nt/struct/charinfo.h_hdr",
+        ":libc/nt/struct/clientid.h_hdr",
+        ":libc/nt/struct/consolecursorinfo.h_hdr",
+        ":libc/nt/struct/consolescreenbufferinfo.h_hdr",
+        ":libc/nt/struct/consolescreenbufferinfoex.h_hdr",
+        ":libc/nt/struct/consoleselectioninfo.h_hdr",
+        ":libc/nt/struct/context.h_hdr",
+        ":libc/nt/struct/coord.h_hdr",
+        ":libc/nt/struct/criticalsection.h_hdr",
+        ":libc/nt/struct/criticalsectiondebug.h_hdr",
+        ":libc/nt/struct/drawtextparams.h_hdr",
+        ":libc/nt/struct/editmenu.h_hdr",
+        ":libc/nt/struct/exceptionframe.h_hdr",
+        ":libc/nt/struct/fdset.h_hdr",
+        ":libc/nt/struct/fileaccessinformation.h_hdr",
+        ":libc/nt/struct/filealignmentinformation.h_hdr",
+        ":libc/nt/struct/fileallinformation.h_hdr",
+        ":libc/nt/struct/fileallocationinformation.h_hdr",
+        ":libc/nt/struct/fileattributetaginformation.h_hdr",
+        ":libc/nt/struct/filebasicinfo.h_hdr",
+        ":libc/nt/struct/filebasicinformation.h_hdr",
+        ":libc/nt/struct/filebothdirectoryinformation.h_hdr",
+        ":libc/nt/struct/filecompressioninfo.h_hdr",
+        ":libc/nt/struct/filedirectoryinformation.h_hdr",
+        ":libc/nt/struct/filedispositioninformation.h_hdr",
+        ":libc/nt/struct/fileeainformation.h_hdr",
+        ":libc/nt/struct/fileendoffileinformation.h_hdr",
+        ":libc/nt/struct/filefsfullsizeinformation.h_hdr",
+        ":libc/nt/struct/filefulldirectoryinformation.h_hdr",
+        ":libc/nt/struct/filefulleainformation.h_hdr",
+        ":libc/nt/struct/fileinternalinformation.h_hdr",
+        ":libc/nt/struct/filemailslotqueryinformation.h_hdr",
+        ":libc/nt/struct/filemailslotsetinformation.h_hdr",
+        ":libc/nt/struct/filemodeinformation.h_hdr",
+        ":libc/nt/struct/filenameinformation.h_hdr",
+        ":libc/nt/struct/filenamesinformation.h_hdr",
+        ":libc/nt/struct/filenetworkopeninformation.h_hdr",
+        ":libc/nt/struct/filepipelocalinformation.h_hdr",
+        ":libc/nt/struct/filepositioninformation.h_hdr",
+        ":libc/nt/struct/filerenameinformation.h_hdr",
+        ":libc/nt/struct/filesegmentelement.h_hdr",
+        ":libc/nt/struct/filestandardinformation.h_hdr",
+        ":libc/nt/struct/filestreaminformation.h_hdr",
+        ":libc/nt/struct/filetime.h_hdr",
+        ":libc/nt/struct/filezerodatainformation.h_hdr",
+        ":libc/nt/struct/fpodata.h_hdr",
+        ":libc/nt/struct/genericmapping.h_hdr",
+        ":libc/nt/struct/guid.h_hdr",
+        ":libc/nt/struct/imagearchivememberheader.internal.h_hdr",
+        ":libc/nt/struct/imageauxsymbol.internal.h_hdr",
+        ":libc/nt/struct/imageauxsymbolex.internal.h_hdr",
+        ":libc/nt/struct/imageauxsymboltokendef.internal.h_hdr",
+        ":libc/nt/struct/imagebaserelocation.internal.h_hdr",
+        ":libc/nt/struct/imageboundforwarderref.internal.h_hdr",
+        ":libc/nt/struct/imageboundimportdescriptor.internal.h_hdr",
+        ":libc/nt/struct/imageceruntimefunctionentry.internal.h_hdr",
+        ":libc/nt/struct/imagecoffsymbolsheader.internal.h_hdr",
+        ":libc/nt/struct/imagedatadirectory.internal.h_hdr",
+        ":libc/nt/struct/imagedebugdirectory.internal.h_hdr",
+        ":libc/nt/struct/imagedebugmisc.internal.h_hdr",
+        ":libc/nt/struct/imagedelayloaddescriptor.internal.h_hdr",
+        ":libc/nt/struct/imagedosheader.internal.h_hdr",
+        ":libc/nt/struct/imagedynamicrelocation.internal.h_hdr",
+        ":libc/nt/struct/imagedynamicrelocationtable.internal.h_hdr",
+        ":libc/nt/struct/imagedynamicrelocationv2.internal.h_hdr",
+        ":libc/nt/struct/imageenclaveconfig.internal.h_hdr",
+        ":libc/nt/struct/imageenclaveimport.internal.h_hdr",
+        ":libc/nt/struct/imageepiloguedynamicrelocationheader.internal.h_hdr",
+        ":libc/nt/struct/imageexportdirectory.internal.h_hdr",
+        ":libc/nt/struct/imagefileheader.internal.h_hdr",
+        ":libc/nt/struct/imagehotpatchbase.internal.h_hdr",
+        ":libc/nt/struct/imagehotpatchhashes.internal.h_hdr",
+        ":libc/nt/struct/imagehotpatchinfo.internal.h_hdr",
+        ":libc/nt/struct/imageimportbyname.internal.h_hdr",
+        ":libc/nt/struct/imageimportdescriptor.internal.h_hdr",
+        ":libc/nt/struct/imagelinenumber.internal.h_hdr",
+        ":libc/nt/struct/imageloadconfigcodeintegrity.internal.h_hdr",
+        ":libc/nt/struct/imageloadconfigdirectory.internal.h_hdr",
+        ":libc/nt/struct/imagentheaders.internal.h_hdr",
+        ":libc/nt/struct/imageoptionalheader.internal.h_hdr",
+        ":libc/nt/struct/imageprologuedynamicrelocationheader.internal.h_hdr",
+        ":libc/nt/struct/imagerelocation.internal.h_hdr",
+        ":libc/nt/struct/imageresourcedataentry.internal.h_hdr",
+        ":libc/nt/struct/imageresourcedirectory.internal.h_hdr",
+        ":libc/nt/struct/imageresourcedirectoryentry.internal.h_hdr",
+        ":libc/nt/struct/imageresourcedirstring.internal.h_hdr",
+        ":libc/nt/struct/imageromoptionalheader.internal.h_hdr",
+        ":libc/nt/struct/imageruntimefunctionentry.internal.h_hdr",
+        ":libc/nt/struct/imagesectionheader.internal.h_hdr",
+        ":libc/nt/struct/imageseparatedebugheader.internal.h_hdr",
+        ":libc/nt/struct/imagesymbol.internal.h_hdr",
+        ":libc/nt/struct/imagesymbolex.internal.h_hdr",
+        ":libc/nt/struct/imagethunkdata.internal.h_hdr",
+        ":libc/nt/struct/imagetlsdirectory.internal.h_hdr",
+        ":libc/nt/struct/importobjectheader.internal.h_hdr",
+        ":libc/nt/struct/inputrecord.h_hdr",
+        ":libc/nt/struct/iocounters.h_hdr",
+        ":libc/nt/struct/iostatusblock.h_hdr",
+        ":libc/nt/struct/iovec.h_hdr",
+        ":libc/nt/struct/ipadapteraddresses.h_hdr",
+        ":libc/nt/struct/kernelusertimes.h_hdr",
+        ":libc/nt/struct/ldr.h_hdr",
+        ":libc/nt/struct/ldrdatatableentry.h_hdr",
+        ":libc/nt/struct/linger.h_hdr",
+        ":libc/nt/struct/linkedlist.h_hdr",
+        ":libc/nt/struct/luid.h_hdr",
+        ":libc/nt/struct/luidandattributes.h_hdr",
+        ":libc/nt/struct/memorybasicinformation.h_hdr",
+        ":libc/nt/struct/memoryrangeentry.h_hdr",
+        ":libc/nt/struct/memorystatusex.h_hdr",
+        ":libc/nt/struct/msg.h_hdr",
+        ":libc/nt/struct/nonpageddebuginfo.h_hdr",
+        ":libc/nt/struct/ntexceptionpointers.h_hdr",
+        ":libc/nt/struct/ntexceptionrecord.h_hdr",
+        ":libc/nt/struct/objectallinformation.h_hdr",
+        ":libc/nt/struct/objectattributes.h_hdr",
+        ":libc/nt/struct/objectbasicinformation.h_hdr",
+        ":libc/nt/struct/objectnameinformation.h_hdr",
+        ":libc/nt/struct/objecttypeinformation.h_hdr",
+        ":libc/nt/struct/openfilename.h_hdr",
+        ":libc/nt/struct/osversioninfo.h_hdr",
+        ":libc/nt/struct/overlapped.h_hdr",
+        ":libc/nt/struct/overlappedentry.h_hdr",
+        ":libc/nt/struct/paintstruct.h_hdr",
+        ":libc/nt/struct/pdhfmtcountervalue.h_hdr",
+        ":libc/nt/struct/peb.h_hdr",
+        ":libc/nt/struct/point.h_hdr",
+        ":libc/nt/struct/pollfd.h_hdr",
+        ":libc/nt/struct/privilegeset.h_hdr",
+        ":libc/nt/struct/processbasicinformation.h_hdr",
+        ":libc/nt/struct/processentry32.h_hdr",
+        ":libc/nt/struct/processinformation.h_hdr",
+        ":libc/nt/struct/processmemorycounters.h_hdr",
+        ":libc/nt/struct/procthreadattributelist.h_hdr",
+        ":libc/nt/struct/rect.h_hdr",
+        ":libc/nt/struct/reparsedatabuffer.h_hdr",
+        ":libc/nt/struct/rtluserprocessinformation.h_hdr",
+        ":libc/nt/struct/rtluserprocessparameters.h_hdr",
+        ":libc/nt/struct/sectionimageinformation.h_hdr",
+        ":libc/nt/struct/securityattributes.h_hdr",
+        ":libc/nt/struct/securitydescriptor.h_hdr",
+        ":libc/nt/struct/size.h_hdr",
+        ":libc/nt/struct/smallrect.h_hdr",
+        ":libc/nt/struct/startupinfo.h_hdr",
+        ":libc/nt/struct/startupinfoex.h_hdr",
+        ":libc/nt/struct/systembasicinformation.h_hdr",
+        ":libc/nt/struct/systemexceptioninformation.h_hdr",
+        ":libc/nt/struct/systemhandleentry.h_hdr",
+        ":libc/nt/struct/systemhandleinformation.h_hdr",
+        ":libc/nt/struct/systeminfo.h_hdr",
+        ":libc/nt/struct/systeminterruptinformation.h_hdr",
+        ":libc/nt/struct/systemlookasideinformation.h_hdr",
+        ":libc/nt/struct/systemperformanceinformation.h_hdr",
+        ":libc/nt/struct/systemprocessinformation.h_hdr",
+        ":libc/nt/struct/systemprocessorinformation.h_hdr",
+        ":libc/nt/struct/systemprocessorperformanceinformation.h_hdr",
+        ":libc/nt/struct/systemregistryquotainformation.h_hdr",
+        ":libc/nt/struct/systemthreads.h_hdr",
+        ":libc/nt/struct/systemtime.h_hdr",
+        ":libc/nt/struct/systemtimeofdayinformation.h_hdr",
+        ":libc/nt/struct/teb.h_hdr",
+        ":libc/nt/struct/timeval.h_hdr",
+        ":libc/nt/struct/tokenprivileges.h_hdr",
+        ":libc/nt/struct/unicodestring.h_hdr",
+        ":libc/nt/struct/userstack.h_hdr",
+        ":libc/nt/struct/valent.h_hdr",
+        ":libc/nt/struct/vmcounters.h_hdr",
+        ":libc/nt/struct/win32fileattributedata.h_hdr",
+        ":libc/nt/struct/win32finddata.h_hdr",
+        ":libc/nt/struct/windowplacement.h_hdr",
+        ":libc/nt/struct/wndclass.h_hdr",
+        ":libc/nt/struct/wndclassex.h_hdr",
+        ":libc/nt/synchronization.h_hdr",
+        ":libc/nt/system.h_hdr",
+        ":libc/nt/systeminfo.h_hdr",
+        ":libc/nt/thread.h_hdr",
+        ":libc/nt/thunk/accounting.inc_hdr",
+        ":libc/nt/thunk/console.inc_hdr",
+        ":libc/nt/thunk/files.inc_hdr",
+        ":libc/nt/thunk/memory.inc_hdr",
+        ":libc/nt/thunk/msabi.h_hdr",
+        ":libc/nt/thunk/ntdll.inc_hdr",
+        ":libc/nt/thunk/ntfile.inc_hdr",
+        ":libc/nt/thunk/paint.inc_hdr",
+        ":libc/nt/thunk/process.inc_hdr",
+        ":libc/nt/thunk/runtime.inc_hdr",
+        ":libc/nt/thunk/signals.inc_hdr",
+        ":libc/nt/thunk/startupinfo.inc_hdr",
+        ":libc/nt/thunk/synchronization.inc_hdr",
+        ":libc/nt/thunk/systeminfo.inc_hdr",
+        ":libc/nt/thunk/thread.inc_hdr",
+        ":libc/nt/thunk/winsock.inc_hdr",
+        ":libc/nt/typedef/exceptionhandler.h_hdr",
+        ":libc/nt/typedef/handlerroutine.h_hdr",
+        ":libc/nt/typedef/hookproc.h_hdr",
+        ":libc/nt/typedef/imagetlscallback.h_hdr",
+        ":libc/nt/typedef/ioapcroutine.h_hdr",
+        ":libc/nt/typedef/pknormalroutine.h_hdr",
+        ":libc/nt/typedef/timerproc.h_hdr",
+        ":libc/nt/typedef/wambda.h_hdr",
+        ":libc/nt/typedef/wndenumproc.h_hdr",
+        ":libc/nt/typedef/wndproc.h_hdr",
+        ":libc/nt/version.h_hdr",
+        ":libc/nt/windows.h_hdr",
+        ":libc/nt/winsock.h_hdr",
+        ":libc/paths.h_hdr",
+        ":libc/proc/describefds.internal.h_hdr",
+        ":libc/proc/execve.internal.h_hdr",
+        ":libc/proc/ntspawn.h_hdr",
+        ":libc/proc/posix_spawn.h_hdr",
+        ":libc/proc/posix_spawn.internal.h_hdr",
+        ":libc/proc/proc.internal.h_hdr",
+        ":libc/runtime/clktck.h_hdr",
+        ":libc/runtime/e820.internal.h_hdr",
+        ":libc/runtime/fenv.h_hdr",
+        ":libc/runtime/internal.h_hdr",
+        ":libc/runtime/memtrack.internal.h_hdr",
+        ":libc/runtime/metalprintf.internal.h_hdr",
+        ":libc/runtime/mman.internal.h_hdr",
+        ":libc/runtime/pathconf.h_hdr",
+        ":libc/runtime/pc.internal.h_hdr",
+        ":libc/runtime/runtime.h_hdr",
+        ":libc/runtime/stack.h_hdr",
+        ":libc/runtime/symbols.internal.h_hdr",
+        ":libc/runtime/sysconf.h_hdr",
+        ":libc/runtime/syslib.internal.h_hdr",
+        ":libc/runtime/unwind.h_hdr",
+        ":libc/runtime/utmp.h_hdr",
+        ":libc/runtime/utmpx.h_hdr",
+        ":libc/runtime/winargs.internal.h_hdr",
+        ":libc/runtime/zipos.internal.h_hdr",
+        ":libc/serialize.h_hdr",
+        ":libc/sock/alg.h_hdr",
+        ":libc/sock/epoll.h_hdr",
+        ":libc/sock/goodsocket.internal.h_hdr",
+        ":libc/sock/ifaddrs.h_hdr",
+        ":libc/sock/internal.h_hdr",
+        ":libc/sock/ipclassify.internal.h_hdr",
+        ":libc/sock/select.h_hdr",
+        ":libc/sock/select.internal.h_hdr",
+        ":libc/sock/sendfile.internal.h_hdr",
+        ":libc/sock/sock.h_hdr",
+        ":libc/sock/struct/arphdr.h_hdr",
+        ":libc/sock/struct/arpreq.h_hdr",
+        ":libc/sock/struct/cmsghdr.h_hdr",
+        ":libc/sock/struct/cmsghdr.internal.h_hdr",
+        ":libc/sock/struct/ether_header.h_hdr",
+        ":libc/sock/struct/ifconf.h_hdr",
+        ":libc/sock/struct/ifreq.h_hdr",
+        ":libc/sock/struct/in6_pktinfo.h_hdr",
+        ":libc/sock/struct/in_pktinfo.h_hdr",
+        ":libc/sock/struct/ip_mreq.h_hdr",
+        ":libc/sock/struct/linger.h_hdr",
+        ":libc/sock/struct/msghdr.h_hdr",
+        ":libc/sock/struct/msghdr.internal.h_hdr",
+        ":libc/sock/struct/pollfd.h_hdr",
+        ":libc/sock/struct/pollfd.internal.h_hdr",
+        ":libc/sock/struct/sockaddr.h_hdr",
+        ":libc/sock/struct/sockaddr.internal.h_hdr",
+        ":libc/sock/struct/sockaddr6-bsd.internal.h_hdr",
+        ":libc/sock/struct/sockaddr6.h_hdr",
+        ":libc/sock/syscall_fd.internal.h_hdr",
+        ":libc/sock/syslog.h_hdr",
+        ":libc/sock/wsaid.internal.h_hdr",
+        ":libc/sock/yoink.inc_hdr",
+        ":libc/stdalign.internal.h_hdr",
+        ":libc/stdbool.h_hdr",
+        ":libc/stdckdint.h_hdr",
+        ":libc/stdio/append.h_hdr",
+        ":libc/stdio/big5.inc_hdr",
+        ":libc/stdio/codepages.inc_hdr",
+        ":libc/stdio/dprintf.h_hdr",
+        ":libc/stdio/fflush.internal.h_hdr",
+        ":libc/stdio/ftw.h_hdr",
+        ":libc/stdio/gb18030.inc_hdr",
+        ":libc/stdio/hex.internal.h_hdr",
+        ":libc/stdio/hkscs.inc_hdr",
+        ":libc/stdio/iconv.h_hdr",
+        ":libc/stdio/internal.h_hdr",
+        ":libc/stdio/jis0208.inc_hdr",
+        ":libc/stdio/ksc.inc_hdr",
+        ":libc/stdio/lcg.internal.h_hdr",
+        ":libc/stdio/legacychars.inc_hdr",
+        ":libc/stdio/rand.h_hdr",
+        ":libc/stdio/revjis.inc_hdr",
+        ":libc/stdio/stdio.h_hdr",
+        ":libc/stdio/stdio_ext.h_hdr",
+        ":libc/stdio/strlist.internal.h_hdr",
+        ":libc/stdio/syscall.h_hdr",
+        ":libc/stdio/sysparam.h_hdr",
+        ":libc/stdlib.h_hdr",
+        ":libc/str/blake2.h_hdr",
+        ":libc/str/highwayhash64.h_hdr",
+        ":libc/str/langinfo.h_hdr",
+        ":libc/str/locale.h_hdr",
+        ":libc/str/mb.internal.h_hdr",
+        ":libc/str/nltypes.h_hdr",
+        ":libc/str/slice.h_hdr",
+        ":libc/str/str.h_hdr",
+        ":libc/str/strwidth.h_hdr",
+        ":libc/str/tab.internal.h_hdr",
+        ":libc/str/thompike.h_hdr",
+        ":libc/str/tpdecodecb.internal.h_hdr",
+        ":libc/str/unicode.h_hdr",
+        ":libc/str/utf16.h_hdr",
+        ":libc/str/wcwidth_osx.internal.h_hdr",
+        ":libc/sysv/consts/_posix.h_hdr",
+        ":libc/sysv/consts/af.h_hdr",
+        ":libc/sysv/consts/arch.h_hdr",
+        ":libc/sysv/consts/arp.h_hdr",
+        ":libc/sysv/consts/at.h_hdr",
+        ":libc/sysv/consts/audit.h_hdr",
+        ":libc/sysv/consts/auxv.h_hdr",
+        ":libc/sysv/consts/baud.internal.h_hdr",
+        ":libc/sysv/consts/c.h_hdr",
+        ":libc/sysv/consts/cap.h_hdr",
+        ":libc/sysv/consts/clock.h_hdr",
+        ":libc/sysv/consts/clone.h_hdr",
+        ":libc/sysv/consts/close.h_hdr",
+        ":libc/sysv/consts/dn.h_hdr",
+        ":libc/sysv/consts/dt.h_hdr",
+        ":libc/sysv/consts/endian.h_hdr",
+        ":libc/sysv/consts/epoll.h_hdr",
+        ":libc/sysv/consts/ethernet.h_hdr",
+        ":libc/sysv/consts/ex.h_hdr",
+        ":libc/sysv/consts/exit.h_hdr",
+        ":libc/sysv/consts/f.h_hdr",
+        ":libc/sysv/consts/falloc.h_hdr",
+        ":libc/sysv/consts/fan.h_hdr",
+        ":libc/sysv/consts/fbio.h_hdr",
+        ":libc/sysv/consts/fd.h_hdr",
+        ":libc/sysv/consts/fileno.h_hdr",
+        ":libc/sysv/consts/fio.h_hdr",
+        ":libc/sysv/consts/fs.h_hdr",
+        ":libc/sysv/consts/futex.h_hdr",
+        ":libc/sysv/consts/grnd.h_hdr",
+        ":libc/sysv/consts/hwcap.h_hdr",
+        ":libc/sysv/consts/icmp6.h_hdr",
+        ":libc/sysv/consts/iff.h_hdr",
+        ":libc/sysv/consts/in.h_hdr",
+        ":libc/sysv/consts/inaddr.h_hdr",
+        ":libc/sysv/consts/inet6.h_hdr",
+        ":libc/sysv/consts/io.h_hdr",
+        ":libc/sysv/consts/ioprio.h_hdr",
+        ":libc/sysv/consts/iov.h_hdr",
+        ":libc/sysv/consts/ip.h_hdr",
+        ":libc/sysv/consts/ipport.h_hdr",
+        ":libc/sysv/consts/ipproto.h_hdr",
+        ":libc/sysv/consts/ipv6.h_hdr",
+        ":libc/sysv/consts/itimer.h_hdr",
+        ":libc/sysv/consts/kd.h_hdr",
+        ":libc/sysv/consts/kern.h_hdr",
+        ":libc/sysv/consts/l.h_hdr",
+        ":libc/sysv/consts/limits.h_hdr",
+        ":libc/sysv/consts/lio.h_hdr",
+        ":libc/sysv/consts/lock.h_hdr",
+        ":libc/sysv/consts/log.h_hdr",
+        ":libc/sysv/consts/loglevel.h_hdr",
+        ":libc/sysv/consts/madv.h_hdr",
+        ":libc/sysv/consts/map.h_hdr",
+        ":libc/sysv/consts/mcast.h_hdr",
+        ":libc/sysv/consts/mfd.h_hdr",
+        ":libc/sysv/consts/mlock.h_hdr",
+        ":libc/sysv/consts/modem.h_hdr",
+        ":libc/sysv/consts/mount.h_hdr",
+        ":libc/sysv/consts/mremap.h_hdr",
+        ":libc/sysv/consts/msg.h_hdr",
+        ":libc/sysv/consts/msync.h_hdr",
+        ":libc/sysv/consts/nr.h_hdr",
+        ":libc/sysv/consts/nrlinux.h_hdr",
+        ":libc/sysv/consts/o.h_hdr",
+        ":libc/sysv/consts/ok.h_hdr",
+        ":libc/sysv/consts/personality.h_hdr",
+        ":libc/sysv/consts/pf.h_hdr",
+        ":libc/sysv/consts/poll.h_hdr",
+        ":libc/sysv/consts/posix.h_hdr",
+        ":libc/sysv/consts/pr.h_hdr",
+        ":libc/sysv/consts/prio.h_hdr",
+        ":libc/sysv/consts/prot.h_hdr",
+        ":libc/sysv/consts/pt.h_hdr",
+        ":libc/sysv/consts/ptrace.h_hdr",
+        ":libc/sysv/consts/pty.h_hdr",
+        ":libc/sysv/consts/read.h_hdr",
+        ":libc/sysv/consts/reboot.h_hdr",
+        ":libc/sysv/consts/rlim.h_hdr",
+        ":libc/sysv/consts/rlimit.h_hdr",
+        ":libc/sysv/consts/rusage.h_hdr",
+        ":libc/sysv/consts/s.h_hdr",
+        ":libc/sysv/consts/sa.h_hdr",
+        ":libc/sysv/consts/sched.h_hdr",
+        ":libc/sysv/consts/scm.h_hdr",
+        ":libc/sysv/consts/seek.h_hdr",
+        ":libc/sysv/consts/sf.h_hdr",
+        ":libc/sysv/consts/shm.h_hdr",
+        ":libc/sysv/consts/shut.h_hdr",
+        ":libc/sysv/consts/sicode.h_hdr",
+        ":libc/sysv/consts/sig.h_hdr",
+        ":libc/sysv/consts/sio.h_hdr",
+        ":libc/sysv/consts/so.h_hdr",
+        ":libc/sysv/consts/sock.h_hdr",
+        ":libc/sysv/consts/sol.h_hdr",
+        ":libc/sysv/consts/splice.h_hdr",
+        ":libc/sysv/consts/ss.h_hdr",
+        ":libc/sysv/consts/st.h_hdr",
+        ":libc/sysv/consts/syscon.internal.h_hdr",
+        ":libc/sysv/consts/tcp.h_hdr",
+        ":libc/sysv/consts/tcpopt.h_hdr",
+        ":libc/sysv/consts/termios.h_hdr",
+        ":libc/sysv/consts/th.h_hdr",
+        ":libc/sysv/consts/timer.h_hdr",
+        ":libc/sysv/consts/uc.h_hdr",
+        ":libc/sysv/consts/unmount.h_hdr",
+        ":libc/sysv/consts/utime.h_hdr",
+        ":libc/sysv/consts/w.h_hdr",
+        ":libc/sysv/consts/waitid.h_hdr",
+        ":libc/sysv/consts/xopen.h_hdr",
+        ":libc/sysv/errfuns.h_hdr",
+        ":libc/sysv/macros.internal.h_hdr",
+        ":libc/temp.h_hdr",
+        ":libc/thread/freebsd.internal.h_hdr",
+        ":libc/thread/itimer.internal.h_hdr",
+        ":libc/thread/openbsd.internal.h_hdr",
+        ":libc/thread/posixthread.internal.h_hdr",
+        ":libc/thread/pt.internal.h_hdr",
+        ":libc/thread/semaphore.h_hdr",
+        ":libc/thread/thread.h_hdr",
+        ":libc/thread/thread2.h_hdr",
+        ":libc/thread/tls.h_hdr",
+        ":libc/thread/tls2.internal.h_hdr",
+        ":libc/thread/xnu.internal.h_hdr",
+        ":libc/time/clockstonanos.internal.h_hdr",
+        ":libc/time/struct/timezone.h_hdr",
+        ":libc/time/struct/tm.h_hdr",
+        ":libc/time/struct/utimbuf.h_hdr",
+        ":libc/time/struct/utimbuf.internal.h_hdr",
+        ":libc/time/time.h_hdr",
+        ":libc/time/tz.internal.h_hdr",
+        ":libc/time/tzfile.internal.h_hdr",
+        ":libc/tinymath/atan_common.internal.h_hdr",
+        ":libc/tinymath/atan_data.internal.h_hdr",
+        ":libc/tinymath/atanf_common.internal.h_hdr",
+        ":libc/tinymath/atanf_data.internal.h_hdr",
+        ":libc/tinymath/complex.internal.h_hdr",
+        ":libc/tinymath/emod.h_hdr",
+        ":libc/tinymath/emodl.h_hdr",
+        ":libc/tinymath/estrin_wrap.internal.h_hdr",
+        ":libc/tinymath/exp2f_data.internal.h_hdr",
+        ":libc/tinymath/exp_data.internal.h_hdr",
+        ":libc/tinymath/expo.internal.h_hdr",
+        ":libc/tinymath/feval.internal.h_hdr",
+        ":libc/tinymath/freebsd.internal.h_hdr",
+        ":libc/tinymath/horner.internal.h_hdr",
+        ":libc/tinymath/horner_wrap.internal.h_hdr",
+        ":libc/tinymath/hornerf.internal.h_hdr",
+        ":libc/tinymath/internal.h_hdr",
+        ":libc/tinymath/invtrigl.internal.h_hdr",
+        ":libc/tinymath/kernel.internal.h_hdr",
+        ":libc/tinymath/ldshape.internal.h_hdr",
+        ":libc/tinymath/log1pf_data.internal.h_hdr",
+        ":libc/tinymath/log2_data.internal.h_hdr",
+        ":libc/tinymath/log2f_data.internal.h_hdr",
+        ":libc/tinymath/log_data.internal.h_hdr",
+        ":libc/tinymath/logf_data.internal.h_hdr",
+        ":libc/tinymath/magicu.h_hdr",
+        ":libc/tinymath/pow_data.internal.h_hdr",
+        ":libc/tinymath/powf_data.internal.h_hdr",
+        ":libc/tinymath/sincosf.internal.h_hdr",
+        ":libc/type2str.h_hdr",
+        ":libc/vga/tty-graph.inc_hdr",
+        ":libc/vga/vga.internal.h_hdr",
+        ":libc/x/x.h_hdr",
+        ":libc/x/xasprintf.h_hdr",
+        ":libc/x/xgetline.h_hdr",
+        ":libc/x/xiso8601.h_hdr",
+        ":libc/x/xsigaction.h_hdr",
+        ":libc/x/xspawn.h_hdr",
+        ":libc/zip.internal.h_hdr",
+    ],
+)
+
+genrule(name = "libc/ar.h_hdr", srcs = ["//include:libc/ar.h"], outs = ["libc/ar.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/assert.h_hdr", srcs = ["//include:libc/assert.h"], outs = ["libc/assert.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/atomic.h_hdr", srcs = ["//include:libc/atomic.h"], outs = ["libc/atomic.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/c.inc_hdr", srcs = ["//include:libc/c.inc"], outs = ["libc/c.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/asan.internal.h_hdr", srcs = ["//include:libc/calls/asan.internal.h"], outs = ["libc/calls/asan.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/blockcancel.internal.h_hdr", srcs = ["//include:libc/calls/blockcancel.internal.h"], outs = ["libc/calls/blockcancel.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/cachestat.h_hdr", srcs = ["//include:libc/calls/cachestat.h"], outs = ["libc/calls/cachestat.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/calls.h_hdr", srcs = ["//include:libc/calls/calls.h"], outs = ["libc/calls/calls.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/cp.internal.h_hdr", srcs = ["//include:libc/calls/cp.internal.h"], outs = ["libc/calls/cp.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/createfileflags.internal.h_hdr", srcs = ["//include:libc/calls/createfileflags.internal.h"], outs = ["libc/calls/createfileflags.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/getcontext.inc_hdr", srcs = ["//include:libc/calls/getcontext.inc"], outs = ["libc/calls/getcontext.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/groups.internal.h_hdr", srcs = ["//include:libc/calls/groups.internal.h"], outs = ["libc/calls/groups.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/internal.h_hdr", srcs = ["//include:libc/calls/internal.h"], outs = ["libc/calls/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/ipc.h_hdr", srcs = ["//include:libc/calls/ipc.h"], outs = ["libc/calls/ipc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/landlock.h_hdr", srcs = ["//include:libc/calls/landlock.h"], outs = ["libc/calls/landlock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/makedev.h_hdr", srcs = ["//include:libc/calls/makedev.h"], outs = ["libc/calls/makedev.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/metalfile.internal.h_hdr", srcs = ["//include:libc/calls/metalfile.internal.h"], outs = ["libc/calls/metalfile.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/mount.h_hdr", srcs = ["//include:libc/calls/mount.h"], outs = ["libc/calls/mount.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/openbsd.internal.h_hdr", srcs = ["//include:libc/calls/openbsd.internal.h"], outs = ["libc/calls/openbsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/pledge.h_hdr", srcs = ["//include:libc/calls/pledge.h"], outs = ["libc/calls/pledge.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/pledge.internal.h_hdr", srcs = ["//include:libc/calls/pledge.internal.h"], outs = ["libc/calls/pledge.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/prctl.internal.h_hdr", srcs = ["//include:libc/calls/prctl.internal.h"], outs = ["libc/calls/prctl.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/sched-sysv.internal.h_hdr", srcs = ["//include:libc/calls/sched-sysv.internal.h"], outs = ["libc/calls/sched-sysv.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/sig.internal.h_hdr", srcs = ["//include:libc/calls/sig.internal.h"], outs = ["libc/calls/sig.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/sigtimedwait.h_hdr", srcs = ["//include:libc/calls/sigtimedwait.h"], outs = ["libc/calls/sigtimedwait.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/sigtimedwait.internal.h_hdr", srcs = ["//include:libc/calls/sigtimedwait.internal.h"], outs = ["libc/calls/sigtimedwait.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/state.internal.h_hdr", srcs = ["//include:libc/calls/state.internal.h"], outs = ["libc/calls/state.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/aarch64.internal.h_hdr", srcs = ["//include:libc/calls/struct/aarch64.internal.h"], outs = ["libc/calls/struct/aarch64.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/bpf.internal.h_hdr", srcs = ["//include:libc/calls/struct/bpf.internal.h"], outs = ["libc/calls/struct/bpf.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/cpuset.h_hdr", srcs = ["//include:libc/calls/struct/cpuset.h"], outs = ["libc/calls/struct/cpuset.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/dirent.h_hdr", srcs = ["//include:libc/calls/struct/dirent.h"], outs = ["libc/calls/struct/dirent.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/fd.internal.h_hdr", srcs = ["//include:libc/calls/struct/fd.internal.h"], outs = ["libc/calls/struct/fd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/filter.internal.h_hdr", srcs = ["//include:libc/calls/struct/filter.internal.h"], outs = ["libc/calls/struct/filter.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/flock.h_hdr", srcs = ["//include:libc/calls/struct/flock.h"], outs = ["libc/calls/struct/flock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/flock.internal.h_hdr", srcs = ["//include:libc/calls/struct/flock.internal.h"], outs = ["libc/calls/struct/flock.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/framebuffercolormap.h_hdr", srcs = ["//include:libc/calls/struct/framebuffercolormap.h"], outs = ["libc/calls/struct/framebuffercolormap.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/framebufferfixedscreeninfo.h_hdr", srcs = ["//include:libc/calls/struct/framebufferfixedscreeninfo.h"], outs = ["libc/calls/struct/framebufferfixedscreeninfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/framebuffervirtualscreeninfo.h_hdr", srcs = ["//include:libc/calls/struct/framebuffervirtualscreeninfo.h"], outs = ["libc/calls/struct/framebuffervirtualscreeninfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/fsid.h_hdr", srcs = ["//include:libc/calls/struct/fsid.h"], outs = ["libc/calls/struct/fsid.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/iovec.h_hdr", srcs = ["//include:libc/calls/struct/iovec.h"], outs = ["libc/calls/struct/iovec.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/iovec.internal.h_hdr", srcs = ["//include:libc/calls/struct/iovec.internal.h"], outs = ["libc/calls/struct/iovec.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/itimerval.h_hdr", srcs = ["//include:libc/calls/struct/itimerval.h"], outs = ["libc/calls/struct/itimerval.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/itimerval.internal.h_hdr", srcs = ["//include:libc/calls/struct/itimerval.internal.h"], outs = ["libc/calls/struct/itimerval.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/metasigaltstack.h_hdr", srcs = ["//include:libc/calls/struct/metasigaltstack.h"], outs = ["libc/calls/struct/metasigaltstack.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/metastat.internal.h_hdr", srcs = ["//include:libc/calls/struct/metastat.internal.h"], outs = ["libc/calls/struct/metastat.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/metatermios.internal.h_hdr", srcs = ["//include:libc/calls/struct/metatermios.internal.h"], outs = ["libc/calls/struct/metatermios.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/rlimit.h_hdr", srcs = ["//include:libc/calls/struct/rlimit.h"], outs = ["libc/calls/struct/rlimit.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/rlimit.internal.h_hdr", srcs = ["//include:libc/calls/struct/rlimit.internal.h"], outs = ["libc/calls/struct/rlimit.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/rusage.h_hdr", srcs = ["//include:libc/calls/struct/rusage.h"], outs = ["libc/calls/struct/rusage.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/rusage.internal.h_hdr", srcs = ["//include:libc/calls/struct/rusage.internal.h"], outs = ["libc/calls/struct/rusage.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sched_param.h_hdr", srcs = ["//include:libc/calls/struct/sched_param.h"], outs = ["libc/calls/struct/sched_param.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sched_param.internal.h_hdr", srcs = ["//include:libc/calls/struct/sched_param.internal.h"], outs = ["libc/calls/struct/sched_param.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/seccomp.internal.h_hdr", srcs = ["//include:libc/calls/struct/seccomp.internal.h"], outs = ["libc/calls/struct/seccomp.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sigaction.h_hdr", srcs = ["//include:libc/calls/struct/sigaction.h"], outs = ["libc/calls/struct/sigaction.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sigaction.internal.h_hdr", srcs = ["//include:libc/calls/struct/sigaction.internal.h"], outs = ["libc/calls/struct/sigaction.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sigaltstack.h_hdr", srcs = ["//include:libc/calls/struct/sigaltstack.h"], outs = ["libc/calls/struct/sigaltstack.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sigaltstack.internal.h_hdr", srcs = ["//include:libc/calls/struct/sigaltstack.internal.h"], outs = ["libc/calls/struct/sigaltstack.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/siginfo-freebsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/siginfo-freebsd.internal.h"], outs = ["libc/calls/struct/siginfo-freebsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/siginfo-meta.internal.h_hdr", srcs = ["//include:libc/calls/struct/siginfo-meta.internal.h"], outs = ["libc/calls/struct/siginfo-meta.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/siginfo-netbsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/siginfo-netbsd.internal.h"], outs = ["libc/calls/struct/siginfo-netbsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/siginfo-openbsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/siginfo-openbsd.internal.h"], outs = ["libc/calls/struct/siginfo-openbsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/siginfo-xnu.internal.h_hdr", srcs = ["//include:libc/calls/struct/siginfo-xnu.internal.h"], outs = ["libc/calls/struct/siginfo-xnu.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/siginfo.h_hdr", srcs = ["//include:libc/calls/struct/siginfo.h"], outs = ["libc/calls/struct/siginfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/siginfo.internal.h_hdr", srcs = ["//include:libc/calls/struct/siginfo.internal.h"], outs = ["libc/calls/struct/siginfo.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sigset.h_hdr", srcs = ["//include:libc/calls/struct/sigset.h"], outs = ["libc/calls/struct/sigset.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sigset.internal.h_hdr", srcs = ["//include:libc/calls/struct/sigset.internal.h"], outs = ["libc/calls/struct/sigset.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sigval.h_hdr", srcs = ["//include:libc/calls/struct/sigval.h"], outs = ["libc/calls/struct/sigval.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sigval.internal.h_hdr", srcs = ["//include:libc/calls/struct/sigval.internal.h"], outs = ["libc/calls/struct/sigval.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/stat.h_hdr", srcs = ["//include:libc/calls/struct/stat.h"], outs = ["libc/calls/struct/stat.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/stat.internal.h_hdr", srcs = ["//include:libc/calls/struct/stat.internal.h"], outs = ["libc/calls/struct/stat.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/stat.macros.h_hdr", srcs = ["//include:libc/calls/struct/stat.macros.h"], outs = ["libc/calls/struct/stat.macros.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statfs-freebsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/statfs-freebsd.internal.h"], outs = ["libc/calls/struct/statfs-freebsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statfs-linux.internal.h_hdr", srcs = ["//include:libc/calls/struct/statfs-linux.internal.h"], outs = ["libc/calls/struct/statfs-linux.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statfs-meta.internal.h_hdr", srcs = ["//include:libc/calls/struct/statfs-meta.internal.h"], outs = ["libc/calls/struct/statfs-meta.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statfs-netbsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/statfs-netbsd.internal.h"], outs = ["libc/calls/struct/statfs-netbsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statfs-openbsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/statfs-openbsd.internal.h"], outs = ["libc/calls/struct/statfs-openbsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statfs-xnu.internal.h_hdr", srcs = ["//include:libc/calls/struct/statfs-xnu.internal.h"], outs = ["libc/calls/struct/statfs-xnu.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statfs.h_hdr", srcs = ["//include:libc/calls/struct/statfs.h"], outs = ["libc/calls/struct/statfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statfs.internal.h_hdr", srcs = ["//include:libc/calls/struct/statfs.internal.h"], outs = ["libc/calls/struct/statfs.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/statvfs.h_hdr", srcs = ["//include:libc/calls/struct/statvfs.h"], outs = ["libc/calls/struct/statvfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sysinfo.h_hdr", srcs = ["//include:libc/calls/struct/sysinfo.h"], outs = ["libc/calls/struct/sysinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/sysinfo.internal.h_hdr", srcs = ["//include:libc/calls/struct/sysinfo.internal.h"], outs = ["libc/calls/struct/sysinfo.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/termios.h_hdr", srcs = ["//include:libc/calls/struct/termios.h"], outs = ["libc/calls/struct/termios.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/termios.internal.h_hdr", srcs = ["//include:libc/calls/struct/termios.internal.h"], outs = ["libc/calls/struct/termios.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/timespec.h_hdr", srcs = ["//include:libc/calls/struct/timespec.h"], outs = ["libc/calls/struct/timespec.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/timespec.internal.h_hdr", srcs = ["//include:libc/calls/struct/timespec.internal.h"], outs = ["libc/calls/struct/timespec.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/timeval.h_hdr", srcs = ["//include:libc/calls/struct/timeval.h"], outs = ["libc/calls/struct/timeval.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/timeval.internal.h_hdr", srcs = ["//include:libc/calls/struct/timeval.internal.h"], outs = ["libc/calls/struct/timeval.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/tms.h_hdr", srcs = ["//include:libc/calls/struct/tms.h"], outs = ["libc/calls/struct/tms.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/ucontext-freebsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/ucontext-freebsd.internal.h"], outs = ["libc/calls/struct/ucontext-freebsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/ucontext-netbsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/ucontext-netbsd.internal.h"], outs = ["libc/calls/struct/ucontext-netbsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/ucontext-openbsd.internal.h_hdr", srcs = ["//include:libc/calls/struct/ucontext-openbsd.internal.h"], outs = ["libc/calls/struct/ucontext-openbsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/ucontext.internal.h_hdr", srcs = ["//include:libc/calls/struct/ucontext.internal.h"], outs = ["libc/calls/struct/ucontext.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/user_regs_struct.h_hdr", srcs = ["//include:libc/calls/struct/user_regs_struct.h"], outs = ["libc/calls/struct/user_regs_struct.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/utsname-linux.internal.h_hdr", srcs = ["//include:libc/calls/struct/utsname-linux.internal.h"], outs = ["libc/calls/struct/utsname-linux.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/utsname.h_hdr", srcs = ["//include:libc/calls/struct/utsname.h"], outs = ["libc/calls/struct/utsname.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/winsize.h_hdr", srcs = ["//include:libc/calls/struct/winsize.h"], outs = ["libc/calls/struct/winsize.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/struct/winsize.internal.h_hdr", srcs = ["//include:libc/calls/struct/winsize.internal.h"], outs = ["libc/calls/struct/winsize.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/syscall-nt.internal.h_hdr", srcs = ["//include:libc/calls/syscall-nt.internal.h"], outs = ["libc/calls/syscall-nt.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/syscall-sysv.internal.h_hdr", srcs = ["//include:libc/calls/syscall-sysv.internal.h"], outs = ["libc/calls/syscall-sysv.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/syscall_support-nt.internal.h_hdr", srcs = ["//include:libc/calls/syscall_support-nt.internal.h"], outs = ["libc/calls/syscall_support-nt.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/syscall_support-sysv.internal.h_hdr", srcs = ["//include:libc/calls/syscall_support-sysv.internal.h"], outs = ["libc/calls/syscall_support-sysv.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/termios.h_hdr", srcs = ["//include:libc/calls/termios.h"], outs = ["libc/calls/termios.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/termios.internal.h_hdr", srcs = ["//include:libc/calls/termios.internal.h"], outs = ["libc/calls/termios.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/ttydefaults.h_hdr", srcs = ["//include:libc/calls/ttydefaults.h"], outs = ["libc/calls/ttydefaults.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/typedef/u.h_hdr", srcs = ["//include:libc/calls/typedef/u.h"], outs = ["libc/calls/typedef/u.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/ucontext.h_hdr", srcs = ["//include:libc/calls/ucontext.h"], outs = ["libc/calls/ucontext.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/weirdtypes.h_hdr", srcs = ["//include:libc/calls/weirdtypes.h"], outs = ["libc/calls/weirdtypes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/calls/wincrash.internal.h_hdr", srcs = ["//include:libc/calls/wincrash.internal.h"], outs = ["libc/calls/wincrash.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/complex.h_hdr", srcs = ["//include:libc/complex.h"], outs = ["libc/complex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/cosmo.h_hdr", srcs = ["//include:libc/cosmo.h"], outs = ["libc/cosmo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/cxx.inc_hdr", srcs = ["//include:libc/cxx.inc"], outs = ["libc/cxx.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/cxxabi.h_hdr", srcs = ["//include:libc/cxxabi.h"], outs = ["libc/cxxabi.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/cxxtypescompat.inc_hdr", srcs = ["//include:libc/cxxtypescompat.inc"], outs = ["libc/cxxtypescompat.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dce.h_hdr", srcs = ["//include:libc/dce.h"], outs = ["libc/dce.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/disclaimer.inc_hdr", srcs = ["//include:libc/disclaimer.inc"], outs = ["libc/disclaimer.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dlopen/dlfcn.h_hdr", srcs = ["//include:libc/dlopen/dlfcn.h"], outs = ["libc/dlopen/dlfcn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/consts.h_hdr", srcs = ["//include:libc/dns/consts.h"], outs = ["libc/dns/consts.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/dns.h_hdr", srcs = ["//include:libc/dns/dns.h"], outs = ["libc/dns/dns.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/dnsheader.h_hdr", srcs = ["//include:libc/dns/dnsheader.h"], outs = ["libc/dns/dnsheader.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/dnsquestion.h_hdr", srcs = ["//include:libc/dns/dnsquestion.h"], outs = ["libc/dns/dnsquestion.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/ent.h_hdr", srcs = ["//include:libc/dns/ent.h"], outs = ["libc/dns/ent.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/hoststxt.h_hdr", srcs = ["//include:libc/dns/hoststxt.h"], outs = ["libc/dns/hoststxt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/prototxt.h_hdr", srcs = ["//include:libc/dns/prototxt.h"], outs = ["libc/dns/prototxt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/resolvconf.h_hdr", srcs = ["//include:libc/dns/resolvconf.h"], outs = ["libc/dns/resolvconf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dns/servicestxt.h_hdr", srcs = ["//include:libc/dns/servicestxt.h"], outs = ["libc/dns/servicestxt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/dos.internal.h_hdr", srcs = ["//include:libc/dos.internal.h"], outs = ["libc/dos.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/def.h_hdr", srcs = ["//include:libc/elf/def.h"], outs = ["libc/elf/def.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/elf.h_hdr", srcs = ["//include:libc/elf/elf.h"], outs = ["libc/elf/elf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/pf2prot.internal.h_hdr", srcs = ["//include:libc/elf/pf2prot.internal.h"], outs = ["libc/elf/pf2prot.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/scalar.h_hdr", srcs = ["//include:libc/elf/scalar.h"], outs = ["libc/elf/scalar.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/auxv.h_hdr", srcs = ["//include:libc/elf/struct/auxv.h"], outs = ["libc/elf/struct/auxv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/chdr.h_hdr", srcs = ["//include:libc/elf/struct/chdr.h"], outs = ["libc/elf/struct/chdr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/dyn.h_hdr", srcs = ["//include:libc/elf/struct/dyn.h"], outs = ["libc/elf/struct/dyn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/ehdr.h_hdr", srcs = ["//include:libc/elf/struct/ehdr.h"], outs = ["libc/elf/struct/ehdr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/lib.h_hdr", srcs = ["//include:libc/elf/struct/lib.h"], outs = ["libc/elf/struct/lib.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/move.h_hdr", srcs = ["//include:libc/elf/struct/move.h"], outs = ["libc/elf/struct/move.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/nhdr.h_hdr", srcs = ["//include:libc/elf/struct/nhdr.h"], outs = ["libc/elf/struct/nhdr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/phdr.h_hdr", srcs = ["//include:libc/elf/struct/phdr.h"], outs = ["libc/elf/struct/phdr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/rel.h_hdr", srcs = ["//include:libc/elf/struct/rel.h"], outs = ["libc/elf/struct/rel.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/rela.h_hdr", srcs = ["//include:libc/elf/struct/rela.h"], outs = ["libc/elf/struct/rela.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/shdr.h_hdr", srcs = ["//include:libc/elf/struct/shdr.h"], outs = ["libc/elf/struct/shdr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/sym.h_hdr", srcs = ["//include:libc/elf/struct/sym.h"], outs = ["libc/elf/struct/sym.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/syminfo.h_hdr", srcs = ["//include:libc/elf/struct/syminfo.h"], outs = ["libc/elf/struct/syminfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/verdaux.h_hdr", srcs = ["//include:libc/elf/struct/verdaux.h"], outs = ["libc/elf/struct/verdaux.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/verdef.h_hdr", srcs = ["//include:libc/elf/struct/verdef.h"], outs = ["libc/elf/struct/verdef.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/vernaux.h_hdr", srcs = ["//include:libc/elf/struct/vernaux.h"], outs = ["libc/elf/struct/vernaux.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/struct/verneed.h_hdr", srcs = ["//include:libc/elf/struct/verneed.h"], outs = ["libc/elf/struct/verneed.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/elf/tinyelf.internal.h_hdr", srcs = ["//include:libc/elf/tinyelf.internal.h"], outs = ["libc/elf/tinyelf.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/errno.h_hdr", srcs = ["//include:libc/errno.h"], outs = ["libc/errno.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/bing.internal.h_hdr", srcs = ["//include:libc/fmt/bing.internal.h"], outs = ["libc/fmt/bing.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/conv.h_hdr", srcs = ["//include:libc/fmt/conv.h"], outs = ["libc/fmt/conv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/divmod10.internal.h_hdr", srcs = ["//include:libc/fmt/divmod10.internal.h"], outs = ["libc/fmt/divmod10.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/internal.h_hdr", srcs = ["//include:libc/fmt/internal.h"], outs = ["libc/fmt/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/itoa.h_hdr", srcs = ["//include:libc/fmt/itoa.h"], outs = ["libc/fmt/itoa.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/leb128.h_hdr", srcs = ["//include:libc/fmt/leb128.h"], outs = ["libc/fmt/leb128.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/libgen.h_hdr", srcs = ["//include:libc/fmt/libgen.h"], outs = ["libc/fmt/libgen.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/magnumstrs.internal.h_hdr", srcs = ["//include:libc/fmt/magnumstrs.internal.h"], outs = ["libc/fmt/magnumstrs.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/fmt/wintime.internal.h_hdr", srcs = ["//include:libc/fmt/wintime.internal.h"], outs = ["libc/fmt/wintime.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/imag.internal.h_hdr", srcs = ["//include:libc/imag.internal.h"], outs = ["libc/imag.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/integral/c.inc_hdr", srcs = ["//include:libc/integral/c.inc"], outs = ["libc/integral/c.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/integral/cxx.inc_hdr", srcs = ["//include:libc/integral/cxx.inc"], outs = ["libc/integral/cxx.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/integral/cxxtypescompat.inc_hdr", srcs = ["//include:libc/integral/cxxtypescompat.inc"], outs = ["libc/integral/cxxtypescompat.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/integral/llp64.inc_hdr", srcs = ["//include:libc/integral/llp64.inc"], outs = ["libc/integral/llp64.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/integral/lp64.inc_hdr", srcs = ["//include:libc/integral/lp64.inc"], outs = ["libc/integral/lp64.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/integral/lp64arg.inc_hdr", srcs = ["//include:libc/integral/lp64arg.inc"], outs = ["libc/integral/lp64arg.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/integral/normalize.inc_hdr", srcs = ["//include:libc/integral/normalize.inc"], outs = ["libc/integral/normalize.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/asan.internal.h_hdr", srcs = ["//include:libc/intrin/asan.internal.h"], outs = ["libc/intrin/asan.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/asancodes.h_hdr", srcs = ["//include:libc/intrin/asancodes.h"], outs = ["libc/intrin/asancodes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/asmflag.h_hdr", srcs = ["//include:libc/intrin/asmflag.h"], outs = ["libc/intrin/asmflag.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/atomic.h_hdr", srcs = ["//include:libc/intrin/atomic.h"], outs = ["libc/intrin/atomic.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/bsf.h_hdr", srcs = ["//include:libc/intrin/bsf.h"], outs = ["libc/intrin/bsf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/bsr.h_hdr", srcs = ["//include:libc/intrin/bsr.h"], outs = ["libc/intrin/bsr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/bswap.h_hdr", srcs = ["//include:libc/intrin/bswap.h"], outs = ["libc/intrin/bswap.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/cmpxchg.h_hdr", srcs = ["//include:libc/intrin/cmpxchg.h"], outs = ["libc/intrin/cmpxchg.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/cxaatexit.internal.h_hdr", srcs = ["//include:libc/intrin/cxaatexit.internal.h"], outs = ["libc/intrin/cxaatexit.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/describebacktrace.internal.h_hdr", srcs = ["//include:libc/intrin/describebacktrace.internal.h"], outs = ["libc/intrin/describebacktrace.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/describeflags.internal.h_hdr", srcs = ["//include:libc/intrin/describeflags.internal.h"], outs = ["libc/intrin/describeflags.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/describentoverlapped.internal.h_hdr", srcs = ["//include:libc/intrin/describentoverlapped.internal.h"], outs = ["libc/intrin/describentoverlapped.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/directmap.internal.h_hdr", srcs = ["//include:libc/intrin/directmap.internal.h"], outs = ["libc/intrin/directmap.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/dll.h_hdr", srcs = ["//include:libc/intrin/dll.h"], outs = ["libc/intrin/dll.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/dos2errno.internal.h_hdr", srcs = ["//include:libc/intrin/dos2errno.internal.h"], outs = ["libc/intrin/dos2errno.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/extend.internal.h_hdr", srcs = ["//include:libc/intrin/extend.internal.h"], outs = ["libc/intrin/extend.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/getauxval.internal.h_hdr", srcs = ["//include:libc/intrin/getauxval.internal.h"], outs = ["libc/intrin/getauxval.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/getenv.internal.h_hdr", srcs = ["//include:libc/intrin/getenv.internal.h"], outs = ["libc/intrin/getenv.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/hilbert.h_hdr", srcs = ["//include:libc/intrin/hilbert.h"], outs = ["libc/intrin/hilbert.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/kprintf.h_hdr", srcs = ["//include:libc/intrin/kprintf.h"], outs = ["libc/intrin/kprintf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/leaky.internal.h_hdr", srcs = ["//include:libc/intrin/leaky.internal.h"], outs = ["libc/intrin/leaky.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/likely.h_hdr", srcs = ["//include:libc/intrin/likely.h"], outs = ["libc/intrin/likely.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/macros.h_hdr", srcs = ["//include:libc/intrin/macros.h"], outs = ["libc/intrin/macros.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/newbie.h_hdr", srcs = ["//include:libc/intrin/newbie.h"], outs = ["libc/intrin/newbie.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/nomultics.internal.h_hdr", srcs = ["//include:libc/intrin/nomultics.internal.h"], outs = ["libc/intrin/nomultics.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/packsswb.h_hdr", srcs = ["//include:libc/intrin/packsswb.h"], outs = ["libc/intrin/packsswb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/packuswb.h_hdr", srcs = ["//include:libc/intrin/packuswb.h"], outs = ["libc/intrin/packuswb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/paddw.h_hdr", srcs = ["//include:libc/intrin/paddw.h"], outs = ["libc/intrin/paddw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/palignr.h_hdr", srcs = ["//include:libc/intrin/palignr.h"], outs = ["libc/intrin/palignr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/pandn.h_hdr", srcs = ["//include:libc/intrin/pandn.h"], outs = ["libc/intrin/pandn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/pcmpgtb.h_hdr", srcs = ["//include:libc/intrin/pcmpgtb.h"], outs = ["libc/intrin/pcmpgtb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/pcmpgtw.h_hdr", srcs = ["//include:libc/intrin/pcmpgtw.h"], outs = ["libc/intrin/pcmpgtw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/pmaddubsw.h_hdr", srcs = ["//include:libc/intrin/pmaddubsw.h"], outs = ["libc/intrin/pmaddubsw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/pmovmskb.h_hdr", srcs = ["//include:libc/intrin/pmovmskb.h"], outs = ["libc/intrin/pmovmskb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/pmulhrsw.h_hdr", srcs = ["//include:libc/intrin/pmulhrsw.h"], outs = ["libc/intrin/pmulhrsw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/popcnt.h_hdr", srcs = ["//include:libc/intrin/popcnt.h"], outs = ["libc/intrin/popcnt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/promises.internal.h_hdr", srcs = ["//include:libc/intrin/promises.internal.h"], outs = ["libc/intrin/promises.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/psraw.h_hdr", srcs = ["//include:libc/intrin/psraw.h"], outs = ["libc/intrin/psraw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/punpckhbw.h_hdr", srcs = ["//include:libc/intrin/punpckhbw.h"], outs = ["libc/intrin/punpckhbw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/punpckhwd.h_hdr", srcs = ["//include:libc/intrin/punpckhwd.h"], outs = ["libc/intrin/punpckhwd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/punpcklbw.h_hdr", srcs = ["//include:libc/intrin/punpcklbw.h"], outs = ["libc/intrin/punpcklbw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/punpcklwd.h_hdr", srcs = ["//include:libc/intrin/punpcklwd.h"], outs = ["libc/intrin/punpcklwd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/pushpop.internal.h_hdr", srcs = ["//include:libc/intrin/pushpop.internal.h"], outs = ["libc/intrin/pushpop.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/repmovsb.h_hdr", srcs = ["//include:libc/intrin/repmovsb.h"], outs = ["libc/intrin/repmovsb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/repstosb.h_hdr", srcs = ["//include:libc/intrin/repstosb.h"], outs = ["libc/intrin/repstosb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/safemacros.internal.h_hdr", srcs = ["//include:libc/intrin/safemacros.internal.h"], outs = ["libc/intrin/safemacros.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/segmentation.h_hdr", srcs = ["//include:libc/intrin/segmentation.h"], outs = ["libc/intrin/segmentation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/setjmp.internal.h_hdr", srcs = ["//include:libc/intrin/setjmp.internal.h"], outs = ["libc/intrin/setjmp.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/strace.internal.h_hdr", srcs = ["//include:libc/intrin/strace.internal.h"], outs = ["libc/intrin/strace.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/ulock.h_hdr", srcs = ["//include:libc/intrin/ulock.h"], outs = ["libc/intrin/ulock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/weaken.h_hdr", srcs = ["//include:libc/intrin/weaken.h"], outs = ["libc/intrin/weaken.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/intrin/xchg.internal.h_hdr", srcs = ["//include:libc/intrin/xchg.internal.h"], outs = ["libc/intrin/xchg.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/inttypes.h_hdr", srcs = ["//include:libc/inttypes.h"], outs = ["libc/inttypes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/iso646.internal.h_hdr", srcs = ["//include:libc/iso646.internal.h"], outs = ["libc/iso646.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/algorithm_hdr", srcs = ["//include:libc/isystem/algorithm"], outs = ["libc/isystem/algorithm"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/alloca.h_hdr", srcs = ["//include:libc/isystem/alloca.h"], outs = ["libc/isystem/alloca.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ammintrin.h_hdr", srcs = ["//include:libc/isystem/ammintrin.h"], outs = ["libc/isystem/ammintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/any_hdr", srcs = ["//include:libc/isystem/any"], outs = ["libc/isystem/any"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ar.h_hdr", srcs = ["//include:libc/isystem/ar.h"], outs = ["libc/isystem/ar.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/arm_acle.h_hdr", srcs = ["//include:libc/isystem/arm_acle.h"], outs = ["libc/isystem/arm_acle.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/arm_bf16.h_hdr", srcs = ["//include:libc/isystem/arm_bf16.h"], outs = ["libc/isystem/arm_bf16.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/arm_fp16.h_hdr", srcs = ["//include:libc/isystem/arm_fp16.h"], outs = ["libc/isystem/arm_fp16.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/arm_neon.h_hdr", srcs = ["//include:libc/isystem/arm_neon.h"], outs = ["libc/isystem/arm_neon.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/arpa/inet.h_hdr", srcs = ["//include:libc/isystem/arpa/inet.h"], outs = ["libc/isystem/arpa/inet.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/array_hdr", srcs = ["//include:libc/isystem/array"], outs = ["libc/isystem/array"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/assert.h_hdr", srcs = ["//include:libc/isystem/assert.h"], outs = ["libc/isystem/assert.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/atomic_hdr", srcs = ["//include:libc/isystem/atomic"], outs = ["libc/isystem/atomic"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/bit_hdr", srcs = ["//include:libc/isystem/bit"], outs = ["libc/isystem/bit"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/bitset_hdr", srcs = ["//include:libc/isystem/bitset"], outs = ["libc/isystem/bitset"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/byteswap.h_hdr", srcs = ["//include:libc/isystem/byteswap.h"], outs = ["libc/isystem/byteswap.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cassert_hdr", srcs = ["//include:libc/isystem/cassert"], outs = ["libc/isystem/cassert"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ccomplex_hdr", srcs = ["//include:libc/isystem/ccomplex"], outs = ["libc/isystem/ccomplex"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cctype_hdr", srcs = ["//include:libc/isystem/cctype"], outs = ["libc/isystem/cctype"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cerrno_hdr", srcs = ["//include:libc/isystem/cerrno"], outs = ["libc/isystem/cerrno"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cfenv_hdr", srcs = ["//include:libc/isystem/cfenv"], outs = ["libc/isystem/cfenv"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cfloat_hdr", srcs = ["//include:libc/isystem/cfloat"], outs = ["libc/isystem/cfloat"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/charconv_hdr", srcs = ["//include:libc/isystem/charconv"], outs = ["libc/isystem/charconv"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/chrono_hdr", srcs = ["//include:libc/isystem/chrono"], outs = ["libc/isystem/chrono"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cinttypes_hdr", srcs = ["//include:libc/isystem/cinttypes"], outs = ["libc/isystem/cinttypes"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ciso646_hdr", srcs = ["//include:libc/isystem/ciso646"], outs = ["libc/isystem/ciso646"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/climits_hdr", srcs = ["//include:libc/isystem/climits"], outs = ["libc/isystem/climits"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/clocale_hdr", srcs = ["//include:libc/isystem/clocale"], outs = ["libc/isystem/clocale"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/clzerointrin.h_hdr", srcs = ["//include:libc/isystem/clzerointrin.h"], outs = ["libc/isystem/clzerointrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cmath_hdr", srcs = ["//include:libc/isystem/cmath"], outs = ["libc/isystem/cmath"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/codecvt_hdr", srcs = ["//include:libc/isystem/codecvt"], outs = ["libc/isystem/codecvt"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/compare_hdr", srcs = ["//include:libc/isystem/compare"], outs = ["libc/isystem/compare"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/complex.h_hdr", srcs = ["//include:libc/isystem/complex.h"], outs = ["libc/isystem/complex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/complex_hdr", srcs = ["//include:libc/isystem/complex"], outs = ["libc/isystem/complex"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/condition_variable_hdr", srcs = ["//include:libc/isystem/condition_variable"], outs = ["libc/isystem/condition_variable"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cosmo.h_hdr", srcs = ["//include:libc/isystem/cosmo.h"], outs = ["libc/isystem/cosmo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cpio.h_hdr", srcs = ["//include:libc/isystem/cpio.h"], outs = ["libc/isystem/cpio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cpuid.h_hdr", srcs = ["//include:libc/isystem/cpuid.h"], outs = ["libc/isystem/cpuid.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/crypt.h_hdr", srcs = ["//include:libc/isystem/crypt.h"], outs = ["libc/isystem/crypt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/csetjmp_hdr", srcs = ["//include:libc/isystem/csetjmp"], outs = ["libc/isystem/csetjmp"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/csignal_hdr", srcs = ["//include:libc/isystem/csignal"], outs = ["libc/isystem/csignal"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cstdarg_hdr", srcs = ["//include:libc/isystem/cstdarg"], outs = ["libc/isystem/cstdarg"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cstdbool_hdr", srcs = ["//include:libc/isystem/cstdbool"], outs = ["libc/isystem/cstdbool"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cstddef_hdr", srcs = ["//include:libc/isystem/cstddef"], outs = ["libc/isystem/cstddef"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cstdint_hdr", srcs = ["//include:libc/isystem/cstdint"], outs = ["libc/isystem/cstdint"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cstdio_hdr", srcs = ["//include:libc/isystem/cstdio"], outs = ["libc/isystem/cstdio"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cstdlib_hdr", srcs = ["//include:libc/isystem/cstdlib"], outs = ["libc/isystem/cstdlib"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cstring_hdr", srcs = ["//include:libc/isystem/cstring"], outs = ["libc/isystem/cstring"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ctgmath_hdr", srcs = ["//include:libc/isystem/ctgmath"], outs = ["libc/isystem/ctgmath"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ctime_hdr", srcs = ["//include:libc/isystem/ctime"], outs = ["libc/isystem/ctime"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ctype.h_hdr", srcs = ["//include:libc/isystem/ctype.h"], outs = ["libc/isystem/ctype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cwchar_hdr", srcs = ["//include:libc/isystem/cwchar"], outs = ["libc/isystem/cwchar"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cwctype_hdr", srcs = ["//include:libc/isystem/cwctype"], outs = ["libc/isystem/cwctype"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/cxxabi.h_hdr", srcs = ["//include:libc/isystem/cxxabi.h"], outs = ["libc/isystem/cxxabi.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/deque_hdr", srcs = ["//include:libc/isystem/deque"], outs = ["libc/isystem/deque"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/dirent.h_hdr", srcs = ["//include:libc/isystem/dirent.h"], outs = ["libc/isystem/dirent.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/dlfcn.h_hdr", srcs = ["//include:libc/isystem/dlfcn.h"], outs = ["libc/isystem/dlfcn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/elf.h_hdr", srcs = ["//include:libc/isystem/elf.h"], outs = ["libc/isystem/elf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/emmintrin.h_hdr", srcs = ["//include:libc/isystem/emmintrin.h"], outs = ["libc/isystem/emmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/endian.h_hdr", srcs = ["//include:libc/isystem/endian.h"], outs = ["libc/isystem/endian.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/err.h_hdr", srcs = ["//include:libc/isystem/err.h"], outs = ["libc/isystem/err.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/errno.h_hdr", srcs = ["//include:libc/isystem/errno.h"], outs = ["libc/isystem/errno.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/exception_hdr", srcs = ["//include:libc/isystem/exception"], outs = ["libc/isystem/exception"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/execution_hdr", srcs = ["//include:libc/isystem/execution"], outs = ["libc/isystem/execution"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/fcntl.h_hdr", srcs = ["//include:libc/isystem/fcntl.h"], outs = ["libc/isystem/fcntl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/features.h_hdr", srcs = ["//include:libc/isystem/features.h"], outs = ["libc/isystem/features.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/fenv.h_hdr", srcs = ["//include:libc/isystem/fenv.h"], outs = ["libc/isystem/fenv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/filesystem_hdr", srcs = ["//include:libc/isystem/filesystem"], outs = ["libc/isystem/filesystem"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/float.h_hdr", srcs = ["//include:libc/isystem/float.h"], outs = ["libc/isystem/float.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/fnmatch.h_hdr", srcs = ["//include:libc/isystem/fnmatch.h"], outs = ["libc/isystem/fnmatch.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/forward_list_hdr", srcs = ["//include:libc/isystem/forward_list"], outs = ["libc/isystem/forward_list"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/fstream_hdr", srcs = ["//include:libc/isystem/fstream"], outs = ["libc/isystem/fstream"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ftw.h_hdr", srcs = ["//include:libc/isystem/ftw.h"], outs = ["libc/isystem/ftw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/functional_hdr", srcs = ["//include:libc/isystem/functional"], outs = ["libc/isystem/functional"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/future_hdr", srcs = ["//include:libc/isystem/future"], outs = ["libc/isystem/future"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/getopt.h_hdr", srcs = ["//include:libc/isystem/getopt.h"], outs = ["libc/isystem/getopt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/glob.h_hdr", srcs = ["//include:libc/isystem/glob.h"], outs = ["libc/isystem/glob.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/grp.h_hdr", srcs = ["//include:libc/isystem/grp.h"], outs = ["libc/isystem/grp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/iconv.h_hdr", srcs = ["//include:libc/isystem/iconv.h"], outs = ["libc/isystem/iconv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ifaddrs.h_hdr", srcs = ["//include:libc/isystem/ifaddrs.h"], outs = ["libc/isystem/ifaddrs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/immintrin.h_hdr", srcs = ["//include:libc/isystem/immintrin.h"], outs = ["libc/isystem/immintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/initializer_list_hdr", srcs = ["//include:libc/isystem/initializer_list"], outs = ["libc/isystem/initializer_list"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/inttypes.h_hdr", srcs = ["//include:libc/isystem/inttypes.h"], outs = ["libc/isystem/inttypes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/iomanip_hdr", srcs = ["//include:libc/isystem/iomanip"], outs = ["libc/isystem/iomanip"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ios_hdr", srcs = ["//include:libc/isystem/ios"], outs = ["libc/isystem/ios"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/iosfwd_hdr", srcs = ["//include:libc/isystem/iosfwd"], outs = ["libc/isystem/iosfwd"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/iostream_hdr", srcs = ["//include:libc/isystem/iostream"], outs = ["libc/isystem/iostream"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/iso646.h_hdr", srcs = ["//include:libc/isystem/iso646.h"], outs = ["libc/isystem/iso646.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/istream_hdr", srcs = ["//include:libc/isystem/istream"], outs = ["libc/isystem/istream"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/iterator_hdr", srcs = ["//include:libc/isystem/iterator"], outs = ["libc/isystem/iterator"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/langinfo.h_hdr", srcs = ["//include:libc/isystem/langinfo.h"], outs = ["libc/isystem/langinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/libgen.h_hdr", srcs = ["//include:libc/isystem/libgen.h"], outs = ["libc/isystem/libgen.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/limits.h_hdr", srcs = ["//include:libc/isystem/limits.h"], outs = ["libc/isystem/limits.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/limits_hdr", srcs = ["//include:libc/isystem/limits"], outs = ["libc/isystem/limits"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/linux/futex.h_hdr", srcs = ["//include:libc/isystem/linux/futex.h"], outs = ["libc/isystem/linux/futex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/linux/limits.h_hdr", srcs = ["//include:libc/isystem/linux/limits.h"], outs = ["libc/isystem/linux/limits.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/linux/param.h_hdr", srcs = ["//include:libc/isystem/linux/param.h"], outs = ["libc/isystem/linux/param.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/linux/types.h_hdr", srcs = ["//include:libc/isystem/linux/types.h"], outs = ["libc/isystem/linux/types.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/list_hdr", srcs = ["//include:libc/isystem/list"], outs = ["libc/isystem/list"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/locale.h_hdr", srcs = ["//include:libc/isystem/locale.h"], outs = ["libc/isystem/locale.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/locale_hdr", srcs = ["//include:libc/isystem/locale"], outs = ["libc/isystem/locale"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/malloc.h_hdr", srcs = ["//include:libc/isystem/malloc.h"], outs = ["libc/isystem/malloc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/map_hdr", srcs = ["//include:libc/isystem/map"], outs = ["libc/isystem/map"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/math.h_hdr", srcs = ["//include:libc/isystem/math.h"], outs = ["libc/isystem/math.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/memory.h_hdr", srcs = ["//include:libc/isystem/memory.h"], outs = ["libc/isystem/memory.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/memory_hdr", srcs = ["//include:libc/isystem/memory"], outs = ["libc/isystem/memory"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/mm3dnow.h_hdr", srcs = ["//include:libc/isystem/mm3dnow.h"], outs = ["libc/isystem/mm3dnow.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/mm_malloc.h_hdr", srcs = ["//include:libc/isystem/mm_malloc.h"], outs = ["libc/isystem/mm_malloc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/mmintrin.h_hdr", srcs = ["//include:libc/isystem/mmintrin.h"], outs = ["libc/isystem/mmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/mntent.h_hdr", srcs = ["//include:libc/isystem/mntent.h"], outs = ["libc/isystem/mntent.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/monetary.h_hdr", srcs = ["//include:libc/isystem/monetary.h"], outs = ["libc/isystem/monetary.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/mutex_hdr", srcs = ["//include:libc/isystem/mutex"], outs = ["libc/isystem/mutex"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/mwaitxintrin.h_hdr", srcs = ["//include:libc/isystem/mwaitxintrin.h"], outs = ["libc/isystem/mwaitxintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/net/ethernet.h_hdr", srcs = ["//include:libc/isystem/net/ethernet.h"], outs = ["libc/isystem/net/ethernet.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/net/if.h_hdr", srcs = ["//include:libc/isystem/net/if.h"], outs = ["libc/isystem/net/if.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/net/if_arp.h_hdr", srcs = ["//include:libc/isystem/net/if_arp.h"], outs = ["libc/isystem/net/if_arp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/netdb.h_hdr", srcs = ["//include:libc/isystem/netdb.h"], outs = ["libc/isystem/netdb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/netinet/in.h_hdr", srcs = ["//include:libc/isystem/netinet/in.h"], outs = ["libc/isystem/netinet/in.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/netinet/ip.h_hdr", srcs = ["//include:libc/isystem/netinet/ip.h"], outs = ["libc/isystem/netinet/ip.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/netinet/tcp.h_hdr", srcs = ["//include:libc/isystem/netinet/tcp.h"], outs = ["libc/isystem/netinet/tcp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/netinet/udp.h_hdr", srcs = ["//include:libc/isystem/netinet/udp.h"], outs = ["libc/isystem/netinet/udp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/new_hdr", srcs = ["//include:libc/isystem/new"], outs = ["libc/isystem/new"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nl_types.h_hdr", srcs = ["//include:libc/isystem/nl_types.h"], outs = ["libc/isystem/nl_types.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nmmintrin.h_hdr", srcs = ["//include:libc/isystem/nmmintrin.h"], outs = ["libc/isystem/nmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync.h_hdr", srcs = ["//include:libc/isystem/nsync.h"], outs = ["libc/isystem/nsync.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_atomic.h_hdr", srcs = ["//include:libc/isystem/nsync_atomic.h"], outs = ["libc/isystem/nsync_atomic.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_counter.h_hdr", srcs = ["//include:libc/isystem/nsync_counter.h"], outs = ["libc/isystem/nsync_counter.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_cv.h_hdr", srcs = ["//include:libc/isystem/nsync_cv.h"], outs = ["libc/isystem/nsync_cv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_debug.h_hdr", srcs = ["//include:libc/isystem/nsync_debug.h"], outs = ["libc/isystem/nsync_debug.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_mu.h_hdr", srcs = ["//include:libc/isystem/nsync_mu.h"], outs = ["libc/isystem/nsync_mu.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_mu_wait.h_hdr", srcs = ["//include:libc/isystem/nsync_mu_wait.h"], outs = ["libc/isystem/nsync_mu_wait.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_note.h_hdr", srcs = ["//include:libc/isystem/nsync_note.h"], outs = ["libc/isystem/nsync_note.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_once.h_hdr", srcs = ["//include:libc/isystem/nsync_once.h"], outs = ["libc/isystem/nsync_once.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_time.h_hdr", srcs = ["//include:libc/isystem/nsync_time.h"], outs = ["libc/isystem/nsync_time.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/nsync_waiter.h_hdr", srcs = ["//include:libc/isystem/nsync_waiter.h"], outs = ["libc/isystem/nsync_waiter.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/numeric_hdr", srcs = ["//include:libc/isystem/numeric"], outs = ["libc/isystem/numeric"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/optional_hdr", srcs = ["//include:libc/isystem/optional"], outs = ["libc/isystem/optional"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ostream_hdr", srcs = ["//include:libc/isystem/ostream"], outs = ["libc/isystem/ostream"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/paths.h_hdr", srcs = ["//include:libc/isystem/paths.h"], outs = ["libc/isystem/paths.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/pmmintrin.h_hdr", srcs = ["//include:libc/isystem/pmmintrin.h"], outs = ["libc/isystem/pmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/poll.h_hdr", srcs = ["//include:libc/isystem/poll.h"], outs = ["libc/isystem/poll.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/popcntintrin.h_hdr", srcs = ["//include:libc/isystem/popcntintrin.h"], outs = ["libc/isystem/popcntintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/pthread.h_hdr", srcs = ["//include:libc/isystem/pthread.h"], outs = ["libc/isystem/pthread.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/pty.h_hdr", srcs = ["//include:libc/isystem/pty.h"], outs = ["libc/isystem/pty.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/pwd.h_hdr", srcs = ["//include:libc/isystem/pwd.h"], outs = ["libc/isystem/pwd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/queue_hdr", srcs = ["//include:libc/isystem/queue"], outs = ["libc/isystem/queue"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/random_hdr", srcs = ["//include:libc/isystem/random"], outs = ["libc/isystem/random"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ratio_hdr", srcs = ["//include:libc/isystem/ratio"], outs = ["libc/isystem/ratio"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/regex.h_hdr", srcs = ["//include:libc/isystem/regex.h"], outs = ["libc/isystem/regex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/regex_hdr", srcs = ["//include:libc/isystem/regex"], outs = ["libc/isystem/regex"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sched.h_hdr", srcs = ["//include:libc/isystem/sched.h"], outs = ["libc/isystem/sched.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/scoped_allocator_hdr", srcs = ["//include:libc/isystem/scoped_allocator"], outs = ["libc/isystem/scoped_allocator"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/search.h_hdr", srcs = ["//include:libc/isystem/search.h"], outs = ["libc/isystem/search.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/semaphore.h_hdr", srcs = ["//include:libc/isystem/semaphore.h"], outs = ["libc/isystem/semaphore.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/set_hdr", srcs = ["//include:libc/isystem/set"], outs = ["libc/isystem/set"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/setjmp.h_hdr", srcs = ["//include:libc/isystem/setjmp.h"], outs = ["libc/isystem/setjmp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sgxintrin.h_hdr", srcs = ["//include:libc/isystem/sgxintrin.h"], outs = ["libc/isystem/sgxintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/shared_mutex_hdr", srcs = ["//include:libc/isystem/shared_mutex"], outs = ["libc/isystem/shared_mutex"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/signal.h_hdr", srcs = ["//include:libc/isystem/signal.h"], outs = ["libc/isystem/signal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/smmintrin.h_hdr", srcs = ["//include:libc/isystem/smmintrin.h"], outs = ["libc/isystem/smmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/span_hdr", srcs = ["//include:libc/isystem/span"], outs = ["libc/isystem/span"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/spawn.h_hdr", srcs = ["//include:libc/isystem/spawn.h"], outs = ["libc/isystem/spawn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sstream_hdr", srcs = ["//include:libc/isystem/sstream"], outs = ["libc/isystem/sstream"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stack_hdr", srcs = ["//include:libc/isystem/stack"], outs = ["libc/isystem/stack"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdalign.h_hdr", srcs = ["//include:libc/isystem/stdalign.h"], outs = ["libc/isystem/stdalign.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdarg.h_hdr", srcs = ["//include:libc/isystem/stdarg.h"], outs = ["libc/isystem/stdarg.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdatomic.h_hdr", srcs = ["//include:libc/isystem/stdatomic.h"], outs = ["libc/isystem/stdatomic.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdbool.h_hdr", srcs = ["//include:libc/isystem/stdbool.h"], outs = ["libc/isystem/stdbool.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdc-predef.h_hdr", srcs = ["//include:libc/isystem/stdc-predef.h"], outs = ["libc/isystem/stdc-predef.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdckdint.h_hdr", srcs = ["//include:libc/isystem/stdckdint.h"], outs = ["libc/isystem/stdckdint.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stddef.h_hdr", srcs = ["//include:libc/isystem/stddef.h"], outs = ["libc/isystem/stddef.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdexcept_hdr", srcs = ["//include:libc/isystem/stdexcept"], outs = ["libc/isystem/stdexcept"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdint.h_hdr", srcs = ["//include:libc/isystem/stdint.h"], outs = ["libc/isystem/stdint.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdio.h_hdr", srcs = ["//include:libc/isystem/stdio.h"], outs = ["libc/isystem/stdio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdio_ext.h_hdr", srcs = ["//include:libc/isystem/stdio_ext.h"], outs = ["libc/isystem/stdio_ext.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdlib.h_hdr", srcs = ["//include:libc/isystem/stdlib.h"], outs = ["libc/isystem/stdlib.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/stdnoreturn.h_hdr", srcs = ["//include:libc/isystem/stdnoreturn.h"], outs = ["libc/isystem/stdnoreturn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/streambuf_hdr", srcs = ["//include:libc/isystem/streambuf"], outs = ["libc/isystem/streambuf"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/string.h_hdr", srcs = ["//include:libc/isystem/string.h"], outs = ["libc/isystem/string.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/string_hdr", srcs = ["//include:libc/isystem/string"], outs = ["libc/isystem/string"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/string_view_hdr", srcs = ["//include:libc/isystem/string_view"], outs = ["libc/isystem/string_view"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/strings.h_hdr", srcs = ["//include:libc/isystem/strings.h"], outs = ["libc/isystem/strings.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/strstream_hdr", srcs = ["//include:libc/isystem/strstream"], outs = ["libc/isystem/strstream"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/auxv.h_hdr", srcs = ["//include:libc/isystem/sys/auxv.h"], outs = ["libc/isystem/sys/auxv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/cdefs.h_hdr", srcs = ["//include:libc/isystem/sys/cdefs.h"], outs = ["libc/isystem/sys/cdefs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/dir.h_hdr", srcs = ["//include:libc/isystem/sys/dir.h"], outs = ["libc/isystem/sys/dir.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/errno.h_hdr", srcs = ["//include:libc/isystem/sys/errno.h"], outs = ["libc/isystem/sys/errno.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/event.h_hdr", srcs = ["//include:libc/isystem/sys/event.h"], outs = ["libc/isystem/sys/event.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/fcntl.h_hdr", srcs = ["//include:libc/isystem/sys/fcntl.h"], outs = ["libc/isystem/sys/fcntl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/file.h_hdr", srcs = ["//include:libc/isystem/sys/file.h"], outs = ["libc/isystem/sys/file.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/ioctl.h_hdr", srcs = ["//include:libc/isystem/sys/ioctl.h"], outs = ["libc/isystem/sys/ioctl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/ipc.h_hdr", srcs = ["//include:libc/isystem/sys/ipc.h"], outs = ["libc/isystem/sys/ipc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/mman.h_hdr", srcs = ["//include:libc/isystem/sys/mman.h"], outs = ["libc/isystem/sys/mman.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/mount.h_hdr", srcs = ["//include:libc/isystem/sys/mount.h"], outs = ["libc/isystem/sys/mount.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/msg.h_hdr", srcs = ["//include:libc/isystem/sys/msg.h"], outs = ["libc/isystem/sys/msg.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/param.h_hdr", srcs = ["//include:libc/isystem/sys/param.h"], outs = ["libc/isystem/sys/param.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/poll.h_hdr", srcs = ["//include:libc/isystem/sys/poll.h"], outs = ["libc/isystem/sys/poll.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/prctl.h_hdr", srcs = ["//include:libc/isystem/sys/prctl.h"], outs = ["libc/isystem/sys/prctl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/procfs.h_hdr", srcs = ["//include:libc/isystem/sys/procfs.h"], outs = ["libc/isystem/sys/procfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/ptrace.h_hdr", srcs = ["//include:libc/isystem/sys/ptrace.h"], outs = ["libc/isystem/sys/ptrace.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/random.h_hdr", srcs = ["//include:libc/isystem/sys/random.h"], outs = ["libc/isystem/sys/random.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/reboot.h_hdr", srcs = ["//include:libc/isystem/sys/reboot.h"], outs = ["libc/isystem/sys/reboot.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/resource.h_hdr", srcs = ["//include:libc/isystem/sys/resource.h"], outs = ["libc/isystem/sys/resource.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/select.h_hdr", srcs = ["//include:libc/isystem/sys/select.h"], outs = ["libc/isystem/sys/select.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/sendfile.h_hdr", srcs = ["//include:libc/isystem/sys/sendfile.h"], outs = ["libc/isystem/sys/sendfile.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/signal.h_hdr", srcs = ["//include:libc/isystem/sys/signal.h"], outs = ["libc/isystem/sys/signal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/socket.h_hdr", srcs = ["//include:libc/isystem/sys/socket.h"], outs = ["libc/isystem/sys/socket.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/stat.h_hdr", srcs = ["//include:libc/isystem/sys/stat.h"], outs = ["libc/isystem/sys/stat.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/statfs.h_hdr", srcs = ["//include:libc/isystem/sys/statfs.h"], outs = ["libc/isystem/sys/statfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/statvfs.h_hdr", srcs = ["//include:libc/isystem/sys/statvfs.h"], outs = ["libc/isystem/sys/statvfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/syscall.h_hdr", srcs = ["//include:libc/isystem/sys/syscall.h"], outs = ["libc/isystem/sys/syscall.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/sysinfo.h_hdr", srcs = ["//include:libc/isystem/sys/sysinfo.h"], outs = ["libc/isystem/sys/sysinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/sysmacros.h_hdr", srcs = ["//include:libc/isystem/sys/sysmacros.h"], outs = ["libc/isystem/sys/sysmacros.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/termios.h_hdr", srcs = ["//include:libc/isystem/sys/termios.h"], outs = ["libc/isystem/sys/termios.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/time.h_hdr", srcs = ["//include:libc/isystem/sys/time.h"], outs = ["libc/isystem/sys/time.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/times.h_hdr", srcs = ["//include:libc/isystem/sys/times.h"], outs = ["libc/isystem/sys/times.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/ttydefaults.h_hdr", srcs = ["//include:libc/isystem/sys/ttydefaults.h"], outs = ["libc/isystem/sys/ttydefaults.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/types.h_hdr", srcs = ["//include:libc/isystem/sys/types.h"], outs = ["libc/isystem/sys/types.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/ucontext.h_hdr", srcs = ["//include:libc/isystem/sys/ucontext.h"], outs = ["libc/isystem/sys/ucontext.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/uio.h_hdr", srcs = ["//include:libc/isystem/sys/uio.h"], outs = ["libc/isystem/sys/uio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/un.h_hdr", srcs = ["//include:libc/isystem/sys/un.h"], outs = ["libc/isystem/sys/un.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/user.h_hdr", srcs = ["//include:libc/isystem/sys/user.h"], outs = ["libc/isystem/sys/user.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/utsname.h_hdr", srcs = ["//include:libc/isystem/sys/utsname.h"], outs = ["libc/isystem/sys/utsname.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/vfs.h_hdr", srcs = ["//include:libc/isystem/sys/vfs.h"], outs = ["libc/isystem/sys/vfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sys/wait.h_hdr", srcs = ["//include:libc/isystem/sys/wait.h"], outs = ["libc/isystem/sys/wait.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/sysexits.h_hdr", srcs = ["//include:libc/isystem/sysexits.h"], outs = ["libc/isystem/sysexits.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/syslog.h_hdr", srcs = ["//include:libc/isystem/syslog.h"], outs = ["libc/isystem/syslog.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/system_error_hdr", srcs = ["//include:libc/isystem/system_error"], outs = ["libc/isystem/system_error"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/termios.h_hdr", srcs = ["//include:libc/isystem/termios.h"], outs = ["libc/isystem/termios.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/tgmath.h_hdr", srcs = ["//include:libc/isystem/tgmath.h"], outs = ["libc/isystem/tgmath.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/thread_hdr", srcs = ["//include:libc/isystem/thread"], outs = ["libc/isystem/thread"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/time.h_hdr", srcs = ["//include:libc/isystem/time.h"], outs = ["libc/isystem/time.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/tmmintrin.h_hdr", srcs = ["//include:libc/isystem/tmmintrin.h"], outs = ["libc/isystem/tmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/tuple_hdr", srcs = ["//include:libc/isystem/tuple"], outs = ["libc/isystem/tuple"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/type_traits_hdr", srcs = ["//include:libc/isystem/type_traits"], outs = ["libc/isystem/type_traits"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/typeindex_hdr", srcs = ["//include:libc/isystem/typeindex"], outs = ["libc/isystem/typeindex"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/typeinfo_hdr", srcs = ["//include:libc/isystem/typeinfo"], outs = ["libc/isystem/typeinfo"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/uchar.h_hdr", srcs = ["//include:libc/isystem/uchar.h"], outs = ["libc/isystem/uchar.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/ucontext.h_hdr", srcs = ["//include:libc/isystem/ucontext.h"], outs = ["libc/isystem/ucontext.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/uio.h_hdr", srcs = ["//include:libc/isystem/uio.h"], outs = ["libc/isystem/uio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/unistd.h_hdr", srcs = ["//include:libc/isystem/unistd.h"], outs = ["libc/isystem/unistd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/unordered_map_hdr", srcs = ["//include:libc/isystem/unordered_map"], outs = ["libc/isystem/unordered_map"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/unordered_set_hdr", srcs = ["//include:libc/isystem/unordered_set"], outs = ["libc/isystem/unordered_set"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/utility_hdr", srcs = ["//include:libc/isystem/utility"], outs = ["libc/isystem/utility"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/utime.h_hdr", srcs = ["//include:libc/isystem/utime.h"], outs = ["libc/isystem/utime.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/utmp.h_hdr", srcs = ["//include:libc/isystem/utmp.h"], outs = ["libc/isystem/utmp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/utmpx.h_hdr", srcs = ["//include:libc/isystem/utmpx.h"], outs = ["libc/isystem/utmpx.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/valarray_hdr", srcs = ["//include:libc/isystem/valarray"], outs = ["libc/isystem/valarray"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/variant_hdr", srcs = ["//include:libc/isystem/variant"], outs = ["libc/isystem/variant"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/vector_hdr", srcs = ["//include:libc/isystem/vector"], outs = ["libc/isystem/vector"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/version_hdr", srcs = ["//include:libc/isystem/version"], outs = ["libc/isystem/version"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/wait.h_hdr", srcs = ["//include:libc/isystem/wait.h"], outs = ["libc/isystem/wait.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/wchar.h_hdr", srcs = ["//include:libc/isystem/wchar.h"], outs = ["libc/isystem/wchar.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/wctype.h_hdr", srcs = ["//include:libc/isystem/wctype.h"], outs = ["libc/isystem/wctype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/winternl.h_hdr", srcs = ["//include:libc/isystem/winternl.h"], outs = ["libc/isystem/winternl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/wmmintrin.h_hdr", srcs = ["//include:libc/isystem/wmmintrin.h"], outs = ["libc/isystem/wmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/x86intrin.h_hdr", srcs = ["//include:libc/isystem/x86intrin.h"], outs = ["libc/isystem/x86intrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/isystem/xmmintrin.h_hdr", srcs = ["//include:libc/isystem/xmmintrin.h"], outs = ["libc/isystem/xmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/limits.h_hdr", srcs = ["//include:libc/limits.h"], outs = ["libc/limits.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/literal.h_hdr", srcs = ["//include:libc/literal.h"], outs = ["libc/literal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/llp64.inc_hdr", srcs = ["//include:libc/llp64.inc"], outs = ["libc/llp64.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/appendresourcereport.internal.h_hdr", srcs = ["//include:libc/log/appendresourcereport.internal.h"], outs = ["libc/log/appendresourcereport.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/backtrace.internal.h_hdr", srcs = ["//include:libc/log/backtrace.internal.h"], outs = ["libc/log/backtrace.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/bsd.h_hdr", srcs = ["//include:libc/log/bsd.h"], outs = ["libc/log/bsd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/check.h_hdr", srcs = ["//include:libc/log/check.h"], outs = ["libc/log/check.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/color.internal.h_hdr", srcs = ["//include:libc/log/color.internal.h"], outs = ["libc/log/color.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/countbranch.h_hdr", srcs = ["//include:libc/log/countbranch.h"], outs = ["libc/log/countbranch.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/countexpr.h_hdr", srcs = ["//include:libc/log/countexpr.h"], outs = ["libc/log/countexpr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/gdb.h_hdr", srcs = ["//include:libc/log/gdb.h"], outs = ["libc/log/gdb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/getcallername.internal.h_hdr", srcs = ["//include:libc/log/getcallername.internal.h"], outs = ["libc/log/getcallername.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/internal.h_hdr", srcs = ["//include:libc/log/internal.h"], outs = ["libc/log/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/libfatal.internal.h_hdr", srcs = ["//include:libc/log/libfatal.internal.h"], outs = ["libc/log/libfatal.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/log.h_hdr", srcs = ["//include:libc/log/log.h"], outs = ["libc/log/log.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/rop.internal.h_hdr", srcs = ["//include:libc/log/rop.internal.h"], outs = ["libc/log/rop.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/log/traceme.h_hdr", srcs = ["//include:libc/log/traceme.h"], outs = ["libc/log/traceme.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/lp64.inc_hdr", srcs = ["//include:libc/lp64.inc"], outs = ["libc/lp64.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/lp64arg.inc_hdr", srcs = ["//include:libc/lp64arg.inc"], outs = ["libc/lp64arg.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mach.internal.h_hdr", srcs = ["//include:libc/mach.internal.h"], outs = ["libc/mach.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/macho.internal.h_hdr", srcs = ["//include:libc/macho.internal.h"], outs = ["libc/macho.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/macros.internal.h_hdr", srcs = ["//include:libc/macros.internal.h"], outs = ["libc/macros.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/math.h_hdr", srcs = ["//include:libc/math.h"], outs = ["libc/math.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/alg.h_hdr", srcs = ["//include:libc/mem/alg.h"], outs = ["libc/mem/alg.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/alloca.h_hdr", srcs = ["//include:libc/mem/alloca.h"], outs = ["libc/mem/alloca.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/arraylist.internal.h_hdr", srcs = ["//include:libc/mem/arraylist.internal.h"], outs = ["libc/mem/arraylist.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/arraylist2.internal.h_hdr", srcs = ["//include:libc/mem/arraylist2.internal.h"], outs = ["libc/mem/arraylist2.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/bisect.internal.h_hdr", srcs = ["//include:libc/mem/bisect.internal.h"], outs = ["libc/mem/bisect.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/critbit0.h_hdr", srcs = ["//include:libc/mem/critbit0.h"], outs = ["libc/mem/critbit0.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/gc.h_hdr", srcs = ["//include:libc/mem/gc.h"], outs = ["libc/mem/gc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/gc.internal.h_hdr", srcs = ["//include:libc/mem/gc.internal.h"], outs = ["libc/mem/gc.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/hook.internal.h_hdr", srcs = ["//include:libc/mem/hook.internal.h"], outs = ["libc/mem/hook.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/internal.h_hdr", srcs = ["//include:libc/mem/internal.h"], outs = ["libc/mem/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/mem.h_hdr", srcs = ["//include:libc/mem/mem.h"], outs = ["libc/mem/mem.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/reverse.internal.h_hdr", srcs = ["//include:libc/mem/reverse.internal.h"], outs = ["libc/mem/reverse.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/shuffle.internal.h_hdr", srcs = ["//include:libc/mem/shuffle.internal.h"], outs = ["libc/mem/shuffle.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/mem/sortedints.internal.h_hdr", srcs = ["//include:libc/mem/sortedints.internal.h"], outs = ["libc/mem/sortedints.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/bench.h_hdr", srcs = ["//include:libc/nexgen32e/bench.h"], outs = ["libc/nexgen32e/bench.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/cachesize.h_hdr", srcs = ["//include:libc/nexgen32e/cachesize.h"], outs = ["libc/nexgen32e/cachesize.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/cpuid4.internal.h_hdr", srcs = ["//include:libc/nexgen32e/cpuid4.internal.h"], outs = ["libc/nexgen32e/cpuid4.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/crc32.h_hdr", srcs = ["//include:libc/nexgen32e/crc32.h"], outs = ["libc/nexgen32e/crc32.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/ffs.h_hdr", srcs = ["//include:libc/nexgen32e/ffs.h"], outs = ["libc/nexgen32e/ffs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/gc.internal.h_hdr", srcs = ["//include:libc/nexgen32e/gc.internal.h"], outs = ["libc/nexgen32e/gc.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/hascharacter.internal.h_hdr", srcs = ["//include:libc/nexgen32e/hascharacter.internal.h"], outs = ["libc/nexgen32e/hascharacter.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/kcpuids.h_hdr", srcs = ["//include:libc/nexgen32e/kcpuids.h"], outs = ["libc/nexgen32e/kcpuids.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/kompressor.h_hdr", srcs = ["//include:libc/nexgen32e/kompressor.h"], outs = ["libc/nexgen32e/kompressor.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/lz4.h_hdr", srcs = ["//include:libc/nexgen32e/lz4.h"], outs = ["libc/nexgen32e/lz4.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/macros.h_hdr", srcs = ["//include:libc/nexgen32e/macros.h"], outs = ["libc/nexgen32e/macros.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/macros.internal.inc_hdr", srcs = ["//include:libc/nexgen32e/macros.internal.inc"], outs = ["libc/nexgen32e/macros.internal.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/msr.internal.h_hdr", srcs = ["//include:libc/nexgen32e/msr.internal.h"], outs = ["libc/nexgen32e/msr.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/nexgen32e.h_hdr", srcs = ["//include:libc/nexgen32e/nexgen32e.h"], outs = ["libc/nexgen32e/nexgen32e.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/nt2sysv.h_hdr", srcs = ["//include:libc/nexgen32e/nt2sysv.h"], outs = ["libc/nexgen32e/nt2sysv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/pcmpstr.inc_hdr", srcs = ["//include:libc/nexgen32e/pcmpstr.inc"], outs = ["libc/nexgen32e/pcmpstr.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/rdtsc.h_hdr", srcs = ["//include:libc/nexgen32e/rdtsc.h"], outs = ["libc/nexgen32e/rdtsc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/rdtscp.h_hdr", srcs = ["//include:libc/nexgen32e/rdtscp.h"], outs = ["libc/nexgen32e/rdtscp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/sha.h_hdr", srcs = ["//include:libc/nexgen32e/sha.h"], outs = ["libc/nexgen32e/sha.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/stackframe.h_hdr", srcs = ["//include:libc/nexgen32e/stackframe.h"], outs = ["libc/nexgen32e/stackframe.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/trampoline.h_hdr", srcs = ["//include:libc/nexgen32e/trampoline.h"], outs = ["libc/nexgen32e/trampoline.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/uart.internal.h_hdr", srcs = ["//include:libc/nexgen32e/uart.internal.h"], outs = ["libc/nexgen32e/uart.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/vendor.internal.h_hdr", srcs = ["//include:libc/nexgen32e/vendor.internal.h"], outs = ["libc/nexgen32e/vendor.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/vidya.internal.h_hdr", srcs = ["//include:libc/nexgen32e/vidya.internal.h"], outs = ["libc/nexgen32e/vidya.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/x86compiler.h_hdr", srcs = ["//include:libc/nexgen32e/x86compiler.h"], outs = ["libc/nexgen32e/x86compiler.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/x86feature.h_hdr", srcs = ["//include:libc/nexgen32e/x86feature.h"], outs = ["libc/nexgen32e/x86feature.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/x86info.h_hdr", srcs = ["//include:libc/nexgen32e/x86info.h"], outs = ["libc/nexgen32e/x86info.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/x87conf.inc_hdr", srcs = ["//include:libc/nexgen32e/x87conf.inc"], outs = ["libc/nexgen32e/x87conf.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nexgen32e/yield.h_hdr", srcs = ["//include:libc/nexgen32e/yield.h"], outs = ["libc/nexgen32e/yield.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/normalize.inc_hdr", srcs = ["//include:libc/normalize.inc"], outs = ["libc/normalize.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/notice.inc_hdr", srcs = ["//include:libc/notice.inc"], outs = ["libc/notice.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/notice.internal.h_hdr", srcs = ["//include:libc/notice.internal.h"], outs = ["libc/notice.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/accounting.h_hdr", srcs = ["//include:libc/nt/accounting.h"], outs = ["libc/nt/accounting.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/automation.h_hdr", srcs = ["//include:libc/nt/automation.h"], outs = ["libc/nt/automation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/codegen.h_hdr", srcs = ["//include:libc/nt/codegen.h"], outs = ["libc/nt/codegen.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/comdlg.h_hdr", srcs = ["//include:libc/nt/comdlg.h"], outs = ["libc/nt/comdlg.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/comms.h_hdr", srcs = ["//include:libc/nt/comms.h"], outs = ["libc/nt/comms.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/console.h_hdr", srcs = ["//include:libc/nt/console.h"], outs = ["libc/nt/console.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/createfile.h_hdr", srcs = ["//include:libc/nt/createfile.h"], outs = ["libc/nt/createfile.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/debug.h_hdr", srcs = ["//include:libc/nt/debug.h"], outs = ["libc/nt/debug.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/dll.h_hdr", srcs = ["//include:libc/nt/dll.h"], outs = ["libc/nt/dll.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/efi.h_hdr", srcs = ["//include:libc/nt/efi.h"], outs = ["libc/nt/efi.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/accessmask.h_hdr", srcs = ["//include:libc/nt/enum/accessmask.h"], outs = ["libc/nt/enum/accessmask.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/afd.h_hdr", srcs = ["//include:libc/nt/enum/afd.h"], outs = ["libc/nt/enum/afd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/bitblt.h_hdr", srcs = ["//include:libc/nt/enum/bitblt.h"], outs = ["libc/nt/enum/bitblt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/callback.h_hdr", srcs = ["//include:libc/nt/enum/callback.h"], outs = ["libc/nt/enum/callback.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/color.h_hdr", srcs = ["//include:libc/nt/enum/color.h"], outs = ["libc/nt/enum/color.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/computernameformat.h_hdr", srcs = ["//include:libc/nt/enum/computernameformat.h"], outs = ["libc/nt/enum/computernameformat.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/consolemodeflags.h_hdr", srcs = ["//include:libc/nt/enum/consolemodeflags.h"], outs = ["libc/nt/enum/consolemodeflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/consoleselectionflags.h_hdr", srcs = ["//include:libc/nt/enum/consoleselectionflags.h"], outs = ["libc/nt/enum/consoleselectionflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/context.h_hdr", srcs = ["//include:libc/nt/enum/context.h"], outs = ["libc/nt/enum/context.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/copyfile.h_hdr", srcs = ["//include:libc/nt/enum/copyfile.h"], outs = ["libc/nt/enum/copyfile.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/creationdisposition.h_hdr", srcs = ["//include:libc/nt/enum/creationdisposition.h"], outs = ["libc/nt/enum/creationdisposition.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/cs.h_hdr", srcs = ["//include:libc/nt/enum/cs.h"], outs = ["libc/nt/enum/cs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/ctrlevent.h_hdr", srcs = ["//include:libc/nt/enum/ctrlevent.h"], outs = ["libc/nt/enum/ctrlevent.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/cw.h_hdr", srcs = ["//include:libc/nt/enum/cw.h"], outs = ["libc/nt/enum/cw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/dialogresult.h_hdr", srcs = ["//include:libc/nt/enum/dialogresult.h"], outs = ["libc/nt/enum/dialogresult.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/errormodeflags.h_hdr", srcs = ["//include:libc/nt/enum/errormodeflags.h"], outs = ["libc/nt/enum/errormodeflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/event.h_hdr", srcs = ["//include:libc/nt/enum/event.h"], outs = ["libc/nt/enum/event.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/eventtype.h_hdr", srcs = ["//include:libc/nt/enum/eventtype.h"], outs = ["libc/nt/enum/eventtype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/exceptionhandleractions.h_hdr", srcs = ["//include:libc/nt/enum/exceptionhandleractions.h"], outs = ["libc/nt/enum/exceptionhandleractions.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/fileflagandattributes.h_hdr", srcs = ["//include:libc/nt/enum/fileflagandattributes.h"], outs = ["libc/nt/enum/fileflagandattributes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/fileinfobyhandleclass.h_hdr", srcs = ["//include:libc/nt/enum/fileinfobyhandleclass.h"], outs = ["libc/nt/enum/fileinfobyhandleclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/fileinformationclass.h_hdr", srcs = ["//include:libc/nt/enum/fileinformationclass.h"], outs = ["libc/nt/enum/fileinformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/filelockflags.h_hdr", srcs = ["//include:libc/nt/enum/filelockflags.h"], outs = ["libc/nt/enum/filelockflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/filemapflags.h_hdr", srcs = ["//include:libc/nt/enum/filemapflags.h"], outs = ["libc/nt/enum/filemapflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/filemovemethod.h_hdr", srcs = ["//include:libc/nt/enum/filemovemethod.h"], outs = ["libc/nt/enum/filemovemethod.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/filesharemode.h_hdr", srcs = ["//include:libc/nt/enum/filesharemode.h"], outs = ["libc/nt/enum/filesharemode.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/filetype.h_hdr", srcs = ["//include:libc/nt/enum/filetype.h"], outs = ["libc/nt/enum/filetype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/fillattribute.h_hdr", srcs = ["//include:libc/nt/enum/fillattribute.h"], outs = ["libc/nt/enum/fillattribute.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/findexinfolevels.h_hdr", srcs = ["//include:libc/nt/enum/findexinfolevels.h"], outs = ["libc/nt/enum/findexinfolevels.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/findexsearchops.h_hdr", srcs = ["//include:libc/nt/enum/findexsearchops.h"], outs = ["libc/nt/enum/findexsearchops.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/formatmessageflags.h_hdr", srcs = ["//include:libc/nt/enum/formatmessageflags.h"], outs = ["libc/nt/enum/formatmessageflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/fsctl.h_hdr", srcs = ["//include:libc/nt/enum/fsctl.h"], outs = ["libc/nt/enum/fsctl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/fsinformationclass.h_hdr", srcs = ["//include:libc/nt/enum/fsinformationclass.h"], outs = ["libc/nt/enum/fsinformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/getfileexinfolevels.h_hdr", srcs = ["//include:libc/nt/enum/getfileexinfolevels.h"], outs = ["libc/nt/enum/getfileexinfolevels.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/heap.h_hdr", srcs = ["//include:libc/nt/enum/heap.h"], outs = ["libc/nt/enum/heap.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/ht.h_hdr", srcs = ["//include:libc/nt/enum/ht.h"], outs = ["libc/nt/enum/ht.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/idc.h_hdr", srcs = ["//include:libc/nt/enum/idc.h"], outs = ["libc/nt/enum/idc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/imageauxsymboltype.h_hdr", srcs = ["//include:libc/nt/enum/imageauxsymboltype.h"], outs = ["libc/nt/enum/imageauxsymboltype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/importobjectnametype.h_hdr", srcs = ["//include:libc/nt/enum/importobjectnametype.h"], outs = ["libc/nt/enum/importobjectnametype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/importobjecttype.h_hdr", srcs = ["//include:libc/nt/enum/importobjecttype.h"], outs = ["libc/nt/enum/importobjecttype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/io.h_hdr", srcs = ["//include:libc/nt/enum/io.h"], outs = ["libc/nt/enum/io.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/ioctl.h_hdr", srcs = ["//include:libc/nt/enum/ioctl.h"], outs = ["libc/nt/enum/ioctl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/jobobjectinfoclass.h_hdr", srcs = ["//include:libc/nt/enum/jobobjectinfoclass.h"], outs = ["libc/nt/enum/jobobjectinfoclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/keyaccess.h_hdr", srcs = ["//include:libc/nt/enum/keyaccess.h"], outs = ["libc/nt/enum/keyaccess.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/keyedevent.h_hdr", srcs = ["//include:libc/nt/enum/keyedevent.h"], outs = ["libc/nt/enum/keyedevent.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/keyinformationclass.h_hdr", srcs = ["//include:libc/nt/enum/keyinformationclass.h"], outs = ["libc/nt/enum/keyinformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/kwaitreason.h_hdr", srcs = ["//include:libc/nt/enum/kwaitreason.h"], outs = ["libc/nt/enum/kwaitreason.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/lang.h_hdr", srcs = ["//include:libc/nt/enum/lang.h"], outs = ["libc/nt/enum/lang.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/loadlibrarysearch.h_hdr", srcs = ["//include:libc/nt/enum/loadlibrarysearch.h"], outs = ["libc/nt/enum/loadlibrarysearch.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/lockfile.h_hdr", srcs = ["//include:libc/nt/enum/lockfile.h"], outs = ["libc/nt/enum/lockfile.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/mb.h_hdr", srcs = ["//include:libc/nt/enum/mb.h"], outs = ["libc/nt/enum/mb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/memflags.h_hdr", srcs = ["//include:libc/nt/enum/memflags.h"], outs = ["libc/nt/enum/memflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/memoryinformationclass.h_hdr", srcs = ["//include:libc/nt/enum/memoryinformationclass.h"], outs = ["libc/nt/enum/memoryinformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/mf.h_hdr", srcs = ["//include:libc/nt/enum/mf.h"], outs = ["libc/nt/enum/mf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/mk.h_hdr", srcs = ["//include:libc/nt/enum/mk.h"], outs = ["libc/nt/enum/mk.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/movefileexflags.h_hdr", srcs = ["//include:libc/nt/enum/movefileexflags.h"], outs = ["libc/nt/enum/movefileexflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/objectinformationclass.h_hdr", srcs = ["//include:libc/nt/enum/objectinformationclass.h"], outs = ["libc/nt/enum/objectinformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/offerpriority.h_hdr", srcs = ["//include:libc/nt/enum/offerpriority.h"], outs = ["libc/nt/enum/offerpriority.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/ofn.h_hdr", srcs = ["//include:libc/nt/enum/ofn.h"], outs = ["libc/nt/enum/ofn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/pageflags.h_hdr", srcs = ["//include:libc/nt/enum/pageflags.h"], outs = ["libc/nt/enum/pageflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/pdh.h_hdr", srcs = ["//include:libc/nt/enum/pdh.h"], outs = ["libc/nt/enum/pdh.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/processaccess.h_hdr", srcs = ["//include:libc/nt/enum/processaccess.h"], outs = ["libc/nt/enum/processaccess.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/processcreationflags.h_hdr", srcs = ["//include:libc/nt/enum/processcreationflags.h"], outs = ["libc/nt/enum/processcreationflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/processinfoclass.h_hdr", srcs = ["//include:libc/nt/enum/processinfoclass.h"], outs = ["libc/nt/enum/processinfoclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/procthreadattributes.h_hdr", srcs = ["//include:libc/nt/enum/procthreadattributes.h"], outs = ["libc/nt/enum/procthreadattributes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/progress.h_hdr", srcs = ["//include:libc/nt/enum/progress.h"], outs = ["libc/nt/enum/progress.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/pwr.h_hdr", srcs = ["//include:libc/nt/enum/pwr.h"], outs = ["libc/nt/enum/pwr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/rdw.h_hdr", srcs = ["//include:libc/nt/enum/rdw.h"], outs = ["libc/nt/enum/rdw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/reggetvalueflags.h_hdr", srcs = ["//include:libc/nt/enum/reggetvalueflags.h"], outs = ["libc/nt/enum/reggetvalueflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/regtype.h_hdr", srcs = ["//include:libc/nt/enum/regtype.h"], outs = ["libc/nt/enum/regtype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/replacefile.h_hdr", srcs = ["//include:libc/nt/enum/replacefile.h"], outs = ["libc/nt/enum/replacefile.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/sc.h_hdr", srcs = ["//include:libc/nt/enum/sc.h"], outs = ["libc/nt/enum/sc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/sectioninformationclass.h_hdr", srcs = ["//include:libc/nt/enum/sectioninformationclass.h"], outs = ["libc/nt/enum/sectioninformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/sectioninherit.h_hdr", srcs = ["//include:libc/nt/enum/sectioninherit.h"], outs = ["libc/nt/enum/sectioninherit.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/sectionmapflags.h_hdr", srcs = ["//include:libc/nt/enum/sectionmapflags.h"], outs = ["libc/nt/enum/sectionmapflags.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/securityimpersonationlevel.h_hdr", srcs = ["//include:libc/nt/enum/securityimpersonationlevel.h"], outs = ["libc/nt/enum/securityimpersonationlevel.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/securityinformation.h_hdr", srcs = ["//include:libc/nt/enum/securityinformation.h"], outs = ["libc/nt/enum/securityinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/signal.h_hdr", srcs = ["//include:libc/nt/enum/signal.h"], outs = ["libc/nt/enum/signal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/sio.h_hdr", srcs = ["//include:libc/nt/enum/sio.h"], outs = ["libc/nt/enum/sio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/size.h_hdr", srcs = ["//include:libc/nt/enum/size.h"], outs = ["libc/nt/enum/size.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/startf.h_hdr", srcs = ["//include:libc/nt/enum/startf.h"], outs = ["libc/nt/enum/startf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/statfs.h_hdr", srcs = ["//include:libc/nt/enum/statfs.h"], outs = ["libc/nt/enum/statfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/status.h_hdr", srcs = ["//include:libc/nt/enum/status.h"], outs = ["libc/nt/enum/status.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/sw.h_hdr", srcs = ["//include:libc/nt/enum/sw.h"], outs = ["libc/nt/enum/sw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/symboliclink.h_hdr", srcs = ["//include:libc/nt/enum/symboliclink.h"], outs = ["libc/nt/enum/symboliclink.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/systeminformationclass.h_hdr", srcs = ["//include:libc/nt/enum/systeminformationclass.h"], outs = ["libc/nt/enum/systeminformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/th32cs.h_hdr", srcs = ["//include:libc/nt/enum/th32cs.h"], outs = ["libc/nt/enum/th32cs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/threadaccess.h_hdr", srcs = ["//include:libc/nt/enum/threadaccess.h"], outs = ["libc/nt/enum/threadaccess.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/threadinfoclass.h_hdr", srcs = ["//include:libc/nt/enum/threadinfoclass.h"], outs = ["libc/nt/enum/threadinfoclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/threadpriority.h_hdr", srcs = ["//include:libc/nt/enum/threadpriority.h"], outs = ["libc/nt/enum/threadpriority.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/threadstate.h_hdr", srcs = ["//include:libc/nt/enum/threadstate.h"], outs = ["libc/nt/enum/threadstate.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/tokeninformationclass.h_hdr", srcs = ["//include:libc/nt/enum/tokeninformationclass.h"], outs = ["libc/nt/enum/tokeninformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/tokentype.h_hdr", srcs = ["//include:libc/nt/enum/tokentype.h"], outs = ["libc/nt/enum/tokentype.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/tpm.h_hdr", srcs = ["//include:libc/nt/enum/tpm.h"], outs = ["libc/nt/enum/tpm.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/valueinformationclass.h_hdr", srcs = ["//include:libc/nt/enum/valueinformationclass.h"], outs = ["libc/nt/enum/valueinformationclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/version.h_hdr", srcs = ["//include:libc/nt/enum/version.h"], outs = ["libc/nt/enum/version.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/vk.h_hdr", srcs = ["//include:libc/nt/enum/vk.h"], outs = ["libc/nt/enum/vk.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/wa.h_hdr", srcs = ["//include:libc/nt/enum/wa.h"], outs = ["libc/nt/enum/wa.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/wait.h_hdr", srcs = ["//include:libc/nt/enum/wait.h"], outs = ["libc/nt/enum/wait.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/wm.h_hdr", srcs = ["//include:libc/nt/enum/wm.h"], outs = ["libc/nt/enum/wm.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/ws.h_hdr", srcs = ["//include:libc/nt/enum/ws.h"], outs = ["libc/nt/enum/ws.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/wsa.h_hdr", srcs = ["//include:libc/nt/enum/wsa.h"], outs = ["libc/nt/enum/wsa.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/wsaid.h_hdr", srcs = ["//include:libc/nt/enum/wsaid.h"], outs = ["libc/nt/enum/wsaid.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/enum/wt.h_hdr", srcs = ["//include:libc/nt/enum/wt.h"], outs = ["libc/nt/enum/wt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/errors.h_hdr", srcs = ["//include:libc/nt/errors.h"], outs = ["libc/nt/errors.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/events.h_hdr", srcs = ["//include:libc/nt/events.h"], outs = ["libc/nt/events.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/files.h_hdr", srcs = ["//include:libc/nt/files.h"], outs = ["libc/nt/files.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/iocp.h_hdr", srcs = ["//include:libc/nt/iocp.h"], outs = ["libc/nt/iocp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/ipc.h_hdr", srcs = ["//include:libc/nt/ipc.h"], outs = ["libc/nt/ipc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/iphlpapi.h_hdr", srcs = ["//include:libc/nt/iphlpapi.h"], outs = ["libc/nt/iphlpapi.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/memory.h_hdr", srcs = ["//include:libc/nt/memory.h"], outs = ["libc/nt/memory.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/messagebox.h_hdr", srcs = ["//include:libc/nt/messagebox.h"], outs = ["libc/nt/messagebox.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/debug.h_hdr", srcs = ["//include:libc/nt/nt/debug.h"], outs = ["libc/nt/nt/debug.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/file.h_hdr", srcs = ["//include:libc/nt/nt/file.h"], outs = ["libc/nt/nt/file.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/ipc.h_hdr", srcs = ["//include:libc/nt/nt/ipc.h"], outs = ["libc/nt/nt/ipc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/key.h_hdr", srcs = ["//include:libc/nt/nt/key.h"], outs = ["libc/nt/nt/key.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/loader.h_hdr", srcs = ["//include:libc/nt/nt/loader.h"], outs = ["libc/nt/nt/loader.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/memory.h_hdr", srcs = ["//include:libc/nt/nt/memory.h"], outs = ["libc/nt/nt/memory.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/process.h_hdr", srcs = ["//include:libc/nt/nt/process.h"], outs = ["libc/nt/nt/process.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/sections.h_hdr", srcs = ["//include:libc/nt/nt/sections.h"], outs = ["libc/nt/nt/sections.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/signing.h_hdr", srcs = ["//include:libc/nt/nt/signing.h"], outs = ["libc/nt/nt/signing.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/thread.h_hdr", srcs = ["//include:libc/nt/nt/thread.h"], outs = ["libc/nt/nt/thread.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/thunk/process.inc_hdr", srcs = ["//include:libc/nt/nt/thunk/process.inc"], outs = ["libc/nt/nt/thunk/process.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/thunk/time.inc_hdr", srcs = ["//include:libc/nt/nt/thunk/time.inc"], outs = ["libc/nt/nt/thunk/time.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/nt/time.h_hdr", srcs = ["//include:libc/nt/nt/time.h"], outs = ["libc/nt/nt/time.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/ntdll.h_hdr", srcs = ["//include:libc/nt/ntdll.h"], outs = ["libc/nt/ntdll.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/ntdllimport.h_hdr", srcs = ["//include:libc/nt/ntdllimport.h"], outs = ["libc/nt/ntdllimport.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/paint.h_hdr", srcs = ["//include:libc/nt/paint.h"], outs = ["libc/nt/paint.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/pdh.h_hdr", srcs = ["//include:libc/nt/pdh.h"], outs = ["libc/nt/pdh.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/pedef.internal.h_hdr", srcs = ["//include:libc/nt/pedef.internal.h"], outs = ["libc/nt/pedef.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/privilege.h_hdr", srcs = ["//include:libc/nt/privilege.h"], outs = ["libc/nt/privilege.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/process.h_hdr", srcs = ["//include:libc/nt/process.h"], outs = ["libc/nt/process.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/registry.h_hdr", srcs = ["//include:libc/nt/registry.h"], outs = ["libc/nt/registry.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/runtime.h_hdr", srcs = ["//include:libc/nt/runtime.h"], outs = ["libc/nt/runtime.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/signals.h_hdr", srcs = ["//include:libc/nt/signals.h"], outs = ["libc/nt/signals.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/startupinfo.h_hdr", srcs = ["//include:libc/nt/startupinfo.h"], outs = ["libc/nt/startupinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/acl.h_hdr", srcs = ["//include:libc/nt/struct/acl.h"], outs = ["libc/nt/struct/acl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/afd.h_hdr", srcs = ["//include:libc/nt/struct/afd.h"], outs = ["libc/nt/struct/afd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/ansistring.h_hdr", srcs = ["//include:libc/nt/struct/ansistring.h"], outs = ["libc/nt/struct/ansistring.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/byhandlefileinformation.h_hdr", srcs = ["//include:libc/nt/struct/byhandlefileinformation.h"], outs = ["libc/nt/struct/byhandlefileinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/charinfo.h_hdr", srcs = ["//include:libc/nt/struct/charinfo.h"], outs = ["libc/nt/struct/charinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/clientid.h_hdr", srcs = ["//include:libc/nt/struct/clientid.h"], outs = ["libc/nt/struct/clientid.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/consolecursorinfo.h_hdr", srcs = ["//include:libc/nt/struct/consolecursorinfo.h"], outs = ["libc/nt/struct/consolecursorinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/consolescreenbufferinfo.h_hdr", srcs = ["//include:libc/nt/struct/consolescreenbufferinfo.h"], outs = ["libc/nt/struct/consolescreenbufferinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/consolescreenbufferinfoex.h_hdr", srcs = ["//include:libc/nt/struct/consolescreenbufferinfoex.h"], outs = ["libc/nt/struct/consolescreenbufferinfoex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/consoleselectioninfo.h_hdr", srcs = ["//include:libc/nt/struct/consoleselectioninfo.h"], outs = ["libc/nt/struct/consoleselectioninfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/context.h_hdr", srcs = ["//include:libc/nt/struct/context.h"], outs = ["libc/nt/struct/context.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/coord.h_hdr", srcs = ["//include:libc/nt/struct/coord.h"], outs = ["libc/nt/struct/coord.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/criticalsection.h_hdr", srcs = ["//include:libc/nt/struct/criticalsection.h"], outs = ["libc/nt/struct/criticalsection.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/criticalsectiondebug.h_hdr", srcs = ["//include:libc/nt/struct/criticalsectiondebug.h"], outs = ["libc/nt/struct/criticalsectiondebug.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/drawtextparams.h_hdr", srcs = ["//include:libc/nt/struct/drawtextparams.h"], outs = ["libc/nt/struct/drawtextparams.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/editmenu.h_hdr", srcs = ["//include:libc/nt/struct/editmenu.h"], outs = ["libc/nt/struct/editmenu.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/exceptionframe.h_hdr", srcs = ["//include:libc/nt/struct/exceptionframe.h"], outs = ["libc/nt/struct/exceptionframe.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fdset.h_hdr", srcs = ["//include:libc/nt/struct/fdset.h"], outs = ["libc/nt/struct/fdset.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fileaccessinformation.h_hdr", srcs = ["//include:libc/nt/struct/fileaccessinformation.h"], outs = ["libc/nt/struct/fileaccessinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filealignmentinformation.h_hdr", srcs = ["//include:libc/nt/struct/filealignmentinformation.h"], outs = ["libc/nt/struct/filealignmentinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fileallinformation.h_hdr", srcs = ["//include:libc/nt/struct/fileallinformation.h"], outs = ["libc/nt/struct/fileallinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fileallocationinformation.h_hdr", srcs = ["//include:libc/nt/struct/fileallocationinformation.h"], outs = ["libc/nt/struct/fileallocationinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fileattributetaginformation.h_hdr", srcs = ["//include:libc/nt/struct/fileattributetaginformation.h"], outs = ["libc/nt/struct/fileattributetaginformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filebasicinfo.h_hdr", srcs = ["//include:libc/nt/struct/filebasicinfo.h"], outs = ["libc/nt/struct/filebasicinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filebasicinformation.h_hdr", srcs = ["//include:libc/nt/struct/filebasicinformation.h"], outs = ["libc/nt/struct/filebasicinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filebothdirectoryinformation.h_hdr", srcs = ["//include:libc/nt/struct/filebothdirectoryinformation.h"], outs = ["libc/nt/struct/filebothdirectoryinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filecompressioninfo.h_hdr", srcs = ["//include:libc/nt/struct/filecompressioninfo.h"], outs = ["libc/nt/struct/filecompressioninfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filedirectoryinformation.h_hdr", srcs = ["//include:libc/nt/struct/filedirectoryinformation.h"], outs = ["libc/nt/struct/filedirectoryinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filedispositioninformation.h_hdr", srcs = ["//include:libc/nt/struct/filedispositioninformation.h"], outs = ["libc/nt/struct/filedispositioninformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fileeainformation.h_hdr", srcs = ["//include:libc/nt/struct/fileeainformation.h"], outs = ["libc/nt/struct/fileeainformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fileendoffileinformation.h_hdr", srcs = ["//include:libc/nt/struct/fileendoffileinformation.h"], outs = ["libc/nt/struct/fileendoffileinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filefsfullsizeinformation.h_hdr", srcs = ["//include:libc/nt/struct/filefsfullsizeinformation.h"], outs = ["libc/nt/struct/filefsfullsizeinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filefulldirectoryinformation.h_hdr", srcs = ["//include:libc/nt/struct/filefulldirectoryinformation.h"], outs = ["libc/nt/struct/filefulldirectoryinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filefulleainformation.h_hdr", srcs = ["//include:libc/nt/struct/filefulleainformation.h"], outs = ["libc/nt/struct/filefulleainformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fileinternalinformation.h_hdr", srcs = ["//include:libc/nt/struct/fileinternalinformation.h"], outs = ["libc/nt/struct/fileinternalinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filemailslotqueryinformation.h_hdr", srcs = ["//include:libc/nt/struct/filemailslotqueryinformation.h"], outs = ["libc/nt/struct/filemailslotqueryinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filemailslotsetinformation.h_hdr", srcs = ["//include:libc/nt/struct/filemailslotsetinformation.h"], outs = ["libc/nt/struct/filemailslotsetinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filemodeinformation.h_hdr", srcs = ["//include:libc/nt/struct/filemodeinformation.h"], outs = ["libc/nt/struct/filemodeinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filenameinformation.h_hdr", srcs = ["//include:libc/nt/struct/filenameinformation.h"], outs = ["libc/nt/struct/filenameinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filenamesinformation.h_hdr", srcs = ["//include:libc/nt/struct/filenamesinformation.h"], outs = ["libc/nt/struct/filenamesinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filenetworkopeninformation.h_hdr", srcs = ["//include:libc/nt/struct/filenetworkopeninformation.h"], outs = ["libc/nt/struct/filenetworkopeninformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filepipelocalinformation.h_hdr", srcs = ["//include:libc/nt/struct/filepipelocalinformation.h"], outs = ["libc/nt/struct/filepipelocalinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filepositioninformation.h_hdr", srcs = ["//include:libc/nt/struct/filepositioninformation.h"], outs = ["libc/nt/struct/filepositioninformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filerenameinformation.h_hdr", srcs = ["//include:libc/nt/struct/filerenameinformation.h"], outs = ["libc/nt/struct/filerenameinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filesegmentelement.h_hdr", srcs = ["//include:libc/nt/struct/filesegmentelement.h"], outs = ["libc/nt/struct/filesegmentelement.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filestandardinformation.h_hdr", srcs = ["//include:libc/nt/struct/filestandardinformation.h"], outs = ["libc/nt/struct/filestandardinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filestreaminformation.h_hdr", srcs = ["//include:libc/nt/struct/filestreaminformation.h"], outs = ["libc/nt/struct/filestreaminformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filetime.h_hdr", srcs = ["//include:libc/nt/struct/filetime.h"], outs = ["libc/nt/struct/filetime.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/filezerodatainformation.h_hdr", srcs = ["//include:libc/nt/struct/filezerodatainformation.h"], outs = ["libc/nt/struct/filezerodatainformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/fpodata.h_hdr", srcs = ["//include:libc/nt/struct/fpodata.h"], outs = ["libc/nt/struct/fpodata.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/genericmapping.h_hdr", srcs = ["//include:libc/nt/struct/genericmapping.h"], outs = ["libc/nt/struct/genericmapping.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/guid.h_hdr", srcs = ["//include:libc/nt/struct/guid.h"], outs = ["libc/nt/struct/guid.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagearchivememberheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagearchivememberheader.internal.h"], outs = ["libc/nt/struct/imagearchivememberheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageauxsymbol.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageauxsymbol.internal.h"], outs = ["libc/nt/struct/imageauxsymbol.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageauxsymbolex.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageauxsymbolex.internal.h"], outs = ["libc/nt/struct/imageauxsymbolex.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageauxsymboltokendef.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageauxsymboltokendef.internal.h"], outs = ["libc/nt/struct/imageauxsymboltokendef.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagebaserelocation.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagebaserelocation.internal.h"], outs = ["libc/nt/struct/imagebaserelocation.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageboundforwarderref.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageboundforwarderref.internal.h"], outs = ["libc/nt/struct/imageboundforwarderref.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageboundimportdescriptor.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageboundimportdescriptor.internal.h"], outs = ["libc/nt/struct/imageboundimportdescriptor.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageceruntimefunctionentry.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageceruntimefunctionentry.internal.h"], outs = ["libc/nt/struct/imageceruntimefunctionentry.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagecoffsymbolsheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagecoffsymbolsheader.internal.h"], outs = ["libc/nt/struct/imagecoffsymbolsheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagedatadirectory.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagedatadirectory.internal.h"], outs = ["libc/nt/struct/imagedatadirectory.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagedebugdirectory.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagedebugdirectory.internal.h"], outs = ["libc/nt/struct/imagedebugdirectory.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagedebugmisc.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagedebugmisc.internal.h"], outs = ["libc/nt/struct/imagedebugmisc.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagedelayloaddescriptor.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagedelayloaddescriptor.internal.h"], outs = ["libc/nt/struct/imagedelayloaddescriptor.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagedosheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagedosheader.internal.h"], outs = ["libc/nt/struct/imagedosheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagedynamicrelocation.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagedynamicrelocation.internal.h"], outs = ["libc/nt/struct/imagedynamicrelocation.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagedynamicrelocationtable.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagedynamicrelocationtable.internal.h"], outs = ["libc/nt/struct/imagedynamicrelocationtable.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagedynamicrelocationv2.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagedynamicrelocationv2.internal.h"], outs = ["libc/nt/struct/imagedynamicrelocationv2.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageenclaveconfig.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageenclaveconfig.internal.h"], outs = ["libc/nt/struct/imageenclaveconfig.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageenclaveimport.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageenclaveimport.internal.h"], outs = ["libc/nt/struct/imageenclaveimport.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageepiloguedynamicrelocationheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageepiloguedynamicrelocationheader.internal.h"], outs = ["libc/nt/struct/imageepiloguedynamicrelocationheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageexportdirectory.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageexportdirectory.internal.h"], outs = ["libc/nt/struct/imageexportdirectory.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagefileheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagefileheader.internal.h"], outs = ["libc/nt/struct/imagefileheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagehotpatchbase.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagehotpatchbase.internal.h"], outs = ["libc/nt/struct/imagehotpatchbase.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagehotpatchhashes.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagehotpatchhashes.internal.h"], outs = ["libc/nt/struct/imagehotpatchhashes.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagehotpatchinfo.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagehotpatchinfo.internal.h"], outs = ["libc/nt/struct/imagehotpatchinfo.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageimportbyname.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageimportbyname.internal.h"], outs = ["libc/nt/struct/imageimportbyname.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageimportdescriptor.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageimportdescriptor.internal.h"], outs = ["libc/nt/struct/imageimportdescriptor.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagelinenumber.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagelinenumber.internal.h"], outs = ["libc/nt/struct/imagelinenumber.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageloadconfigcodeintegrity.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageloadconfigcodeintegrity.internal.h"], outs = ["libc/nt/struct/imageloadconfigcodeintegrity.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageloadconfigdirectory.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageloadconfigdirectory.internal.h"], outs = ["libc/nt/struct/imageloadconfigdirectory.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagentheaders.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagentheaders.internal.h"], outs = ["libc/nt/struct/imagentheaders.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageoptionalheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageoptionalheader.internal.h"], outs = ["libc/nt/struct/imageoptionalheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageprologuedynamicrelocationheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageprologuedynamicrelocationheader.internal.h"], outs = ["libc/nt/struct/imageprologuedynamicrelocationheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagerelocation.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagerelocation.internal.h"], outs = ["libc/nt/struct/imagerelocation.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageresourcedataentry.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageresourcedataentry.internal.h"], outs = ["libc/nt/struct/imageresourcedataentry.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageresourcedirectory.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageresourcedirectory.internal.h"], outs = ["libc/nt/struct/imageresourcedirectory.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageresourcedirectoryentry.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageresourcedirectoryentry.internal.h"], outs = ["libc/nt/struct/imageresourcedirectoryentry.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageresourcedirstring.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageresourcedirstring.internal.h"], outs = ["libc/nt/struct/imageresourcedirstring.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageromoptionalheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageromoptionalheader.internal.h"], outs = ["libc/nt/struct/imageromoptionalheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageruntimefunctionentry.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageruntimefunctionentry.internal.h"], outs = ["libc/nt/struct/imageruntimefunctionentry.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagesectionheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagesectionheader.internal.h"], outs = ["libc/nt/struct/imagesectionheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imageseparatedebugheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/imageseparatedebugheader.internal.h"], outs = ["libc/nt/struct/imageseparatedebugheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagesymbol.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagesymbol.internal.h"], outs = ["libc/nt/struct/imagesymbol.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagesymbolex.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagesymbolex.internal.h"], outs = ["libc/nt/struct/imagesymbolex.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagethunkdata.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagethunkdata.internal.h"], outs = ["libc/nt/struct/imagethunkdata.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/imagetlsdirectory.internal.h_hdr", srcs = ["//include:libc/nt/struct/imagetlsdirectory.internal.h"], outs = ["libc/nt/struct/imagetlsdirectory.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/importobjectheader.internal.h_hdr", srcs = ["//include:libc/nt/struct/importobjectheader.internal.h"], outs = ["libc/nt/struct/importobjectheader.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/inputrecord.h_hdr", srcs = ["//include:libc/nt/struct/inputrecord.h"], outs = ["libc/nt/struct/inputrecord.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/iocounters.h_hdr", srcs = ["//include:libc/nt/struct/iocounters.h"], outs = ["libc/nt/struct/iocounters.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/iostatusblock.h_hdr", srcs = ["//include:libc/nt/struct/iostatusblock.h"], outs = ["libc/nt/struct/iostatusblock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/iovec.h_hdr", srcs = ["//include:libc/nt/struct/iovec.h"], outs = ["libc/nt/struct/iovec.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/ipadapteraddresses.h_hdr", srcs = ["//include:libc/nt/struct/ipadapteraddresses.h"], outs = ["libc/nt/struct/ipadapteraddresses.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/kernelusertimes.h_hdr", srcs = ["//include:libc/nt/struct/kernelusertimes.h"], outs = ["libc/nt/struct/kernelusertimes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/ldr.h_hdr", srcs = ["//include:libc/nt/struct/ldr.h"], outs = ["libc/nt/struct/ldr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/ldrdatatableentry.h_hdr", srcs = ["//include:libc/nt/struct/ldrdatatableentry.h"], outs = ["libc/nt/struct/ldrdatatableentry.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/linger.h_hdr", srcs = ["//include:libc/nt/struct/linger.h"], outs = ["libc/nt/struct/linger.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/linkedlist.h_hdr", srcs = ["//include:libc/nt/struct/linkedlist.h"], outs = ["libc/nt/struct/linkedlist.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/luid.h_hdr", srcs = ["//include:libc/nt/struct/luid.h"], outs = ["libc/nt/struct/luid.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/luidandattributes.h_hdr", srcs = ["//include:libc/nt/struct/luidandattributes.h"], outs = ["libc/nt/struct/luidandattributes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/memorybasicinformation.h_hdr", srcs = ["//include:libc/nt/struct/memorybasicinformation.h"], outs = ["libc/nt/struct/memorybasicinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/memoryrangeentry.h_hdr", srcs = ["//include:libc/nt/struct/memoryrangeentry.h"], outs = ["libc/nt/struct/memoryrangeentry.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/memorystatusex.h_hdr", srcs = ["//include:libc/nt/struct/memorystatusex.h"], outs = ["libc/nt/struct/memorystatusex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/msg.h_hdr", srcs = ["//include:libc/nt/struct/msg.h"], outs = ["libc/nt/struct/msg.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/nonpageddebuginfo.h_hdr", srcs = ["//include:libc/nt/struct/nonpageddebuginfo.h"], outs = ["libc/nt/struct/nonpageddebuginfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/ntexceptionpointers.h_hdr", srcs = ["//include:libc/nt/struct/ntexceptionpointers.h"], outs = ["libc/nt/struct/ntexceptionpointers.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/ntexceptionrecord.h_hdr", srcs = ["//include:libc/nt/struct/ntexceptionrecord.h"], outs = ["libc/nt/struct/ntexceptionrecord.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/objectallinformation.h_hdr", srcs = ["//include:libc/nt/struct/objectallinformation.h"], outs = ["libc/nt/struct/objectallinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/objectattributes.h_hdr", srcs = ["//include:libc/nt/struct/objectattributes.h"], outs = ["libc/nt/struct/objectattributes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/objectbasicinformation.h_hdr", srcs = ["//include:libc/nt/struct/objectbasicinformation.h"], outs = ["libc/nt/struct/objectbasicinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/objectnameinformation.h_hdr", srcs = ["//include:libc/nt/struct/objectnameinformation.h"], outs = ["libc/nt/struct/objectnameinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/objecttypeinformation.h_hdr", srcs = ["//include:libc/nt/struct/objecttypeinformation.h"], outs = ["libc/nt/struct/objecttypeinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/openfilename.h_hdr", srcs = ["//include:libc/nt/struct/openfilename.h"], outs = ["libc/nt/struct/openfilename.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/osversioninfo.h_hdr", srcs = ["//include:libc/nt/struct/osversioninfo.h"], outs = ["libc/nt/struct/osversioninfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/overlapped.h_hdr", srcs = ["//include:libc/nt/struct/overlapped.h"], outs = ["libc/nt/struct/overlapped.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/overlappedentry.h_hdr", srcs = ["//include:libc/nt/struct/overlappedentry.h"], outs = ["libc/nt/struct/overlappedentry.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/paintstruct.h_hdr", srcs = ["//include:libc/nt/struct/paintstruct.h"], outs = ["libc/nt/struct/paintstruct.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/pdhfmtcountervalue.h_hdr", srcs = ["//include:libc/nt/struct/pdhfmtcountervalue.h"], outs = ["libc/nt/struct/pdhfmtcountervalue.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/peb.h_hdr", srcs = ["//include:libc/nt/struct/peb.h"], outs = ["libc/nt/struct/peb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/point.h_hdr", srcs = ["//include:libc/nt/struct/point.h"], outs = ["libc/nt/struct/point.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/pollfd.h_hdr", srcs = ["//include:libc/nt/struct/pollfd.h"], outs = ["libc/nt/struct/pollfd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/privilegeset.h_hdr", srcs = ["//include:libc/nt/struct/privilegeset.h"], outs = ["libc/nt/struct/privilegeset.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/processbasicinformation.h_hdr", srcs = ["//include:libc/nt/struct/processbasicinformation.h"], outs = ["libc/nt/struct/processbasicinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/processentry32.h_hdr", srcs = ["//include:libc/nt/struct/processentry32.h"], outs = ["libc/nt/struct/processentry32.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/processinformation.h_hdr", srcs = ["//include:libc/nt/struct/processinformation.h"], outs = ["libc/nt/struct/processinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/processmemorycounters.h_hdr", srcs = ["//include:libc/nt/struct/processmemorycounters.h"], outs = ["libc/nt/struct/processmemorycounters.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/procthreadattributelist.h_hdr", srcs = ["//include:libc/nt/struct/procthreadattributelist.h"], outs = ["libc/nt/struct/procthreadattributelist.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/rect.h_hdr", srcs = ["//include:libc/nt/struct/rect.h"], outs = ["libc/nt/struct/rect.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/reparsedatabuffer.h_hdr", srcs = ["//include:libc/nt/struct/reparsedatabuffer.h"], outs = ["libc/nt/struct/reparsedatabuffer.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/rtluserprocessinformation.h_hdr", srcs = ["//include:libc/nt/struct/rtluserprocessinformation.h"], outs = ["libc/nt/struct/rtluserprocessinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/rtluserprocessparameters.h_hdr", srcs = ["//include:libc/nt/struct/rtluserprocessparameters.h"], outs = ["libc/nt/struct/rtluserprocessparameters.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/sectionimageinformation.h_hdr", srcs = ["//include:libc/nt/struct/sectionimageinformation.h"], outs = ["libc/nt/struct/sectionimageinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/securityattributes.h_hdr", srcs = ["//include:libc/nt/struct/securityattributes.h"], outs = ["libc/nt/struct/securityattributes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/securitydescriptor.h_hdr", srcs = ["//include:libc/nt/struct/securitydescriptor.h"], outs = ["libc/nt/struct/securitydescriptor.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/size.h_hdr", srcs = ["//include:libc/nt/struct/size.h"], outs = ["libc/nt/struct/size.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/smallrect.h_hdr", srcs = ["//include:libc/nt/struct/smallrect.h"], outs = ["libc/nt/struct/smallrect.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/startupinfo.h_hdr", srcs = ["//include:libc/nt/struct/startupinfo.h"], outs = ["libc/nt/struct/startupinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/startupinfoex.h_hdr", srcs = ["//include:libc/nt/struct/startupinfoex.h"], outs = ["libc/nt/struct/startupinfoex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systembasicinformation.h_hdr", srcs = ["//include:libc/nt/struct/systembasicinformation.h"], outs = ["libc/nt/struct/systembasicinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemexceptioninformation.h_hdr", srcs = ["//include:libc/nt/struct/systemexceptioninformation.h"], outs = ["libc/nt/struct/systemexceptioninformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemhandleentry.h_hdr", srcs = ["//include:libc/nt/struct/systemhandleentry.h"], outs = ["libc/nt/struct/systemhandleentry.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemhandleinformation.h_hdr", srcs = ["//include:libc/nt/struct/systemhandleinformation.h"], outs = ["libc/nt/struct/systemhandleinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systeminfo.h_hdr", srcs = ["//include:libc/nt/struct/systeminfo.h"], outs = ["libc/nt/struct/systeminfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systeminterruptinformation.h_hdr", srcs = ["//include:libc/nt/struct/systeminterruptinformation.h"], outs = ["libc/nt/struct/systeminterruptinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemlookasideinformation.h_hdr", srcs = ["//include:libc/nt/struct/systemlookasideinformation.h"], outs = ["libc/nt/struct/systemlookasideinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemperformanceinformation.h_hdr", srcs = ["//include:libc/nt/struct/systemperformanceinformation.h"], outs = ["libc/nt/struct/systemperformanceinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemprocessinformation.h_hdr", srcs = ["//include:libc/nt/struct/systemprocessinformation.h"], outs = ["libc/nt/struct/systemprocessinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemprocessorinformation.h_hdr", srcs = ["//include:libc/nt/struct/systemprocessorinformation.h"], outs = ["libc/nt/struct/systemprocessorinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemprocessorperformanceinformation.h_hdr", srcs = ["//include:libc/nt/struct/systemprocessorperformanceinformation.h"], outs = ["libc/nt/struct/systemprocessorperformanceinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemregistryquotainformation.h_hdr", srcs = ["//include:libc/nt/struct/systemregistryquotainformation.h"], outs = ["libc/nt/struct/systemregistryquotainformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemthreads.h_hdr", srcs = ["//include:libc/nt/struct/systemthreads.h"], outs = ["libc/nt/struct/systemthreads.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemtime.h_hdr", srcs = ["//include:libc/nt/struct/systemtime.h"], outs = ["libc/nt/struct/systemtime.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/systemtimeofdayinformation.h_hdr", srcs = ["//include:libc/nt/struct/systemtimeofdayinformation.h"], outs = ["libc/nt/struct/systemtimeofdayinformation.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/teb.h_hdr", srcs = ["//include:libc/nt/struct/teb.h"], outs = ["libc/nt/struct/teb.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/timeval.h_hdr", srcs = ["//include:libc/nt/struct/timeval.h"], outs = ["libc/nt/struct/timeval.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/tokenprivileges.h_hdr", srcs = ["//include:libc/nt/struct/tokenprivileges.h"], outs = ["libc/nt/struct/tokenprivileges.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/unicodestring.h_hdr", srcs = ["//include:libc/nt/struct/unicodestring.h"], outs = ["libc/nt/struct/unicodestring.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/userstack.h_hdr", srcs = ["//include:libc/nt/struct/userstack.h"], outs = ["libc/nt/struct/userstack.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/valent.h_hdr", srcs = ["//include:libc/nt/struct/valent.h"], outs = ["libc/nt/struct/valent.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/vmcounters.h_hdr", srcs = ["//include:libc/nt/struct/vmcounters.h"], outs = ["libc/nt/struct/vmcounters.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/win32fileattributedata.h_hdr", srcs = ["//include:libc/nt/struct/win32fileattributedata.h"], outs = ["libc/nt/struct/win32fileattributedata.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/win32finddata.h_hdr", srcs = ["//include:libc/nt/struct/win32finddata.h"], outs = ["libc/nt/struct/win32finddata.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/windowplacement.h_hdr", srcs = ["//include:libc/nt/struct/windowplacement.h"], outs = ["libc/nt/struct/windowplacement.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/wndclass.h_hdr", srcs = ["//include:libc/nt/struct/wndclass.h"], outs = ["libc/nt/struct/wndclass.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/struct/wndclassex.h_hdr", srcs = ["//include:libc/nt/struct/wndclassex.h"], outs = ["libc/nt/struct/wndclassex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/synchronization.h_hdr", srcs = ["//include:libc/nt/synchronization.h"], outs = ["libc/nt/synchronization.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/system.h_hdr", srcs = ["//include:libc/nt/system.h"], outs = ["libc/nt/system.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/systeminfo.h_hdr", srcs = ["//include:libc/nt/systeminfo.h"], outs = ["libc/nt/systeminfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thread.h_hdr", srcs = ["//include:libc/nt/thread.h"], outs = ["libc/nt/thread.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/accounting.inc_hdr", srcs = ["//include:libc/nt/thunk/accounting.inc"], outs = ["libc/nt/thunk/accounting.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/console.inc_hdr", srcs = ["//include:libc/nt/thunk/console.inc"], outs = ["libc/nt/thunk/console.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/files.inc_hdr", srcs = ["//include:libc/nt/thunk/files.inc"], outs = ["libc/nt/thunk/files.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/memory.inc_hdr", srcs = ["//include:libc/nt/thunk/memory.inc"], outs = ["libc/nt/thunk/memory.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/msabi.h_hdr", srcs = ["//include:libc/nt/thunk/msabi.h"], outs = ["libc/nt/thunk/msabi.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/ntdll.inc_hdr", srcs = ["//include:libc/nt/thunk/ntdll.inc"], outs = ["libc/nt/thunk/ntdll.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/ntfile.inc_hdr", srcs = ["//include:libc/nt/thunk/ntfile.inc"], outs = ["libc/nt/thunk/ntfile.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/paint.inc_hdr", srcs = ["//include:libc/nt/thunk/paint.inc"], outs = ["libc/nt/thunk/paint.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/process.inc_hdr", srcs = ["//include:libc/nt/thunk/process.inc"], outs = ["libc/nt/thunk/process.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/runtime.inc_hdr", srcs = ["//include:libc/nt/thunk/runtime.inc"], outs = ["libc/nt/thunk/runtime.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/signals.inc_hdr", srcs = ["//include:libc/nt/thunk/signals.inc"], outs = ["libc/nt/thunk/signals.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/startupinfo.inc_hdr", srcs = ["//include:libc/nt/thunk/startupinfo.inc"], outs = ["libc/nt/thunk/startupinfo.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/synchronization.inc_hdr", srcs = ["//include:libc/nt/thunk/synchronization.inc"], outs = ["libc/nt/thunk/synchronization.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/systeminfo.inc_hdr", srcs = ["//include:libc/nt/thunk/systeminfo.inc"], outs = ["libc/nt/thunk/systeminfo.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/thread.inc_hdr", srcs = ["//include:libc/nt/thunk/thread.inc"], outs = ["libc/nt/thunk/thread.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/thunk/winsock.inc_hdr", srcs = ["//include:libc/nt/thunk/winsock.inc"], outs = ["libc/nt/thunk/winsock.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/exceptionhandler.h_hdr", srcs = ["//include:libc/nt/typedef/exceptionhandler.h"], outs = ["libc/nt/typedef/exceptionhandler.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/handlerroutine.h_hdr", srcs = ["//include:libc/nt/typedef/handlerroutine.h"], outs = ["libc/nt/typedef/handlerroutine.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/hookproc.h_hdr", srcs = ["//include:libc/nt/typedef/hookproc.h"], outs = ["libc/nt/typedef/hookproc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/imagetlscallback.h_hdr", srcs = ["//include:libc/nt/typedef/imagetlscallback.h"], outs = ["libc/nt/typedef/imagetlscallback.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/ioapcroutine.h_hdr", srcs = ["//include:libc/nt/typedef/ioapcroutine.h"], outs = ["libc/nt/typedef/ioapcroutine.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/pknormalroutine.h_hdr", srcs = ["//include:libc/nt/typedef/pknormalroutine.h"], outs = ["libc/nt/typedef/pknormalroutine.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/timerproc.h_hdr", srcs = ["//include:libc/nt/typedef/timerproc.h"], outs = ["libc/nt/typedef/timerproc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/wambda.h_hdr", srcs = ["//include:libc/nt/typedef/wambda.h"], outs = ["libc/nt/typedef/wambda.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/wndenumproc.h_hdr", srcs = ["//include:libc/nt/typedef/wndenumproc.h"], outs = ["libc/nt/typedef/wndenumproc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/typedef/wndproc.h_hdr", srcs = ["//include:libc/nt/typedef/wndproc.h"], outs = ["libc/nt/typedef/wndproc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/version.h_hdr", srcs = ["//include:libc/nt/version.h"], outs = ["libc/nt/version.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/windows.h_hdr", srcs = ["//include:libc/nt/windows.h"], outs = ["libc/nt/windows.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/nt/winsock.h_hdr", srcs = ["//include:libc/nt/winsock.h"], outs = ["libc/nt/winsock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/paths.h_hdr", srcs = ["//include:libc/paths.h"], outs = ["libc/paths.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/proc/describefds.internal.h_hdr", srcs = ["//include:libc/proc/describefds.internal.h"], outs = ["libc/proc/describefds.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/proc/execve.internal.h_hdr", srcs = ["//include:libc/proc/execve.internal.h"], outs = ["libc/proc/execve.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/proc/ntspawn.h_hdr", srcs = ["//include:libc/proc/ntspawn.h"], outs = ["libc/proc/ntspawn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/proc/posix_spawn.h_hdr", srcs = ["//include:libc/proc/posix_spawn.h"], outs = ["libc/proc/posix_spawn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/proc/posix_spawn.internal.h_hdr", srcs = ["//include:libc/proc/posix_spawn.internal.h"], outs = ["libc/proc/posix_spawn.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/proc/proc.internal.h_hdr", srcs = ["//include:libc/proc/proc.internal.h"], outs = ["libc/proc/proc.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/clktck.h_hdr", srcs = ["//include:libc/runtime/clktck.h"], outs = ["libc/runtime/clktck.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/e820.internal.h_hdr", srcs = ["//include:libc/runtime/e820.internal.h"], outs = ["libc/runtime/e820.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/fenv.h_hdr", srcs = ["//include:libc/runtime/fenv.h"], outs = ["libc/runtime/fenv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/internal.h_hdr", srcs = ["//include:libc/runtime/internal.h"], outs = ["libc/runtime/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/memtrack.internal.h_hdr", srcs = ["//include:libc/runtime/memtrack.internal.h"], outs = ["libc/runtime/memtrack.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/metalprintf.internal.h_hdr", srcs = ["//include:libc/runtime/metalprintf.internal.h"], outs = ["libc/runtime/metalprintf.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/mman.internal.h_hdr", srcs = ["//include:libc/runtime/mman.internal.h"], outs = ["libc/runtime/mman.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/pathconf.h_hdr", srcs = ["//include:libc/runtime/pathconf.h"], outs = ["libc/runtime/pathconf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/pc.internal.h_hdr", srcs = ["//include:libc/runtime/pc.internal.h"], outs = ["libc/runtime/pc.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/runtime.h_hdr", srcs = ["//include:libc/runtime/runtime.h"], outs = ["libc/runtime/runtime.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/stack.h_hdr", srcs = ["//include:libc/runtime/stack.h"], outs = ["libc/runtime/stack.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/symbols.internal.h_hdr", srcs = ["//include:libc/runtime/symbols.internal.h"], outs = ["libc/runtime/symbols.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/sysconf.h_hdr", srcs = ["//include:libc/runtime/sysconf.h"], outs = ["libc/runtime/sysconf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/syslib.internal.h_hdr", srcs = ["//include:libc/runtime/syslib.internal.h"], outs = ["libc/runtime/syslib.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/unwind.h_hdr", srcs = ["//include:libc/runtime/unwind.h"], outs = ["libc/runtime/unwind.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/utmp.h_hdr", srcs = ["//include:libc/runtime/utmp.h"], outs = ["libc/runtime/utmp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/utmpx.h_hdr", srcs = ["//include:libc/runtime/utmpx.h"], outs = ["libc/runtime/utmpx.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/winargs.internal.h_hdr", srcs = ["//include:libc/runtime/winargs.internal.h"], outs = ["libc/runtime/winargs.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/runtime/zipos.internal.h_hdr", srcs = ["//include:libc/runtime/zipos.internal.h"], outs = ["libc/runtime/zipos.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/serialize.h_hdr", srcs = ["//include:libc/serialize.h"], outs = ["libc/serialize.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/alg.h_hdr", srcs = ["//include:libc/sock/alg.h"], outs = ["libc/sock/alg.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/epoll.h_hdr", srcs = ["//include:libc/sock/epoll.h"], outs = ["libc/sock/epoll.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/goodsocket.internal.h_hdr", srcs = ["//include:libc/sock/goodsocket.internal.h"], outs = ["libc/sock/goodsocket.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/ifaddrs.h_hdr", srcs = ["//include:libc/sock/ifaddrs.h"], outs = ["libc/sock/ifaddrs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/internal.h_hdr", srcs = ["//include:libc/sock/internal.h"], outs = ["libc/sock/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/ipclassify.internal.h_hdr", srcs = ["//include:libc/sock/ipclassify.internal.h"], outs = ["libc/sock/ipclassify.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/select.h_hdr", srcs = ["//include:libc/sock/select.h"], outs = ["libc/sock/select.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/select.internal.h_hdr", srcs = ["//include:libc/sock/select.internal.h"], outs = ["libc/sock/select.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/sendfile.internal.h_hdr", srcs = ["//include:libc/sock/sendfile.internal.h"], outs = ["libc/sock/sendfile.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/sock.h_hdr", srcs = ["//include:libc/sock/sock.h"], outs = ["libc/sock/sock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/arphdr.h_hdr", srcs = ["//include:libc/sock/struct/arphdr.h"], outs = ["libc/sock/struct/arphdr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/arpreq.h_hdr", srcs = ["//include:libc/sock/struct/arpreq.h"], outs = ["libc/sock/struct/arpreq.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/cmsghdr.h_hdr", srcs = ["//include:libc/sock/struct/cmsghdr.h"], outs = ["libc/sock/struct/cmsghdr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/cmsghdr.internal.h_hdr", srcs = ["//include:libc/sock/struct/cmsghdr.internal.h"], outs = ["libc/sock/struct/cmsghdr.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/ether_header.h_hdr", srcs = ["//include:libc/sock/struct/ether_header.h"], outs = ["libc/sock/struct/ether_header.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/ifconf.h_hdr", srcs = ["//include:libc/sock/struct/ifconf.h"], outs = ["libc/sock/struct/ifconf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/ifreq.h_hdr", srcs = ["//include:libc/sock/struct/ifreq.h"], outs = ["libc/sock/struct/ifreq.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/in6_pktinfo.h_hdr", srcs = ["//include:libc/sock/struct/in6_pktinfo.h"], outs = ["libc/sock/struct/in6_pktinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/in_pktinfo.h_hdr", srcs = ["//include:libc/sock/struct/in_pktinfo.h"], outs = ["libc/sock/struct/in_pktinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/ip_mreq.h_hdr", srcs = ["//include:libc/sock/struct/ip_mreq.h"], outs = ["libc/sock/struct/ip_mreq.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/linger.h_hdr", srcs = ["//include:libc/sock/struct/linger.h"], outs = ["libc/sock/struct/linger.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/msghdr.h_hdr", srcs = ["//include:libc/sock/struct/msghdr.h"], outs = ["libc/sock/struct/msghdr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/msghdr.internal.h_hdr", srcs = ["//include:libc/sock/struct/msghdr.internal.h"], outs = ["libc/sock/struct/msghdr.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/pollfd.h_hdr", srcs = ["//include:libc/sock/struct/pollfd.h"], outs = ["libc/sock/struct/pollfd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/pollfd.internal.h_hdr", srcs = ["//include:libc/sock/struct/pollfd.internal.h"], outs = ["libc/sock/struct/pollfd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/sockaddr.h_hdr", srcs = ["//include:libc/sock/struct/sockaddr.h"], outs = ["libc/sock/struct/sockaddr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/sockaddr.internal.h_hdr", srcs = ["//include:libc/sock/struct/sockaddr.internal.h"], outs = ["libc/sock/struct/sockaddr.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/sockaddr6-bsd.internal.h_hdr", srcs = ["//include:libc/sock/struct/sockaddr6-bsd.internal.h"], outs = ["libc/sock/struct/sockaddr6-bsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/struct/sockaddr6.h_hdr", srcs = ["//include:libc/sock/struct/sockaddr6.h"], outs = ["libc/sock/struct/sockaddr6.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/syscall_fd.internal.h_hdr", srcs = ["//include:libc/sock/syscall_fd.internal.h"], outs = ["libc/sock/syscall_fd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/syslog.h_hdr", srcs = ["//include:libc/sock/syslog.h"], outs = ["libc/sock/syslog.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/wsaid.internal.h_hdr", srcs = ["//include:libc/sock/wsaid.internal.h"], outs = ["libc/sock/wsaid.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sock/yoink.inc_hdr", srcs = ["//include:libc/sock/yoink.inc"], outs = ["libc/sock/yoink.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdalign.internal.h_hdr", srcs = ["//include:libc/stdalign.internal.h"], outs = ["libc/stdalign.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdbool.h_hdr", srcs = ["//include:libc/stdbool.h"], outs = ["libc/stdbool.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdckdint.h_hdr", srcs = ["//include:libc/stdckdint.h"], outs = ["libc/stdckdint.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/append.h_hdr", srcs = ["//include:libc/stdio/append.h"], outs = ["libc/stdio/append.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/big5.inc_hdr", srcs = ["//include:libc/stdio/big5.inc"], outs = ["libc/stdio/big5.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/codepages.inc_hdr", srcs = ["//include:libc/stdio/codepages.inc"], outs = ["libc/stdio/codepages.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/dprintf.h_hdr", srcs = ["//include:libc/stdio/dprintf.h"], outs = ["libc/stdio/dprintf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/fflush.internal.h_hdr", srcs = ["//include:libc/stdio/fflush.internal.h"], outs = ["libc/stdio/fflush.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/ftw.h_hdr", srcs = ["//include:libc/stdio/ftw.h"], outs = ["libc/stdio/ftw.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/gb18030.inc_hdr", srcs = ["//include:libc/stdio/gb18030.inc"], outs = ["libc/stdio/gb18030.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/hex.internal.h_hdr", srcs = ["//include:libc/stdio/hex.internal.h"], outs = ["libc/stdio/hex.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/hkscs.inc_hdr", srcs = ["//include:libc/stdio/hkscs.inc"], outs = ["libc/stdio/hkscs.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/iconv.h_hdr", srcs = ["//include:libc/stdio/iconv.h"], outs = ["libc/stdio/iconv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/internal.h_hdr", srcs = ["//include:libc/stdio/internal.h"], outs = ["libc/stdio/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/jis0208.inc_hdr", srcs = ["//include:libc/stdio/jis0208.inc"], outs = ["libc/stdio/jis0208.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/ksc.inc_hdr", srcs = ["//include:libc/stdio/ksc.inc"], outs = ["libc/stdio/ksc.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/lcg.internal.h_hdr", srcs = ["//include:libc/stdio/lcg.internal.h"], outs = ["libc/stdio/lcg.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/legacychars.inc_hdr", srcs = ["//include:libc/stdio/legacychars.inc"], outs = ["libc/stdio/legacychars.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/rand.h_hdr", srcs = ["//include:libc/stdio/rand.h"], outs = ["libc/stdio/rand.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/revjis.inc_hdr", srcs = ["//include:libc/stdio/revjis.inc"], outs = ["libc/stdio/revjis.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/stdio.h_hdr", srcs = ["//include:libc/stdio/stdio.h"], outs = ["libc/stdio/stdio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/stdio_ext.h_hdr", srcs = ["//include:libc/stdio/stdio_ext.h"], outs = ["libc/stdio/stdio_ext.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/strlist.internal.h_hdr", srcs = ["//include:libc/stdio/strlist.internal.h"], outs = ["libc/stdio/strlist.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/syscall.h_hdr", srcs = ["//include:libc/stdio/syscall.h"], outs = ["libc/stdio/syscall.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdio/sysparam.h_hdr", srcs = ["//include:libc/stdio/sysparam.h"], outs = ["libc/stdio/sysparam.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/stdlib.h_hdr", srcs = ["//include:libc/stdlib.h"], outs = ["libc/stdlib.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/blake2.h_hdr", srcs = ["//include:libc/str/blake2.h"], outs = ["libc/str/blake2.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/highwayhash64.h_hdr", srcs = ["//include:libc/str/highwayhash64.h"], outs = ["libc/str/highwayhash64.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/langinfo.h_hdr", srcs = ["//include:libc/str/langinfo.h"], outs = ["libc/str/langinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/locale.h_hdr", srcs = ["//include:libc/str/locale.h"], outs = ["libc/str/locale.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/mb.internal.h_hdr", srcs = ["//include:libc/str/mb.internal.h"], outs = ["libc/str/mb.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/nltypes.h_hdr", srcs = ["//include:libc/str/nltypes.h"], outs = ["libc/str/nltypes.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/slice.h_hdr", srcs = ["//include:libc/str/slice.h"], outs = ["libc/str/slice.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/str.h_hdr", srcs = ["//include:libc/str/str.h"], outs = ["libc/str/str.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/strwidth.h_hdr", srcs = ["//include:libc/str/strwidth.h"], outs = ["libc/str/strwidth.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/tab.internal.h_hdr", srcs = ["//include:libc/str/tab.internal.h"], outs = ["libc/str/tab.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/thompike.h_hdr", srcs = ["//include:libc/str/thompike.h"], outs = ["libc/str/thompike.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/tpdecodecb.internal.h_hdr", srcs = ["//include:libc/str/tpdecodecb.internal.h"], outs = ["libc/str/tpdecodecb.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/unicode.h_hdr", srcs = ["//include:libc/str/unicode.h"], outs = ["libc/str/unicode.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/utf16.h_hdr", srcs = ["//include:libc/str/utf16.h"], outs = ["libc/str/utf16.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/str/wcwidth_osx.internal.h_hdr", srcs = ["//include:libc/str/wcwidth_osx.internal.h"], outs = ["libc/str/wcwidth_osx.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/_posix.h_hdr", srcs = ["//include:libc/sysv/consts/_posix.h"], outs = ["libc/sysv/consts/_posix.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/af.h_hdr", srcs = ["//include:libc/sysv/consts/af.h"], outs = ["libc/sysv/consts/af.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/arch.h_hdr", srcs = ["//include:libc/sysv/consts/arch.h"], outs = ["libc/sysv/consts/arch.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/arp.h_hdr", srcs = ["//include:libc/sysv/consts/arp.h"], outs = ["libc/sysv/consts/arp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/at.h_hdr", srcs = ["//include:libc/sysv/consts/at.h"], outs = ["libc/sysv/consts/at.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/audit.h_hdr", srcs = ["//include:libc/sysv/consts/audit.h"], outs = ["libc/sysv/consts/audit.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/auxv.h_hdr", srcs = ["//include:libc/sysv/consts/auxv.h"], outs = ["libc/sysv/consts/auxv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/baud.internal.h_hdr", srcs = ["//include:libc/sysv/consts/baud.internal.h"], outs = ["libc/sysv/consts/baud.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/c.h_hdr", srcs = ["//include:libc/sysv/consts/c.h"], outs = ["libc/sysv/consts/c.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/cap.h_hdr", srcs = ["//include:libc/sysv/consts/cap.h"], outs = ["libc/sysv/consts/cap.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/clock.h_hdr", srcs = ["//include:libc/sysv/consts/clock.h"], outs = ["libc/sysv/consts/clock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/clone.h_hdr", srcs = ["//include:libc/sysv/consts/clone.h"], outs = ["libc/sysv/consts/clone.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/close.h_hdr", srcs = ["//include:libc/sysv/consts/close.h"], outs = ["libc/sysv/consts/close.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/dn.h_hdr", srcs = ["//include:libc/sysv/consts/dn.h"], outs = ["libc/sysv/consts/dn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/dt.h_hdr", srcs = ["//include:libc/sysv/consts/dt.h"], outs = ["libc/sysv/consts/dt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/endian.h_hdr", srcs = ["//include:libc/sysv/consts/endian.h"], outs = ["libc/sysv/consts/endian.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/epoll.h_hdr", srcs = ["//include:libc/sysv/consts/epoll.h"], outs = ["libc/sysv/consts/epoll.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ethernet.h_hdr", srcs = ["//include:libc/sysv/consts/ethernet.h"], outs = ["libc/sysv/consts/ethernet.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ex.h_hdr", srcs = ["//include:libc/sysv/consts/ex.h"], outs = ["libc/sysv/consts/ex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/exit.h_hdr", srcs = ["//include:libc/sysv/consts/exit.h"], outs = ["libc/sysv/consts/exit.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/f.h_hdr", srcs = ["//include:libc/sysv/consts/f.h"], outs = ["libc/sysv/consts/f.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/falloc.h_hdr", srcs = ["//include:libc/sysv/consts/falloc.h"], outs = ["libc/sysv/consts/falloc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/fan.h_hdr", srcs = ["//include:libc/sysv/consts/fan.h"], outs = ["libc/sysv/consts/fan.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/fbio.h_hdr", srcs = ["//include:libc/sysv/consts/fbio.h"], outs = ["libc/sysv/consts/fbio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/fd.h_hdr", srcs = ["//include:libc/sysv/consts/fd.h"], outs = ["libc/sysv/consts/fd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/fileno.h_hdr", srcs = ["//include:libc/sysv/consts/fileno.h"], outs = ["libc/sysv/consts/fileno.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/fio.h_hdr", srcs = ["//include:libc/sysv/consts/fio.h"], outs = ["libc/sysv/consts/fio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/fs.h_hdr", srcs = ["//include:libc/sysv/consts/fs.h"], outs = ["libc/sysv/consts/fs.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/futex.h_hdr", srcs = ["//include:libc/sysv/consts/futex.h"], outs = ["libc/sysv/consts/futex.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/grnd.h_hdr", srcs = ["//include:libc/sysv/consts/grnd.h"], outs = ["libc/sysv/consts/grnd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/hwcap.h_hdr", srcs = ["//include:libc/sysv/consts/hwcap.h"], outs = ["libc/sysv/consts/hwcap.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/icmp6.h_hdr", srcs = ["//include:libc/sysv/consts/icmp6.h"], outs = ["libc/sysv/consts/icmp6.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/iff.h_hdr", srcs = ["//include:libc/sysv/consts/iff.h"], outs = ["libc/sysv/consts/iff.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/in.h_hdr", srcs = ["//include:libc/sysv/consts/in.h"], outs = ["libc/sysv/consts/in.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/inaddr.h_hdr", srcs = ["//include:libc/sysv/consts/inaddr.h"], outs = ["libc/sysv/consts/inaddr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/inet6.h_hdr", srcs = ["//include:libc/sysv/consts/inet6.h"], outs = ["libc/sysv/consts/inet6.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/io.h_hdr", srcs = ["//include:libc/sysv/consts/io.h"], outs = ["libc/sysv/consts/io.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ioprio.h_hdr", srcs = ["//include:libc/sysv/consts/ioprio.h"], outs = ["libc/sysv/consts/ioprio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/iov.h_hdr", srcs = ["//include:libc/sysv/consts/iov.h"], outs = ["libc/sysv/consts/iov.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ip.h_hdr", srcs = ["//include:libc/sysv/consts/ip.h"], outs = ["libc/sysv/consts/ip.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ipport.h_hdr", srcs = ["//include:libc/sysv/consts/ipport.h"], outs = ["libc/sysv/consts/ipport.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ipproto.h_hdr", srcs = ["//include:libc/sysv/consts/ipproto.h"], outs = ["libc/sysv/consts/ipproto.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ipv6.h_hdr", srcs = ["//include:libc/sysv/consts/ipv6.h"], outs = ["libc/sysv/consts/ipv6.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/itimer.h_hdr", srcs = ["//include:libc/sysv/consts/itimer.h"], outs = ["libc/sysv/consts/itimer.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/kd.h_hdr", srcs = ["//include:libc/sysv/consts/kd.h"], outs = ["libc/sysv/consts/kd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/kern.h_hdr", srcs = ["//include:libc/sysv/consts/kern.h"], outs = ["libc/sysv/consts/kern.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/l.h_hdr", srcs = ["//include:libc/sysv/consts/l.h"], outs = ["libc/sysv/consts/l.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/limits.h_hdr", srcs = ["//include:libc/sysv/consts/limits.h"], outs = ["libc/sysv/consts/limits.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/lio.h_hdr", srcs = ["//include:libc/sysv/consts/lio.h"], outs = ["libc/sysv/consts/lio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/lock.h_hdr", srcs = ["//include:libc/sysv/consts/lock.h"], outs = ["libc/sysv/consts/lock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/log.h_hdr", srcs = ["//include:libc/sysv/consts/log.h"], outs = ["libc/sysv/consts/log.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/loglevel.h_hdr", srcs = ["//include:libc/sysv/consts/loglevel.h"], outs = ["libc/sysv/consts/loglevel.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/madv.h_hdr", srcs = ["//include:libc/sysv/consts/madv.h"], outs = ["libc/sysv/consts/madv.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/map.h_hdr", srcs = ["//include:libc/sysv/consts/map.h"], outs = ["libc/sysv/consts/map.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/mcast.h_hdr", srcs = ["//include:libc/sysv/consts/mcast.h"], outs = ["libc/sysv/consts/mcast.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/mfd.h_hdr", srcs = ["//include:libc/sysv/consts/mfd.h"], outs = ["libc/sysv/consts/mfd.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/mlock.h_hdr", srcs = ["//include:libc/sysv/consts/mlock.h"], outs = ["libc/sysv/consts/mlock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/modem.h_hdr", srcs = ["//include:libc/sysv/consts/modem.h"], outs = ["libc/sysv/consts/modem.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/mount.h_hdr", srcs = ["//include:libc/sysv/consts/mount.h"], outs = ["libc/sysv/consts/mount.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/mremap.h_hdr", srcs = ["//include:libc/sysv/consts/mremap.h"], outs = ["libc/sysv/consts/mremap.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/msg.h_hdr", srcs = ["//include:libc/sysv/consts/msg.h"], outs = ["libc/sysv/consts/msg.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/msync.h_hdr", srcs = ["//include:libc/sysv/consts/msync.h"], outs = ["libc/sysv/consts/msync.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/nr.h_hdr", srcs = ["//include:libc/sysv/consts/nr.h"], outs = ["libc/sysv/consts/nr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/nrlinux.h_hdr", srcs = ["//include:libc/sysv/consts/nrlinux.h"], outs = ["libc/sysv/consts/nrlinux.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/o.h_hdr", srcs = ["//include:libc/sysv/consts/o.h"], outs = ["libc/sysv/consts/o.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ok.h_hdr", srcs = ["//include:libc/sysv/consts/ok.h"], outs = ["libc/sysv/consts/ok.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/personality.h_hdr", srcs = ["//include:libc/sysv/consts/personality.h"], outs = ["libc/sysv/consts/personality.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/pf.h_hdr", srcs = ["//include:libc/sysv/consts/pf.h"], outs = ["libc/sysv/consts/pf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/poll.h_hdr", srcs = ["//include:libc/sysv/consts/poll.h"], outs = ["libc/sysv/consts/poll.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/posix.h_hdr", srcs = ["//include:libc/sysv/consts/posix.h"], outs = ["libc/sysv/consts/posix.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/pr.h_hdr", srcs = ["//include:libc/sysv/consts/pr.h"], outs = ["libc/sysv/consts/pr.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/prio.h_hdr", srcs = ["//include:libc/sysv/consts/prio.h"], outs = ["libc/sysv/consts/prio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/prot.h_hdr", srcs = ["//include:libc/sysv/consts/prot.h"], outs = ["libc/sysv/consts/prot.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/pt.h_hdr", srcs = ["//include:libc/sysv/consts/pt.h"], outs = ["libc/sysv/consts/pt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ptrace.h_hdr", srcs = ["//include:libc/sysv/consts/ptrace.h"], outs = ["libc/sysv/consts/ptrace.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/pty.h_hdr", srcs = ["//include:libc/sysv/consts/pty.h"], outs = ["libc/sysv/consts/pty.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/read.h_hdr", srcs = ["//include:libc/sysv/consts/read.h"], outs = ["libc/sysv/consts/read.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/reboot.h_hdr", srcs = ["//include:libc/sysv/consts/reboot.h"], outs = ["libc/sysv/consts/reboot.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/rlim.h_hdr", srcs = ["//include:libc/sysv/consts/rlim.h"], outs = ["libc/sysv/consts/rlim.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/rlimit.h_hdr", srcs = ["//include:libc/sysv/consts/rlimit.h"], outs = ["libc/sysv/consts/rlimit.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/rusage.h_hdr", srcs = ["//include:libc/sysv/consts/rusage.h"], outs = ["libc/sysv/consts/rusage.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/s.h_hdr", srcs = ["//include:libc/sysv/consts/s.h"], outs = ["libc/sysv/consts/s.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/sa.h_hdr", srcs = ["//include:libc/sysv/consts/sa.h"], outs = ["libc/sysv/consts/sa.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/sched.h_hdr", srcs = ["//include:libc/sysv/consts/sched.h"], outs = ["libc/sysv/consts/sched.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/scm.h_hdr", srcs = ["//include:libc/sysv/consts/scm.h"], outs = ["libc/sysv/consts/scm.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/seek.h_hdr", srcs = ["//include:libc/sysv/consts/seek.h"], outs = ["libc/sysv/consts/seek.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/sf.h_hdr", srcs = ["//include:libc/sysv/consts/sf.h"], outs = ["libc/sysv/consts/sf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/shm.h_hdr", srcs = ["//include:libc/sysv/consts/shm.h"], outs = ["libc/sysv/consts/shm.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/shut.h_hdr", srcs = ["//include:libc/sysv/consts/shut.h"], outs = ["libc/sysv/consts/shut.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/sicode.h_hdr", srcs = ["//include:libc/sysv/consts/sicode.h"], outs = ["libc/sysv/consts/sicode.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/sig.h_hdr", srcs = ["//include:libc/sysv/consts/sig.h"], outs = ["libc/sysv/consts/sig.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/sio.h_hdr", srcs = ["//include:libc/sysv/consts/sio.h"], outs = ["libc/sysv/consts/sio.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/so.h_hdr", srcs = ["//include:libc/sysv/consts/so.h"], outs = ["libc/sysv/consts/so.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/sock.h_hdr", srcs = ["//include:libc/sysv/consts/sock.h"], outs = ["libc/sysv/consts/sock.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/sol.h_hdr", srcs = ["//include:libc/sysv/consts/sol.h"], outs = ["libc/sysv/consts/sol.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/splice.h_hdr", srcs = ["//include:libc/sysv/consts/splice.h"], outs = ["libc/sysv/consts/splice.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/ss.h_hdr", srcs = ["//include:libc/sysv/consts/ss.h"], outs = ["libc/sysv/consts/ss.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/st.h_hdr", srcs = ["//include:libc/sysv/consts/st.h"], outs = ["libc/sysv/consts/st.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/syscon.internal.h_hdr", srcs = ["//include:libc/sysv/consts/syscon.internal.h"], outs = ["libc/sysv/consts/syscon.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/tcp.h_hdr", srcs = ["//include:libc/sysv/consts/tcp.h"], outs = ["libc/sysv/consts/tcp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/tcpopt.h_hdr", srcs = ["//include:libc/sysv/consts/tcpopt.h"], outs = ["libc/sysv/consts/tcpopt.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/termios.h_hdr", srcs = ["//include:libc/sysv/consts/termios.h"], outs = ["libc/sysv/consts/termios.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/th.h_hdr", srcs = ["//include:libc/sysv/consts/th.h"], outs = ["libc/sysv/consts/th.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/timer.h_hdr", srcs = ["//include:libc/sysv/consts/timer.h"], outs = ["libc/sysv/consts/timer.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/uc.h_hdr", srcs = ["//include:libc/sysv/consts/uc.h"], outs = ["libc/sysv/consts/uc.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/unmount.h_hdr", srcs = ["//include:libc/sysv/consts/unmount.h"], outs = ["libc/sysv/consts/unmount.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/utime.h_hdr", srcs = ["//include:libc/sysv/consts/utime.h"], outs = ["libc/sysv/consts/utime.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/w.h_hdr", srcs = ["//include:libc/sysv/consts/w.h"], outs = ["libc/sysv/consts/w.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/waitid.h_hdr", srcs = ["//include:libc/sysv/consts/waitid.h"], outs = ["libc/sysv/consts/waitid.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/consts/xopen.h_hdr", srcs = ["//include:libc/sysv/consts/xopen.h"], outs = ["libc/sysv/consts/xopen.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/errfuns.h_hdr", srcs = ["//include:libc/sysv/errfuns.h"], outs = ["libc/sysv/errfuns.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/sysv/macros.internal.h_hdr", srcs = ["//include:libc/sysv/macros.internal.h"], outs = ["libc/sysv/macros.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/temp.h_hdr", srcs = ["//include:libc/temp.h"], outs = ["libc/temp.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/freebsd.internal.h_hdr", srcs = ["//include:libc/thread/freebsd.internal.h"], outs = ["libc/thread/freebsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/itimer.internal.h_hdr", srcs = ["//include:libc/thread/itimer.internal.h"], outs = ["libc/thread/itimer.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/openbsd.internal.h_hdr", srcs = ["//include:libc/thread/openbsd.internal.h"], outs = ["libc/thread/openbsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/posixthread.internal.h_hdr", srcs = ["//include:libc/thread/posixthread.internal.h"], outs = ["libc/thread/posixthread.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/pt.internal.h_hdr", srcs = ["//include:libc/thread/pt.internal.h"], outs = ["libc/thread/pt.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/semaphore.h_hdr", srcs = ["//include:libc/thread/semaphore.h"], outs = ["libc/thread/semaphore.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/thread.h_hdr", srcs = ["//include:libc/thread/thread.h"], outs = ["libc/thread/thread.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/thread2.h_hdr", srcs = ["//include:libc/thread/thread2.h"], outs = ["libc/thread/thread2.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/tls.h_hdr", srcs = ["//include:libc/thread/tls.h"], outs = ["libc/thread/tls.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/tls2.internal.h_hdr", srcs = ["//include:libc/thread/tls2.internal.h"], outs = ["libc/thread/tls2.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/thread/xnu.internal.h_hdr", srcs = ["//include:libc/thread/xnu.internal.h"], outs = ["libc/thread/xnu.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/time/clockstonanos.internal.h_hdr", srcs = ["//include:libc/time/clockstonanos.internal.h"], outs = ["libc/time/clockstonanos.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/time/struct/timezone.h_hdr", srcs = ["//include:libc/time/struct/timezone.h"], outs = ["libc/time/struct/timezone.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/time/struct/tm.h_hdr", srcs = ["//include:libc/time/struct/tm.h"], outs = ["libc/time/struct/tm.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/time/struct/utimbuf.h_hdr", srcs = ["//include:libc/time/struct/utimbuf.h"], outs = ["libc/time/struct/utimbuf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/time/struct/utimbuf.internal.h_hdr", srcs = ["//include:libc/time/struct/utimbuf.internal.h"], outs = ["libc/time/struct/utimbuf.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/time/time.h_hdr", srcs = ["//include:libc/time/time.h"], outs = ["libc/time/time.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/time/tz.internal.h_hdr", srcs = ["//include:libc/time/tz.internal.h"], outs = ["libc/time/tz.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/time/tzfile.internal.h_hdr", srcs = ["//include:libc/time/tzfile.internal.h"], outs = ["libc/time/tzfile.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/atan_common.internal.h_hdr", srcs = ["//include:libc/tinymath/atan_common.internal.h"], outs = ["libc/tinymath/atan_common.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/atan_data.internal.h_hdr", srcs = ["//include:libc/tinymath/atan_data.internal.h"], outs = ["libc/tinymath/atan_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/atanf_common.internal.h_hdr", srcs = ["//include:libc/tinymath/atanf_common.internal.h"], outs = ["libc/tinymath/atanf_common.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/atanf_data.internal.h_hdr", srcs = ["//include:libc/tinymath/atanf_data.internal.h"], outs = ["libc/tinymath/atanf_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/complex.internal.h_hdr", srcs = ["//include:libc/tinymath/complex.internal.h"], outs = ["libc/tinymath/complex.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/emod.h_hdr", srcs = ["//include:libc/tinymath/emod.h"], outs = ["libc/tinymath/emod.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/emodl.h_hdr", srcs = ["//include:libc/tinymath/emodl.h"], outs = ["libc/tinymath/emodl.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/estrin_wrap.internal.h_hdr", srcs = ["//include:libc/tinymath/estrin_wrap.internal.h"], outs = ["libc/tinymath/estrin_wrap.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/exp2f_data.internal.h_hdr", srcs = ["//include:libc/tinymath/exp2f_data.internal.h"], outs = ["libc/tinymath/exp2f_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/exp_data.internal.h_hdr", srcs = ["//include:libc/tinymath/exp_data.internal.h"], outs = ["libc/tinymath/exp_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/expo.internal.h_hdr", srcs = ["//include:libc/tinymath/expo.internal.h"], outs = ["libc/tinymath/expo.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/feval.internal.h_hdr", srcs = ["//include:libc/tinymath/feval.internal.h"], outs = ["libc/tinymath/feval.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/freebsd.internal.h_hdr", srcs = ["//include:libc/tinymath/freebsd.internal.h"], outs = ["libc/tinymath/freebsd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/horner.internal.h_hdr", srcs = ["//include:libc/tinymath/horner.internal.h"], outs = ["libc/tinymath/horner.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/horner_wrap.internal.h_hdr", srcs = ["//include:libc/tinymath/horner_wrap.internal.h"], outs = ["libc/tinymath/horner_wrap.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/hornerf.internal.h_hdr", srcs = ["//include:libc/tinymath/hornerf.internal.h"], outs = ["libc/tinymath/hornerf.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/internal.h_hdr", srcs = ["//include:libc/tinymath/internal.h"], outs = ["libc/tinymath/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/invtrigl.internal.h_hdr", srcs = ["//include:libc/tinymath/invtrigl.internal.h"], outs = ["libc/tinymath/invtrigl.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/kernel.internal.h_hdr", srcs = ["//include:libc/tinymath/kernel.internal.h"], outs = ["libc/tinymath/kernel.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/ldshape.internal.h_hdr", srcs = ["//include:libc/tinymath/ldshape.internal.h"], outs = ["libc/tinymath/ldshape.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/log1pf_data.internal.h_hdr", srcs = ["//include:libc/tinymath/log1pf_data.internal.h"], outs = ["libc/tinymath/log1pf_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/log2_data.internal.h_hdr", srcs = ["//include:libc/tinymath/log2_data.internal.h"], outs = ["libc/tinymath/log2_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/log2f_data.internal.h_hdr", srcs = ["//include:libc/tinymath/log2f_data.internal.h"], outs = ["libc/tinymath/log2f_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/log_data.internal.h_hdr", srcs = ["//include:libc/tinymath/log_data.internal.h"], outs = ["libc/tinymath/log_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/logf_data.internal.h_hdr", srcs = ["//include:libc/tinymath/logf_data.internal.h"], outs = ["libc/tinymath/logf_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/magicu.h_hdr", srcs = ["//include:libc/tinymath/magicu.h"], outs = ["libc/tinymath/magicu.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/pow_data.internal.h_hdr", srcs = ["//include:libc/tinymath/pow_data.internal.h"], outs = ["libc/tinymath/pow_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/powf_data.internal.h_hdr", srcs = ["//include:libc/tinymath/powf_data.internal.h"], outs = ["libc/tinymath/powf_data.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/tinymath/sincosf.internal.h_hdr", srcs = ["//include:libc/tinymath/sincosf.internal.h"], outs = ["libc/tinymath/sincosf.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/type2str.h_hdr", srcs = ["//include:libc/type2str.h"], outs = ["libc/type2str.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/vga/tty-graph.inc_hdr", srcs = ["//include:libc/vga/tty-graph.inc"], outs = ["libc/vga/tty-graph.inc"], cmd_bash = "cp $< $@")
+genrule(name = "libc/vga/vga.internal.h_hdr", srcs = ["//include:libc/vga/vga.internal.h"], outs = ["libc/vga/vga.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/x/x.h_hdr", srcs = ["//include:libc/x/x.h"], outs = ["libc/x/x.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/x/xasprintf.h_hdr", srcs = ["//include:libc/x/xasprintf.h"], outs = ["libc/x/xasprintf.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/x/xgetline.h_hdr", srcs = ["//include:libc/x/xgetline.h"], outs = ["libc/x/xgetline.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/x/xiso8601.h_hdr", srcs = ["//include:libc/x/xiso8601.h"], outs = ["libc/x/xiso8601.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/x/xsigaction.h_hdr", srcs = ["//include:libc/x/xsigaction.h"], outs = ["libc/x/xsigaction.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/x/xspawn.h_hdr", srcs = ["//include:libc/x/xspawn.h"], outs = ["libc/x/xspawn.h"], cmd_bash = "cp $< $@")
+genrule(name = "libc/zip.internal.h_hdr", srcs = ["//include:libc/zip.internal.h"], outs = ["libc/zip.internal.h"], cmd_bash = "cp $< $@")
+
+# linux/
+filegroup(
+    name = "linux",
+    srcs = [
+        ":linux/futex.h_hdr",
+        ":linux/limits.h_hdr",
+        ":linux/param.h_hdr",
+        ":linux/types.h_hdr",
+    ],
+)
+
+genrule(name = "linux/futex.h_hdr", srcs = ["//include:linux/futex.h"], outs = ["linux/futex.h"], cmd_bash = "cp $< $@")
+genrule(name = "linux/limits.h_hdr", srcs = ["//include:linux/limits.h"], outs = ["linux/limits.h"], cmd_bash = "cp $< $@")
+genrule(name = "linux/param.h_hdr", srcs = ["//include:linux/param.h"], outs = ["linux/param.h"], cmd_bash = "cp $< $@")
+genrule(name = "linux/types.h_hdr", srcs = ["//include:linux/types.h"], outs = ["linux/types.h"], cmd_bash = "cp $< $@")
+
+# net/
+filegroup(
+    name = "net",
+    srcs = [
+        ":net/ethernet.h_hdr",
+        ":net/http/csscolor.h_hdr",
+        ":net/http/escape.h_hdr",
+        ":net/http/gethttpheader.inc_hdr",
+        ":net/http/gethttpmethod.inc_hdr",
+        ":net/http/http.h_hdr",
+        ":net/http/ip.h_hdr",
+        ":net/http/tokenbucket.h_hdr",
+        ":net/http/url.h_hdr",
+        ":net/if.h_hdr",
+        ":net/if_arp.h_hdr",
+    ],
+)
+
+genrule(name = "net/ethernet.h_hdr", srcs = ["//include:net/ethernet.h"], outs = ["net/ethernet.h"], cmd_bash = "cp $< $@")
+genrule(name = "net/http/csscolor.h_hdr", srcs = ["//include:net/http/csscolor.h"], outs = ["net/http/csscolor.h"], cmd_bash = "cp $< $@")
+genrule(name = "net/http/escape.h_hdr", srcs = ["//include:net/http/escape.h"], outs = ["net/http/escape.h"], cmd_bash = "cp $< $@")
+genrule(name = "net/http/gethttpheader.inc_hdr", srcs = ["//include:net/http/gethttpheader.inc"], outs = ["net/http/gethttpheader.inc"], cmd_bash = "cp $< $@")
+genrule(name = "net/http/gethttpmethod.inc_hdr", srcs = ["//include:net/http/gethttpmethod.inc"], outs = ["net/http/gethttpmethod.inc"], cmd_bash = "cp $< $@")
+genrule(name = "net/http/http.h_hdr", srcs = ["//include:net/http/http.h"], outs = ["net/http/http.h"], cmd_bash = "cp $< $@")
+genrule(name = "net/http/ip.h_hdr", srcs = ["//include:net/http/ip.h"], outs = ["net/http/ip.h"], cmd_bash = "cp $< $@")
+genrule(name = "net/http/tokenbucket.h_hdr", srcs = ["//include:net/http/tokenbucket.h"], outs = ["net/http/tokenbucket.h"], cmd_bash = "cp $< $@")
+genrule(name = "net/http/url.h_hdr", srcs = ["//include:net/http/url.h"], outs = ["net/http/url.h"], cmd_bash = "cp $< $@")
+genrule(name = "net/if.h_hdr", srcs = ["//include:net/if.h"], outs = ["net/if.h"], cmd_bash = "cp $< $@")
+genrule(name = "net/if_arp.h_hdr", srcs = ["//include:net/if_arp.h"], outs = ["net/if_arp.h"], cmd_bash = "cp $< $@")
+
+# netinet/
+filegroup(
+    name = "netinet",
+    srcs = [
+        ":netinet/in.h_hdr",
+        ":netinet/ip.h_hdr",
+        ":netinet/tcp.h_hdr",
+        ":netinet/udp.h_hdr",
+    ],
+)
+
+genrule(name = "netinet/in.h_hdr", srcs = ["//include:netinet/in.h"], outs = ["netinet/in.h"], cmd_bash = "cp $< $@")
+genrule(name = "netinet/ip.h_hdr", srcs = ["//include:netinet/ip.h"], outs = ["netinet/ip.h"], cmd_bash = "cp $< $@")
+genrule(name = "netinet/tcp.h_hdr", srcs = ["//include:netinet/tcp.h"], outs = ["netinet/tcp.h"], cmd_bash = "cp $< $@")
+genrule(name = "netinet/udp.h_hdr", srcs = ["//include:netinet/udp.h"], outs = ["netinet/udp.h"], cmd_bash = "cp $< $@")
+
+# sys/
+filegroup(
+    name = "sys",
+    srcs = [
+        ":sys/auxv.h_hdr",
+        ":sys/cdefs.h_hdr",
+        ":sys/dir.h_hdr",
+        ":sys/errno.h_hdr",
+        ":sys/event.h_hdr",
+        ":sys/fcntl.h_hdr",
+        ":sys/file.h_hdr",
+        ":sys/ioctl.h_hdr",
+        ":sys/ipc.h_hdr",
+        ":sys/mman.h_hdr",
+        ":sys/mount.h_hdr",
+        ":sys/msg.h_hdr",
+        ":sys/param.h_hdr",
+        ":sys/poll.h_hdr",
+        ":sys/prctl.h_hdr",
+        ":sys/procfs.h_hdr",
+        ":sys/ptrace.h_hdr",
+        ":sys/random.h_hdr",
+        ":sys/reboot.h_hdr",
+        ":sys/resource.h_hdr",
+        ":sys/select.h_hdr",
+        ":sys/sendfile.h_hdr",
+        ":sys/signal.h_hdr",
+        ":sys/socket.h_hdr",
+        ":sys/stat.h_hdr",
+        ":sys/statfs.h_hdr",
+        ":sys/statvfs.h_hdr",
+        ":sys/syscall.h_hdr",
+        ":sys/sysinfo.h_hdr",
+        ":sys/sysmacros.h_hdr",
+        ":sys/termios.h_hdr",
+        ":sys/time.h_hdr",
+        ":sys/times.h_hdr",
+        ":sys/ttydefaults.h_hdr",
+        ":sys/types.h_hdr",
+        ":sys/ucontext.h_hdr",
+        ":sys/uio.h_hdr",
+        ":sys/un.h_hdr",
+        ":sys/user.h_hdr",
+        ":sys/utsname.h_hdr",
+        ":sys/vfs.h_hdr",
+        ":sys/wait.h_hdr",
+    ],
+)
+
+genrule(name = "sys/auxv.h_hdr", srcs = ["//include:sys/auxv.h"], outs = ["sys/auxv.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/cdefs.h_hdr", srcs = ["//include:sys/cdefs.h"], outs = ["sys/cdefs.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/dir.h_hdr", srcs = ["//include:sys/dir.h"], outs = ["sys/dir.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/errno.h_hdr", srcs = ["//include:sys/errno.h"], outs = ["sys/errno.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/event.h_hdr", srcs = ["//include:sys/event.h"], outs = ["sys/event.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/fcntl.h_hdr", srcs = ["//include:sys/fcntl.h"], outs = ["sys/fcntl.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/file.h_hdr", srcs = ["//include:sys/file.h"], outs = ["sys/file.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/ioctl.h_hdr", srcs = ["//include:sys/ioctl.h"], outs = ["sys/ioctl.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/ipc.h_hdr", srcs = ["//include:sys/ipc.h"], outs = ["sys/ipc.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/mman.h_hdr", srcs = ["//include:sys/mman.h"], outs = ["sys/mman.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/mount.h_hdr", srcs = ["//include:sys/mount.h"], outs = ["sys/mount.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/msg.h_hdr", srcs = ["//include:sys/msg.h"], outs = ["sys/msg.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/param.h_hdr", srcs = ["//include:sys/param.h"], outs = ["sys/param.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/poll.h_hdr", srcs = ["//include:sys/poll.h"], outs = ["sys/poll.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/prctl.h_hdr", srcs = ["//include:sys/prctl.h"], outs = ["sys/prctl.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/procfs.h_hdr", srcs = ["//include:sys/procfs.h"], outs = ["sys/procfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/ptrace.h_hdr", srcs = ["//include:sys/ptrace.h"], outs = ["sys/ptrace.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/random.h_hdr", srcs = ["//include:sys/random.h"], outs = ["sys/random.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/reboot.h_hdr", srcs = ["//include:sys/reboot.h"], outs = ["sys/reboot.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/resource.h_hdr", srcs = ["//include:sys/resource.h"], outs = ["sys/resource.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/select.h_hdr", srcs = ["//include:sys/select.h"], outs = ["sys/select.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/sendfile.h_hdr", srcs = ["//include:sys/sendfile.h"], outs = ["sys/sendfile.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/signal.h_hdr", srcs = ["//include:sys/signal.h"], outs = ["sys/signal.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/socket.h_hdr", srcs = ["//include:sys/socket.h"], outs = ["sys/socket.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/stat.h_hdr", srcs = ["//include:sys/stat.h"], outs = ["sys/stat.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/statfs.h_hdr", srcs = ["//include:sys/statfs.h"], outs = ["sys/statfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/statvfs.h_hdr", srcs = ["//include:sys/statvfs.h"], outs = ["sys/statvfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/syscall.h_hdr", srcs = ["//include:sys/syscall.h"], outs = ["sys/syscall.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/sysinfo.h_hdr", srcs = ["//include:sys/sysinfo.h"], outs = ["sys/sysinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/sysmacros.h_hdr", srcs = ["//include:sys/sysmacros.h"], outs = ["sys/sysmacros.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/termios.h_hdr", srcs = ["//include:sys/termios.h"], outs = ["sys/termios.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/time.h_hdr", srcs = ["//include:sys/time.h"], outs = ["sys/time.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/times.h_hdr", srcs = ["//include:sys/times.h"], outs = ["sys/times.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/ttydefaults.h_hdr", srcs = ["//include:sys/ttydefaults.h"], outs = ["sys/ttydefaults.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/types.h_hdr", srcs = ["//include:sys/types.h"], outs = ["sys/types.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/ucontext.h_hdr", srcs = ["//include:sys/ucontext.h"], outs = ["sys/ucontext.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/uio.h_hdr", srcs = ["//include:sys/uio.h"], outs = ["sys/uio.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/un.h_hdr", srcs = ["//include:sys/un.h"], outs = ["sys/un.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/user.h_hdr", srcs = ["//include:sys/user.h"], outs = ["sys/user.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/utsname.h_hdr", srcs = ["//include:sys/utsname.h"], outs = ["sys/utsname.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/vfs.h_hdr", srcs = ["//include:sys/vfs.h"], outs = ["sys/vfs.h"], cmd_bash = "cp $< $@")
+genrule(name = "sys/wait.h_hdr", srcs = ["//include:sys/wait.h"], outs = ["sys/wait.h"], cmd_bash = "cp $< $@")
+
+# third_party/
+filegroup(
+    name = "third_party",
+    srcs = [
+        ":third_party/aarch64/acc_prof.internal.h_hdr",
+        ":third_party/aarch64/arm_acle.internal.h_hdr",
+        ":third_party/aarch64/arm_bf16.internal.h_hdr",
+        ":third_party/aarch64/arm_fp16.internal.h_hdr",
+        ":third_party/aarch64/arm_neon.internal.h_hdr",
+        ":third_party/aarch64/arm_sve.internal.h_hdr",
+        ":third_party/aarch64/openacc.internal.h_hdr",
+        ":third_party/dlmalloc/binmaps.inc_hdr",
+        ":third_party/dlmalloc/chunks.inc_hdr",
+        ":third_party/dlmalloc/debugging.inc_hdr",
+        ":third_party/dlmalloc/debuglib.inc_hdr",
+        ":third_party/dlmalloc/directmap.inc_hdr",
+        ":third_party/dlmalloc/dlmalloc.h_hdr",
+        ":third_party/dlmalloc/global.inc_hdr",
+        ":third_party/dlmalloc/headfoot.inc_hdr",
+        ":third_party/dlmalloc/hooks.inc_hdr",
+        ":third_party/dlmalloc/indexing.inc_hdr",
+        ":third_party/dlmalloc/init.inc_hdr",
+        ":third_party/dlmalloc/locks.inc_hdr",
+        ":third_party/dlmalloc/management.inc_hdr",
+        ":third_party/dlmalloc/mspaces.inc_hdr",
+        ":third_party/dlmalloc/platform.inc_hdr",
+        ":third_party/dlmalloc/runtimechecks.inc_hdr",
+        ":third_party/dlmalloc/smallbins.inc_hdr",
+        ":third_party/dlmalloc/statistics.inc_hdr",
+        ":third_party/dlmalloc/system.inc_hdr",
+        ":third_party/dlmalloc/trees.inc_hdr",
+        ":third_party/dlmalloc/vespene.internal.h_hdr",
+        ":third_party/gdtoa/gdtoa.h_hdr",
+        ":third_party/gdtoa/gdtoa.internal.h_hdr",
+        ":third_party/gdtoa/gdtoa_fltrnds.inc_hdr",
+        ":third_party/getopt/getopt.internal.h_hdr",
+        ":third_party/getopt/long1.h_hdr",
+        ":third_party/getopt/long2.h_hdr",
+        ":third_party/intel/adxintrin.internal.h_hdr",
+        ":third_party/intel/ammintrin.internal.h_hdr",
+        ":third_party/intel/amxbf16intrin.internal.h_hdr",
+        ":third_party/intel/amxint8intrin.internal.h_hdr",
+        ":third_party/intel/amxtileintrin.internal.h_hdr",
+        ":third_party/intel/avx2intrin.internal.h_hdr",
+        ":third_party/intel/avx5124fmapsintrin.internal.h_hdr",
+        ":third_party/intel/avx5124vnniwintrin.internal.h_hdr",
+        ":third_party/intel/avx512bf16intrin.internal.h_hdr",
+        ":third_party/intel/avx512bf16vlintrin.internal.h_hdr",
+        ":third_party/intel/avx512bitalgintrin.internal.h_hdr",
+        ":third_party/intel/avx512bwintrin.internal.h_hdr",
+        ":third_party/intel/avx512cdintrin.internal.h_hdr",
+        ":third_party/intel/avx512dqintrin.internal.h_hdr",
+        ":third_party/intel/avx512erintrin.internal.h_hdr",
+        ":third_party/intel/avx512fintrin.internal.h_hdr",
+        ":third_party/intel/avx512ifmaintrin.internal.h_hdr",
+        ":third_party/intel/avx512ifmavlintrin.internal.h_hdr",
+        ":third_party/intel/avx512pfintrin.internal.h_hdr",
+        ":third_party/intel/avx512vbmi2intrin.internal.h_hdr",
+        ":third_party/intel/avx512vbmi2vlintrin.internal.h_hdr",
+        ":third_party/intel/avx512vbmiintrin.internal.h_hdr",
+        ":third_party/intel/avx512vbmivlintrin.internal.h_hdr",
+        ":third_party/intel/avx512vlbwintrin.internal.h_hdr",
+        ":third_party/intel/avx512vldqintrin.internal.h_hdr",
+        ":third_party/intel/avx512vlintrin.internal.h_hdr",
+        ":third_party/intel/avx512vnniintrin.internal.h_hdr",
+        ":third_party/intel/avx512vnnivlintrin.internal.h_hdr",
+        ":third_party/intel/avx512vp2intersectintrin.internal.h_hdr",
+        ":third_party/intel/avx512vp2intersectvlintrin.internal.h_hdr",
+        ":third_party/intel/avx512vpopcntdqintrin.internal.h_hdr",
+        ":third_party/intel/avx512vpopcntdqvlintrin.internal.h_hdr",
+        ":third_party/intel/avxintrin.internal.h_hdr",
+        ":third_party/intel/avxvnniintrin.internal.h_hdr",
+        ":third_party/intel/bmi2intrin.internal.h_hdr",
+        ":third_party/intel/bmiintrin.internal.h_hdr",
+        ":third_party/intel/cetintrin.internal.h_hdr",
+        ":third_party/intel/cldemoteintrin.internal.h_hdr",
+        ":third_party/intel/clflushoptintrin.internal.h_hdr",
+        ":third_party/intel/clwbintrin.internal.h_hdr",
+        ":third_party/intel/clzerointrin.internal.h_hdr",
+        ":third_party/intel/cpuid.internal.h_hdr",
+        ":third_party/intel/emmintrin.internal.h_hdr",
+        ":third_party/intel/enqcmdintrin.internal.h_hdr",
+        ":third_party/intel/f16cintrin.internal.h_hdr",
+        ":third_party/intel/fma4intrin.internal.h_hdr",
+        ":third_party/intel/fmaintrin.internal.h_hdr",
+        ":third_party/intel/fxsrintrin.internal.h_hdr",
+        ":third_party/intel/gfniintrin.internal.h_hdr",
+        ":third_party/intel/hresetintrin.internal.h_hdr",
+        ":third_party/intel/ia32intrin.internal.h_hdr",
+        ":third_party/intel/immintrin.internal.h_hdr",
+        ":third_party/intel/keylockerintrin.internal.h_hdr",
+        ":third_party/intel/lwpintrin.internal.h_hdr",
+        ":third_party/intel/lzcntintrin.internal.h_hdr",
+        ":third_party/intel/mm3dnow.internal.h_hdr",
+        ":third_party/intel/mm_malloc.internal.h_hdr",
+        ":third_party/intel/mmintrin.internal.h_hdr",
+        ":third_party/intel/movdirintrin.internal.h_hdr",
+        ":third_party/intel/mwaitxintrin.internal.h_hdr",
+        ":third_party/intel/nmmintrin.internal.h_hdr",
+        ":third_party/intel/pconfigintrin.internal.h_hdr",
+        ":third_party/intel/pkuintrin.internal.h_hdr",
+        ":third_party/intel/pmmintrin.internal.h_hdr",
+        ":third_party/intel/popcntintrin.internal.h_hdr",
+        ":third_party/intel/prfchwintrin.internal.h_hdr",
+        ":third_party/intel/rdseedintrin.internal.h_hdr",
+        ":third_party/intel/rtmintrin.internal.h_hdr",
+        ":third_party/intel/serializeintrin.internal.h_hdr",
+        ":third_party/intel/sgxintrin.internal.h_hdr",
+        ":third_party/intel/shaintrin.internal.h_hdr",
+        ":third_party/intel/smmintrin.internal.h_hdr",
+        ":third_party/intel/tbmintrin.internal.h_hdr",
+        ":third_party/intel/tmmintrin.internal.h_hdr",
+        ":third_party/intel/tsxldtrkintrin.internal.h_hdr",
+        ":third_party/intel/uintrintrin.internal.h_hdr",
+        ":third_party/intel/vaesintrin.internal.h_hdr",
+        ":third_party/intel/vpclmulqdqintrin.internal.h_hdr",
+        ":third_party/intel/waitpkgintrin.internal.h_hdr",
+        ":third_party/intel/wbnoinvdintrin.internal.h_hdr",
+        ":third_party/intel/wmmintrin.internal.h_hdr",
+        ":third_party/intel/x86gprintrin.internal.h_hdr",
+        ":third_party/intel/x86intrin.internal.h_hdr",
+        ":third_party/intel/xmmintrin.internal.h_hdr",
+        ":third_party/intel/xopintrin.internal.h_hdr",
+        ":third_party/intel/xsavecintrin.internal.h_hdr",
+        ":third_party/intel/xsaveintrin.internal.h_hdr",
+        ":third_party/intel/xsaveoptintrin.internal.h_hdr",
+        ":third_party/intel/xsavesintrin.internal.h_hdr",
+        ":third_party/intel/xtestintrin.internal.h_hdr",
+        ":third_party/libcxx/__bit_reference_hdr",
+        ":third_party/libcxx/__bsd_locale_fallbacks.h_hdr",
+        ":third_party/libcxx/__config_hdr",
+        ":third_party/libcxx/__debug_hdr",
+        ":third_party/libcxx/__errc_hdr",
+        ":third_party/libcxx/__functional_base_hdr",
+        ":third_party/libcxx/__hash_table_hdr",
+        ":third_party/libcxx/__locale_hdr",
+        ":third_party/libcxx/__mutex_base_hdr",
+        ":third_party/libcxx/__node_handle_hdr",
+        ":third_party/libcxx/__nullptr_hdr",
+        ":third_party/libcxx/__split_buffer_hdr",
+        ":third_party/libcxx/__sso_allocator_hdr",
+        ":third_party/libcxx/__std_stream_hdr",
+        ":third_party/libcxx/__string_hdr",
+        ":third_party/libcxx/__threading_support_hdr",
+        ":third_party/libcxx/__tree_hdr",
+        ":third_party/libcxx/__tuple_hdr",
+        ":third_party/libcxx/__undef_macros_hdr",
+        ":third_party/libcxx/algorithm_hdr",
+        ":third_party/libcxx/any_hdr",
+        ":third_party/libcxx/array_hdr",
+        ":third_party/libcxx/atomic_hdr",
+        ":third_party/libcxx/atomic_support.hh_hdr",
+        ":third_party/libcxx/bit_hdr",
+        ":third_party/libcxx/bitset_hdr",
+        ":third_party/libcxx/cassert_hdr",
+        ":third_party/libcxx/ccomplex_hdr",
+        ":third_party/libcxx/cctype_hdr",
+        ":third_party/libcxx/cerrno_hdr",
+        ":third_party/libcxx/cfenv_hdr",
+        ":third_party/libcxx/cfloat_hdr",
+        ":third_party/libcxx/charconv_hdr",
+        ":third_party/libcxx/chrono_hdr",
+        ":third_party/libcxx/cinttypes_hdr",
+        ":third_party/libcxx/ciso646_hdr",
+        ":third_party/libcxx/climits_hdr",
+        ":third_party/libcxx/clocale_hdr",
+        ":third_party/libcxx/cmath_hdr",
+        ":third_party/libcxx/codecvt_hdr",
+        ":third_party/libcxx/compare_hdr",
+        ":third_party/libcxx/complex_hdr",
+        ":third_party/libcxx/condition_variable_hdr",
+        ":third_party/libcxx/config_elast.h_hdr",
+        ":third_party/libcxx/countof.internal.hh_hdr",
+        ":third_party/libcxx/csetjmp_hdr",
+        ":third_party/libcxx/csignal_hdr",
+        ":third_party/libcxx/cstdarg_hdr",
+        ":third_party/libcxx/cstdbool_hdr",
+        ":third_party/libcxx/cstddef_hdr",
+        ":third_party/libcxx/cstdint_hdr",
+        ":third_party/libcxx/cstdio_hdr",
+        ":third_party/libcxx/cstdlib_hdr",
+        ":third_party/libcxx/cstring_hdr",
+        ":third_party/libcxx/ctgmath_hdr",
+        ":third_party/libcxx/ctime_hdr",
+        ":third_party/libcxx/ctype.h_hdr",
+        ":third_party/libcxx/cwchar_hdr",
+        ":third_party/libcxx/cwctype_hdr",
+        ":third_party/libcxx/deque_hdr",
+        ":third_party/libcxx/errno.h_hdr",
+        ":third_party/libcxx/exception_fallback.hh_hdr",
+        ":third_party/libcxx/exception_hdr",
+        ":third_party/libcxx/exception_pointer_unimplemented.hh_hdr",
+        ":third_party/libcxx/execution_hdr",
+        ":third_party/libcxx/experimental/__config_hdr",
+        ":third_party/libcxx/filesystem_common.hh_hdr",
+        ":third_party/libcxx/filesystem_hdr",
+        ":third_party/libcxx/forward_list_hdr",
+        ":third_party/libcxx/fstream_hdr",
+        ":third_party/libcxx/functional_hdr",
+        ":third_party/libcxx/future_hdr",
+        ":third_party/libcxx/include/atomic_support.hh_hdr",
+        ":third_party/libcxx/include/config_elast.hh_hdr",
+        ":third_party/libcxx/initializer_list_hdr",
+        ":third_party/libcxx/iomanip_hdr",
+        ":third_party/libcxx/ios_hdr",
+        ":third_party/libcxx/iosfwd_hdr",
+        ":third_party/libcxx/iostream_hdr",
+        ":third_party/libcxx/istream_hdr",
+        ":third_party/libcxx/iterator_hdr",
+        ":third_party/libcxx/limits.h_hdr",
+        ":third_party/libcxx/limits_hdr",
+        ":third_party/libcxx/list_hdr",
+        ":third_party/libcxx/locale.h_hdr",
+        ":third_party/libcxx/locale_hdr",
+        ":third_party/libcxx/map_hdr",
+        ":third_party/libcxx/math.h_hdr",
+        ":third_party/libcxx/memory_hdr",
+        ":third_party/libcxx/mutex_hdr",
+        ":third_party/libcxx/new_handler_fallback.hh_hdr",
+        ":third_party/libcxx/new_hdr",
+        ":third_party/libcxx/numeric_hdr",
+        ":third_party/libcxx/optional_hdr",
+        ":third_party/libcxx/ostream_hdr",
+        ":third_party/libcxx/queue_hdr",
+        ":third_party/libcxx/random_hdr",
+        ":third_party/libcxx/ratio_hdr",
+        ":third_party/libcxx/refstring.hh_hdr",
+        ":third_party/libcxx/regex_hdr",
+        ":third_party/libcxx/scoped_allocator_hdr",
+        ":third_party/libcxx/set_hdr",
+        ":third_party/libcxx/shared_mutex_hdr",
+        ":third_party/libcxx/span_hdr",
+        ":third_party/libcxx/sstream_hdr",
+        ":third_party/libcxx/stack_hdr",
+        ":third_party/libcxx/stdexcept_default.hh_hdr",
+        ":third_party/libcxx/stdexcept_hdr",
+        ":third_party/libcxx/stdio.h_hdr",
+        ":third_party/libcxx/stdlib.h_hdr",
+        ":third_party/libcxx/streambuf_hdr",
+        ":third_party/libcxx/string.h_hdr",
+        ":third_party/libcxx/string_hdr",
+        ":third_party/libcxx/string_view_hdr",
+        ":third_party/libcxx/strstream_hdr",
+        ":third_party/libcxx/system_error_hdr",
+        ":third_party/libcxx/thread_hdr",
+        ":third_party/libcxx/tuple_hdr",
+        ":third_party/libcxx/type_traits_hdr",
+        ":third_party/libcxx/typeindex_hdr",
+        ":third_party/libcxx/typeinfo_hdr",
+        ":third_party/libcxx/unordered_map_hdr",
+        ":third_party/libcxx/unordered_set_hdr",
+        ":third_party/libcxx/utility_hdr",
+        ":third_party/libcxx/valarray_hdr",
+        ":third_party/libcxx/variant_hdr",
+        ":third_party/libcxx/vector_hdr",
+        ":third_party/libcxx/version_hdr",
+        ":third_party/libcxx/wchar.h_hdr",
+        ":third_party/libcxx/wctype.h_hdr",
+        ":third_party/musl/crypt.h_hdr",
+        ":third_party/musl/crypt.internal.h_hdr",
+        ":third_party/musl/crypt_des.internal.h_hdr",
+        ":third_party/musl/fnmatch.h_hdr",
+        ":third_party/musl/glob.h_hdr",
+        ":third_party/musl/lockf.h_hdr",
+        ":third_party/musl/mntent.h_hdr",
+        ":third_party/musl/passwd.h_hdr",
+        ":third_party/musl/rand48.h_hdr",
+        ":third_party/musl/search.h_hdr",
+        ":third_party/musl/tempnam.h_hdr",
+        ":third_party/musl/tsearch.internal.h_hdr",
+        ":third_party/nsync/array.internal.h_hdr",
+        ":third_party/nsync/atomic.h_hdr",
+        ":third_party/nsync/atomic.internal.h_hdr",
+        ":third_party/nsync/common.internal.h_hdr",
+        ":third_party/nsync/counter.h_hdr",
+        ":third_party/nsync/cv.h_hdr",
+        ":third_party/nsync/debug.h_hdr",
+        ":third_party/nsync/futex.internal.h_hdr",
+        ":third_party/nsync/heap.internal.h_hdr",
+        ":third_party/nsync/mu.h_hdr",
+        ":third_party/nsync/mu_semaphore.h_hdr",
+        ":third_party/nsync/mu_semaphore.internal.h_hdr",
+        ":third_party/nsync/mu_wait.h_hdr",
+        ":third_party/nsync/note.h_hdr",
+        ":third_party/nsync/once.h_hdr",
+        ":third_party/nsync/races.internal.h_hdr",
+        ":third_party/nsync/time.h_hdr",
+        ":third_party/nsync/wait_s.internal.h_hdr",
+        ":third_party/nsync/waiter.h_hdr",
+        ":third_party/regex/notice.inc_hdr",
+        ":third_party/regex/regex.h_hdr",
+        ":third_party/regex/tre.inc_hdr",
+        ":third_party/xed/avx512.h_hdr",
+        ":third_party/xed/private.h_hdr",
+        ":third_party/xed/x86.h_hdr",
+        ":third_party/xed/x86isa.h_hdr",
+        ":third_party/zlib/adler32_simd.inc_hdr",
+        ":third_party/zlib/chunkcopy.inc_hdr",
+        ":third_party/zlib/cpu_features.internal.h_hdr",
+        ":third_party/zlib/crc32.inc_hdr",
+        ":third_party/zlib/crc32_simd.internal.h_hdr",
+        ":third_party/zlib/deflate.internal.h_hdr",
+        ":third_party/zlib/inffast.internal.h_hdr",
+        ":third_party/zlib/inffast_chunk.internal.h_hdr",
+        ":third_party/zlib/inffixed.inc_hdr",
+        ":third_party/zlib/inflate.internal.h_hdr",
+        ":third_party/zlib/inftrees.internal.h_hdr",
+        ":third_party/zlib/insert_string.inc_hdr",
+        ":third_party/zlib/internal.h_hdr",
+        ":third_party/zlib/macros.internal.h_hdr",
+        ":third_party/zlib/slide_hash_simd.inc_hdr",
+        ":third_party/zlib/trees.inc_hdr",
+        ":third_party/zlib/zconf.h_hdr",
+        ":third_party/zlib/zlib.h_hdr",
+        ":third_party/zlib/zutil.internal.h_hdr",
+    ],
+)
+
+genrule(name = "third_party/aarch64/acc_prof.internal.h_hdr", srcs = ["//include:third_party/aarch64/acc_prof.internal.h"], outs = ["third_party/aarch64/acc_prof.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/aarch64/arm_acle.internal.h_hdr", srcs = ["//include:third_party/aarch64/arm_acle.internal.h"], outs = ["third_party/aarch64/arm_acle.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/aarch64/arm_bf16.internal.h_hdr", srcs = ["//include:third_party/aarch64/arm_bf16.internal.h"], outs = ["third_party/aarch64/arm_bf16.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/aarch64/arm_fp16.internal.h_hdr", srcs = ["//include:third_party/aarch64/arm_fp16.internal.h"], outs = ["third_party/aarch64/arm_fp16.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/aarch64/arm_neon.internal.h_hdr", srcs = ["//include:third_party/aarch64/arm_neon.internal.h"], outs = ["third_party/aarch64/arm_neon.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/aarch64/arm_sve.internal.h_hdr", srcs = ["//include:third_party/aarch64/arm_sve.internal.h"], outs = ["third_party/aarch64/arm_sve.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/aarch64/openacc.internal.h_hdr", srcs = ["//include:third_party/aarch64/openacc.internal.h"], outs = ["third_party/aarch64/openacc.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/binmaps.inc_hdr", srcs = ["//include:third_party/dlmalloc/binmaps.inc"], outs = ["third_party/dlmalloc/binmaps.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/chunks.inc_hdr", srcs = ["//include:third_party/dlmalloc/chunks.inc"], outs = ["third_party/dlmalloc/chunks.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/debugging.inc_hdr", srcs = ["//include:third_party/dlmalloc/debugging.inc"], outs = ["third_party/dlmalloc/debugging.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/debuglib.inc_hdr", srcs = ["//include:third_party/dlmalloc/debuglib.inc"], outs = ["third_party/dlmalloc/debuglib.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/directmap.inc_hdr", srcs = ["//include:third_party/dlmalloc/directmap.inc"], outs = ["third_party/dlmalloc/directmap.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/dlmalloc.h_hdr", srcs = ["//include:third_party/dlmalloc/dlmalloc.h"], outs = ["third_party/dlmalloc/dlmalloc.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/global.inc_hdr", srcs = ["//include:third_party/dlmalloc/global.inc"], outs = ["third_party/dlmalloc/global.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/headfoot.inc_hdr", srcs = ["//include:third_party/dlmalloc/headfoot.inc"], outs = ["third_party/dlmalloc/headfoot.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/hooks.inc_hdr", srcs = ["//include:third_party/dlmalloc/hooks.inc"], outs = ["third_party/dlmalloc/hooks.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/indexing.inc_hdr", srcs = ["//include:third_party/dlmalloc/indexing.inc"], outs = ["third_party/dlmalloc/indexing.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/init.inc_hdr", srcs = ["//include:third_party/dlmalloc/init.inc"], outs = ["third_party/dlmalloc/init.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/locks.inc_hdr", srcs = ["//include:third_party/dlmalloc/locks.inc"], outs = ["third_party/dlmalloc/locks.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/management.inc_hdr", srcs = ["//include:third_party/dlmalloc/management.inc"], outs = ["third_party/dlmalloc/management.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/mspaces.inc_hdr", srcs = ["//include:third_party/dlmalloc/mspaces.inc"], outs = ["third_party/dlmalloc/mspaces.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/platform.inc_hdr", srcs = ["//include:third_party/dlmalloc/platform.inc"], outs = ["third_party/dlmalloc/platform.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/runtimechecks.inc_hdr", srcs = ["//include:third_party/dlmalloc/runtimechecks.inc"], outs = ["third_party/dlmalloc/runtimechecks.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/smallbins.inc_hdr", srcs = ["//include:third_party/dlmalloc/smallbins.inc"], outs = ["third_party/dlmalloc/smallbins.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/statistics.inc_hdr", srcs = ["//include:third_party/dlmalloc/statistics.inc"], outs = ["third_party/dlmalloc/statistics.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/system.inc_hdr", srcs = ["//include:third_party/dlmalloc/system.inc"], outs = ["third_party/dlmalloc/system.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/trees.inc_hdr", srcs = ["//include:third_party/dlmalloc/trees.inc"], outs = ["third_party/dlmalloc/trees.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/dlmalloc/vespene.internal.h_hdr", srcs = ["//include:third_party/dlmalloc/vespene.internal.h"], outs = ["third_party/dlmalloc/vespene.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/gdtoa/gdtoa.h_hdr", srcs = ["//include:third_party/gdtoa/gdtoa.h"], outs = ["third_party/gdtoa/gdtoa.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/gdtoa/gdtoa.internal.h_hdr", srcs = ["//include:third_party/gdtoa/gdtoa.internal.h"], outs = ["third_party/gdtoa/gdtoa.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/gdtoa/gdtoa_fltrnds.inc_hdr", srcs = ["//include:third_party/gdtoa/gdtoa_fltrnds.inc"], outs = ["third_party/gdtoa/gdtoa_fltrnds.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/getopt/getopt.internal.h_hdr", srcs = ["//include:third_party/getopt/getopt.internal.h"], outs = ["third_party/getopt/getopt.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/getopt/long1.h_hdr", srcs = ["//include:third_party/getopt/long1.h"], outs = ["third_party/getopt/long1.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/getopt/long2.h_hdr", srcs = ["//include:third_party/getopt/long2.h"], outs = ["third_party/getopt/long2.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/adxintrin.internal.h_hdr", srcs = ["//include:third_party/intel/adxintrin.internal.h"], outs = ["third_party/intel/adxintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/ammintrin.internal.h_hdr", srcs = ["//include:third_party/intel/ammintrin.internal.h"], outs = ["third_party/intel/ammintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/amxbf16intrin.internal.h_hdr", srcs = ["//include:third_party/intel/amxbf16intrin.internal.h"], outs = ["third_party/intel/amxbf16intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/amxint8intrin.internal.h_hdr", srcs = ["//include:third_party/intel/amxint8intrin.internal.h"], outs = ["third_party/intel/amxint8intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/amxtileintrin.internal.h_hdr", srcs = ["//include:third_party/intel/amxtileintrin.internal.h"], outs = ["third_party/intel/amxtileintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx2intrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx2intrin.internal.h"], outs = ["third_party/intel/avx2intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx5124fmapsintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx5124fmapsintrin.internal.h"], outs = ["third_party/intel/avx5124fmapsintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx5124vnniwintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx5124vnniwintrin.internal.h"], outs = ["third_party/intel/avx5124vnniwintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512bf16intrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512bf16intrin.internal.h"], outs = ["third_party/intel/avx512bf16intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512bf16vlintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512bf16vlintrin.internal.h"], outs = ["third_party/intel/avx512bf16vlintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512bitalgintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512bitalgintrin.internal.h"], outs = ["third_party/intel/avx512bitalgintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512bwintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512bwintrin.internal.h"], outs = ["third_party/intel/avx512bwintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512cdintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512cdintrin.internal.h"], outs = ["third_party/intel/avx512cdintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512dqintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512dqintrin.internal.h"], outs = ["third_party/intel/avx512dqintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512erintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512erintrin.internal.h"], outs = ["third_party/intel/avx512erintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512fintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512fintrin.internal.h"], outs = ["third_party/intel/avx512fintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512ifmaintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512ifmaintrin.internal.h"], outs = ["third_party/intel/avx512ifmaintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512ifmavlintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512ifmavlintrin.internal.h"], outs = ["third_party/intel/avx512ifmavlintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512pfintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512pfintrin.internal.h"], outs = ["third_party/intel/avx512pfintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vbmi2intrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vbmi2intrin.internal.h"], outs = ["third_party/intel/avx512vbmi2intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vbmi2vlintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vbmi2vlintrin.internal.h"], outs = ["third_party/intel/avx512vbmi2vlintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vbmiintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vbmiintrin.internal.h"], outs = ["third_party/intel/avx512vbmiintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vbmivlintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vbmivlintrin.internal.h"], outs = ["third_party/intel/avx512vbmivlintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vlbwintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vlbwintrin.internal.h"], outs = ["third_party/intel/avx512vlbwintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vldqintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vldqintrin.internal.h"], outs = ["third_party/intel/avx512vldqintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vlintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vlintrin.internal.h"], outs = ["third_party/intel/avx512vlintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vnniintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vnniintrin.internal.h"], outs = ["third_party/intel/avx512vnniintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vnnivlintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vnnivlintrin.internal.h"], outs = ["third_party/intel/avx512vnnivlintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vp2intersectintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vp2intersectintrin.internal.h"], outs = ["third_party/intel/avx512vp2intersectintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vp2intersectvlintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vp2intersectvlintrin.internal.h"], outs = ["third_party/intel/avx512vp2intersectvlintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vpopcntdqintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vpopcntdqintrin.internal.h"], outs = ["third_party/intel/avx512vpopcntdqintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avx512vpopcntdqvlintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avx512vpopcntdqvlintrin.internal.h"], outs = ["third_party/intel/avx512vpopcntdqvlintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avxintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avxintrin.internal.h"], outs = ["third_party/intel/avxintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/avxvnniintrin.internal.h_hdr", srcs = ["//include:third_party/intel/avxvnniintrin.internal.h"], outs = ["third_party/intel/avxvnniintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/bmi2intrin.internal.h_hdr", srcs = ["//include:third_party/intel/bmi2intrin.internal.h"], outs = ["third_party/intel/bmi2intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/bmiintrin.internal.h_hdr", srcs = ["//include:third_party/intel/bmiintrin.internal.h"], outs = ["third_party/intel/bmiintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/cetintrin.internal.h_hdr", srcs = ["//include:third_party/intel/cetintrin.internal.h"], outs = ["third_party/intel/cetintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/cldemoteintrin.internal.h_hdr", srcs = ["//include:third_party/intel/cldemoteintrin.internal.h"], outs = ["third_party/intel/cldemoteintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/clflushoptintrin.internal.h_hdr", srcs = ["//include:third_party/intel/clflushoptintrin.internal.h"], outs = ["third_party/intel/clflushoptintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/clwbintrin.internal.h_hdr", srcs = ["//include:third_party/intel/clwbintrin.internal.h"], outs = ["third_party/intel/clwbintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/clzerointrin.internal.h_hdr", srcs = ["//include:third_party/intel/clzerointrin.internal.h"], outs = ["third_party/intel/clzerointrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/cpuid.internal.h_hdr", srcs = ["//include:third_party/intel/cpuid.internal.h"], outs = ["third_party/intel/cpuid.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/emmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/emmintrin.internal.h"], outs = ["third_party/intel/emmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/enqcmdintrin.internal.h_hdr", srcs = ["//include:third_party/intel/enqcmdintrin.internal.h"], outs = ["third_party/intel/enqcmdintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/f16cintrin.internal.h_hdr", srcs = ["//include:third_party/intel/f16cintrin.internal.h"], outs = ["third_party/intel/f16cintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/fma4intrin.internal.h_hdr", srcs = ["//include:third_party/intel/fma4intrin.internal.h"], outs = ["third_party/intel/fma4intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/fmaintrin.internal.h_hdr", srcs = ["//include:third_party/intel/fmaintrin.internal.h"], outs = ["third_party/intel/fmaintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/fxsrintrin.internal.h_hdr", srcs = ["//include:third_party/intel/fxsrintrin.internal.h"], outs = ["third_party/intel/fxsrintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/gfniintrin.internal.h_hdr", srcs = ["//include:third_party/intel/gfniintrin.internal.h"], outs = ["third_party/intel/gfniintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/hresetintrin.internal.h_hdr", srcs = ["//include:third_party/intel/hresetintrin.internal.h"], outs = ["third_party/intel/hresetintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/ia32intrin.internal.h_hdr", srcs = ["//include:third_party/intel/ia32intrin.internal.h"], outs = ["third_party/intel/ia32intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/immintrin.internal.h_hdr", srcs = ["//include:third_party/intel/immintrin.internal.h"], outs = ["third_party/intel/immintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/keylockerintrin.internal.h_hdr", srcs = ["//include:third_party/intel/keylockerintrin.internal.h"], outs = ["third_party/intel/keylockerintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/lwpintrin.internal.h_hdr", srcs = ["//include:third_party/intel/lwpintrin.internal.h"], outs = ["third_party/intel/lwpintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/lzcntintrin.internal.h_hdr", srcs = ["//include:third_party/intel/lzcntintrin.internal.h"], outs = ["third_party/intel/lzcntintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/mm3dnow.internal.h_hdr", srcs = ["//include:third_party/intel/mm3dnow.internal.h"], outs = ["third_party/intel/mm3dnow.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/mm_malloc.internal.h_hdr", srcs = ["//include:third_party/intel/mm_malloc.internal.h"], outs = ["third_party/intel/mm_malloc.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/mmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/mmintrin.internal.h"], outs = ["third_party/intel/mmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/movdirintrin.internal.h_hdr", srcs = ["//include:third_party/intel/movdirintrin.internal.h"], outs = ["third_party/intel/movdirintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/mwaitxintrin.internal.h_hdr", srcs = ["//include:third_party/intel/mwaitxintrin.internal.h"], outs = ["third_party/intel/mwaitxintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/nmmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/nmmintrin.internal.h"], outs = ["third_party/intel/nmmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/pconfigintrin.internal.h_hdr", srcs = ["//include:third_party/intel/pconfigintrin.internal.h"], outs = ["third_party/intel/pconfigintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/pkuintrin.internal.h_hdr", srcs = ["//include:third_party/intel/pkuintrin.internal.h"], outs = ["third_party/intel/pkuintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/pmmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/pmmintrin.internal.h"], outs = ["third_party/intel/pmmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/popcntintrin.internal.h_hdr", srcs = ["//include:third_party/intel/popcntintrin.internal.h"], outs = ["third_party/intel/popcntintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/prfchwintrin.internal.h_hdr", srcs = ["//include:third_party/intel/prfchwintrin.internal.h"], outs = ["third_party/intel/prfchwintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/rdseedintrin.internal.h_hdr", srcs = ["//include:third_party/intel/rdseedintrin.internal.h"], outs = ["third_party/intel/rdseedintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/rtmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/rtmintrin.internal.h"], outs = ["third_party/intel/rtmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/serializeintrin.internal.h_hdr", srcs = ["//include:third_party/intel/serializeintrin.internal.h"], outs = ["third_party/intel/serializeintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/sgxintrin.internal.h_hdr", srcs = ["//include:third_party/intel/sgxintrin.internal.h"], outs = ["third_party/intel/sgxintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/shaintrin.internal.h_hdr", srcs = ["//include:third_party/intel/shaintrin.internal.h"], outs = ["third_party/intel/shaintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/smmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/smmintrin.internal.h"], outs = ["third_party/intel/smmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/tbmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/tbmintrin.internal.h"], outs = ["third_party/intel/tbmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/tmmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/tmmintrin.internal.h"], outs = ["third_party/intel/tmmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/tsxldtrkintrin.internal.h_hdr", srcs = ["//include:third_party/intel/tsxldtrkintrin.internal.h"], outs = ["third_party/intel/tsxldtrkintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/uintrintrin.internal.h_hdr", srcs = ["//include:third_party/intel/uintrintrin.internal.h"], outs = ["third_party/intel/uintrintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/vaesintrin.internal.h_hdr", srcs = ["//include:third_party/intel/vaesintrin.internal.h"], outs = ["third_party/intel/vaesintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/vpclmulqdqintrin.internal.h_hdr", srcs = ["//include:third_party/intel/vpclmulqdqintrin.internal.h"], outs = ["third_party/intel/vpclmulqdqintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/waitpkgintrin.internal.h_hdr", srcs = ["//include:third_party/intel/waitpkgintrin.internal.h"], outs = ["third_party/intel/waitpkgintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/wbnoinvdintrin.internal.h_hdr", srcs = ["//include:third_party/intel/wbnoinvdintrin.internal.h"], outs = ["third_party/intel/wbnoinvdintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/wmmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/wmmintrin.internal.h"], outs = ["third_party/intel/wmmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/x86gprintrin.internal.h_hdr", srcs = ["//include:third_party/intel/x86gprintrin.internal.h"], outs = ["third_party/intel/x86gprintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/x86intrin.internal.h_hdr", srcs = ["//include:third_party/intel/x86intrin.internal.h"], outs = ["third_party/intel/x86intrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/xmmintrin.internal.h_hdr", srcs = ["//include:third_party/intel/xmmintrin.internal.h"], outs = ["third_party/intel/xmmintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/xopintrin.internal.h_hdr", srcs = ["//include:third_party/intel/xopintrin.internal.h"], outs = ["third_party/intel/xopintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/xsavecintrin.internal.h_hdr", srcs = ["//include:third_party/intel/xsavecintrin.internal.h"], outs = ["third_party/intel/xsavecintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/xsaveintrin.internal.h_hdr", srcs = ["//include:third_party/intel/xsaveintrin.internal.h"], outs = ["third_party/intel/xsaveintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/xsaveoptintrin.internal.h_hdr", srcs = ["//include:third_party/intel/xsaveoptintrin.internal.h"], outs = ["third_party/intel/xsaveoptintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/xsavesintrin.internal.h_hdr", srcs = ["//include:third_party/intel/xsavesintrin.internal.h"], outs = ["third_party/intel/xsavesintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/intel/xtestintrin.internal.h_hdr", srcs = ["//include:third_party/intel/xtestintrin.internal.h"], outs = ["third_party/intel/xtestintrin.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__bit_reference_hdr", srcs = ["//include:third_party/libcxx/__bit_reference"], outs = ["third_party/libcxx/__bit_reference"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__bsd_locale_fallbacks.h_hdr", srcs = ["//include:third_party/libcxx/__bsd_locale_fallbacks.h"], outs = ["third_party/libcxx/__bsd_locale_fallbacks.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__config_hdr", srcs = ["//include:third_party/libcxx/__config"], outs = ["third_party/libcxx/__config"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__debug_hdr", srcs = ["//include:third_party/libcxx/__debug"], outs = ["third_party/libcxx/__debug"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__errc_hdr", srcs = ["//include:third_party/libcxx/__errc"], outs = ["third_party/libcxx/__errc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__functional_base_hdr", srcs = ["//include:third_party/libcxx/__functional_base"], outs = ["third_party/libcxx/__functional_base"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__hash_table_hdr", srcs = ["//include:third_party/libcxx/__hash_table"], outs = ["third_party/libcxx/__hash_table"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__locale_hdr", srcs = ["//include:third_party/libcxx/__locale"], outs = ["third_party/libcxx/__locale"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__mutex_base_hdr", srcs = ["//include:third_party/libcxx/__mutex_base"], outs = ["third_party/libcxx/__mutex_base"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__node_handle_hdr", srcs = ["//include:third_party/libcxx/__node_handle"], outs = ["third_party/libcxx/__node_handle"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__nullptr_hdr", srcs = ["//include:third_party/libcxx/__nullptr"], outs = ["third_party/libcxx/__nullptr"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__split_buffer_hdr", srcs = ["//include:third_party/libcxx/__split_buffer"], outs = ["third_party/libcxx/__split_buffer"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__sso_allocator_hdr", srcs = ["//include:third_party/libcxx/__sso_allocator"], outs = ["third_party/libcxx/__sso_allocator"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__std_stream_hdr", srcs = ["//include:third_party/libcxx/__std_stream"], outs = ["third_party/libcxx/__std_stream"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__string_hdr", srcs = ["//include:third_party/libcxx/__string"], outs = ["third_party/libcxx/__string"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__threading_support_hdr", srcs = ["//include:third_party/libcxx/__threading_support"], outs = ["third_party/libcxx/__threading_support"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__tree_hdr", srcs = ["//include:third_party/libcxx/__tree"], outs = ["third_party/libcxx/__tree"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__tuple_hdr", srcs = ["//include:third_party/libcxx/__tuple"], outs = ["third_party/libcxx/__tuple"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/__undef_macros_hdr", srcs = ["//include:third_party/libcxx/__undef_macros"], outs = ["third_party/libcxx/__undef_macros"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/algorithm_hdr", srcs = ["//include:third_party/libcxx/algorithm"], outs = ["third_party/libcxx/algorithm"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/any_hdr", srcs = ["//include:third_party/libcxx/any"], outs = ["third_party/libcxx/any"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/array_hdr", srcs = ["//include:third_party/libcxx/array"], outs = ["third_party/libcxx/array"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/atomic_hdr", srcs = ["//include:third_party/libcxx/atomic"], outs = ["third_party/libcxx/atomic"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/atomic_support.hh_hdr", srcs = ["//include:third_party/libcxx/atomic_support.hh"], outs = ["third_party/libcxx/atomic_support.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/bit_hdr", srcs = ["//include:third_party/libcxx/bit"], outs = ["third_party/libcxx/bit"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/bitset_hdr", srcs = ["//include:third_party/libcxx/bitset"], outs = ["third_party/libcxx/bitset"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cassert_hdr", srcs = ["//include:third_party/libcxx/cassert"], outs = ["third_party/libcxx/cassert"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/ccomplex_hdr", srcs = ["//include:third_party/libcxx/ccomplex"], outs = ["third_party/libcxx/ccomplex"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cctype_hdr", srcs = ["//include:third_party/libcxx/cctype"], outs = ["third_party/libcxx/cctype"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cerrno_hdr", srcs = ["//include:third_party/libcxx/cerrno"], outs = ["third_party/libcxx/cerrno"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cfenv_hdr", srcs = ["//include:third_party/libcxx/cfenv"], outs = ["third_party/libcxx/cfenv"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cfloat_hdr", srcs = ["//include:third_party/libcxx/cfloat"], outs = ["third_party/libcxx/cfloat"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/charconv_hdr", srcs = ["//include:third_party/libcxx/charconv"], outs = ["third_party/libcxx/charconv"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/chrono_hdr", srcs = ["//include:third_party/libcxx/chrono"], outs = ["third_party/libcxx/chrono"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cinttypes_hdr", srcs = ["//include:third_party/libcxx/cinttypes"], outs = ["third_party/libcxx/cinttypes"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/ciso646_hdr", srcs = ["//include:third_party/libcxx/ciso646"], outs = ["third_party/libcxx/ciso646"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/climits_hdr", srcs = ["//include:third_party/libcxx/climits"], outs = ["third_party/libcxx/climits"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/clocale_hdr", srcs = ["//include:third_party/libcxx/clocale"], outs = ["third_party/libcxx/clocale"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cmath_hdr", srcs = ["//include:third_party/libcxx/cmath"], outs = ["third_party/libcxx/cmath"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/codecvt_hdr", srcs = ["//include:third_party/libcxx/codecvt"], outs = ["third_party/libcxx/codecvt"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/compare_hdr", srcs = ["//include:third_party/libcxx/compare"], outs = ["third_party/libcxx/compare"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/complex_hdr", srcs = ["//include:third_party/libcxx/complex"], outs = ["third_party/libcxx/complex"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/condition_variable_hdr", srcs = ["//include:third_party/libcxx/condition_variable"], outs = ["third_party/libcxx/condition_variable"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/config_elast.h_hdr", srcs = ["//include:third_party/libcxx/config_elast.h"], outs = ["third_party/libcxx/config_elast.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/countof.internal.hh_hdr", srcs = ["//include:third_party/libcxx/countof.internal.hh"], outs = ["third_party/libcxx/countof.internal.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/csetjmp_hdr", srcs = ["//include:third_party/libcxx/csetjmp"], outs = ["third_party/libcxx/csetjmp"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/csignal_hdr", srcs = ["//include:third_party/libcxx/csignal"], outs = ["third_party/libcxx/csignal"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cstdarg_hdr", srcs = ["//include:third_party/libcxx/cstdarg"], outs = ["third_party/libcxx/cstdarg"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cstdbool_hdr", srcs = ["//include:third_party/libcxx/cstdbool"], outs = ["third_party/libcxx/cstdbool"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cstddef_hdr", srcs = ["//include:third_party/libcxx/cstddef"], outs = ["third_party/libcxx/cstddef"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cstdint_hdr", srcs = ["//include:third_party/libcxx/cstdint"], outs = ["third_party/libcxx/cstdint"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cstdio_hdr", srcs = ["//include:third_party/libcxx/cstdio"], outs = ["third_party/libcxx/cstdio"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cstdlib_hdr", srcs = ["//include:third_party/libcxx/cstdlib"], outs = ["third_party/libcxx/cstdlib"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cstring_hdr", srcs = ["//include:third_party/libcxx/cstring"], outs = ["third_party/libcxx/cstring"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/ctgmath_hdr", srcs = ["//include:third_party/libcxx/ctgmath"], outs = ["third_party/libcxx/ctgmath"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/ctime_hdr", srcs = ["//include:third_party/libcxx/ctime"], outs = ["third_party/libcxx/ctime"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/ctype.h_hdr", srcs = ["//include:third_party/libcxx/ctype.h"], outs = ["third_party/libcxx/ctype.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cwchar_hdr", srcs = ["//include:third_party/libcxx/cwchar"], outs = ["third_party/libcxx/cwchar"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/cwctype_hdr", srcs = ["//include:third_party/libcxx/cwctype"], outs = ["third_party/libcxx/cwctype"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/deque_hdr", srcs = ["//include:third_party/libcxx/deque"], outs = ["third_party/libcxx/deque"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/errno.h_hdr", srcs = ["//include:third_party/libcxx/errno.h"], outs = ["third_party/libcxx/errno.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/exception_fallback.hh_hdr", srcs = ["//include:third_party/libcxx/exception_fallback.hh"], outs = ["third_party/libcxx/exception_fallback.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/exception_hdr", srcs = ["//include:third_party/libcxx/exception"], outs = ["third_party/libcxx/exception"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/exception_pointer_unimplemented.hh_hdr", srcs = ["//include:third_party/libcxx/exception_pointer_unimplemented.hh"], outs = ["third_party/libcxx/exception_pointer_unimplemented.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/execution_hdr", srcs = ["//include:third_party/libcxx/execution"], outs = ["third_party/libcxx/execution"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/experimental/__config_hdr", srcs = ["//include:third_party/libcxx/experimental/__config"], outs = ["third_party/libcxx/experimental/__config"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/filesystem_common.hh_hdr", srcs = ["//include:third_party/libcxx/filesystem_common.hh"], outs = ["third_party/libcxx/filesystem_common.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/filesystem_hdr", srcs = ["//include:third_party/libcxx/filesystem"], outs = ["third_party/libcxx/filesystem"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/forward_list_hdr", srcs = ["//include:third_party/libcxx/forward_list"], outs = ["third_party/libcxx/forward_list"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/fstream_hdr", srcs = ["//include:third_party/libcxx/fstream"], outs = ["third_party/libcxx/fstream"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/functional_hdr", srcs = ["//include:third_party/libcxx/functional"], outs = ["third_party/libcxx/functional"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/future_hdr", srcs = ["//include:third_party/libcxx/future"], outs = ["third_party/libcxx/future"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/include/atomic_support.hh_hdr", srcs = ["//include:third_party/libcxx/include/atomic_support.hh"], outs = ["third_party/libcxx/include/atomic_support.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/include/config_elast.hh_hdr", srcs = ["//include:third_party/libcxx/include/config_elast.hh"], outs = ["third_party/libcxx/include/config_elast.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/initializer_list_hdr", srcs = ["//include:third_party/libcxx/initializer_list"], outs = ["third_party/libcxx/initializer_list"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/iomanip_hdr", srcs = ["//include:third_party/libcxx/iomanip"], outs = ["third_party/libcxx/iomanip"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/ios_hdr", srcs = ["//include:third_party/libcxx/ios"], outs = ["third_party/libcxx/ios"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/iosfwd_hdr", srcs = ["//include:third_party/libcxx/iosfwd"], outs = ["third_party/libcxx/iosfwd"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/iostream_hdr", srcs = ["//include:third_party/libcxx/iostream"], outs = ["third_party/libcxx/iostream"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/istream_hdr", srcs = ["//include:third_party/libcxx/istream"], outs = ["third_party/libcxx/istream"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/iterator_hdr", srcs = ["//include:third_party/libcxx/iterator"], outs = ["third_party/libcxx/iterator"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/limits.h_hdr", srcs = ["//include:third_party/libcxx/limits.h"], outs = ["third_party/libcxx/limits.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/limits_hdr", srcs = ["//include:third_party/libcxx/limits"], outs = ["third_party/libcxx/limits"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/list_hdr", srcs = ["//include:third_party/libcxx/list"], outs = ["third_party/libcxx/list"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/locale.h_hdr", srcs = ["//include:third_party/libcxx/locale.h"], outs = ["third_party/libcxx/locale.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/locale_hdr", srcs = ["//include:third_party/libcxx/locale"], outs = ["third_party/libcxx/locale"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/map_hdr", srcs = ["//include:third_party/libcxx/map"], outs = ["third_party/libcxx/map"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/math.h_hdr", srcs = ["//include:third_party/libcxx/math.h"], outs = ["third_party/libcxx/math.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/memory_hdr", srcs = ["//include:third_party/libcxx/memory"], outs = ["third_party/libcxx/memory"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/mutex_hdr", srcs = ["//include:third_party/libcxx/mutex"], outs = ["third_party/libcxx/mutex"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/new_handler_fallback.hh_hdr", srcs = ["//include:third_party/libcxx/new_handler_fallback.hh"], outs = ["third_party/libcxx/new_handler_fallback.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/new_hdr", srcs = ["//include:third_party/libcxx/new"], outs = ["third_party/libcxx/new"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/numeric_hdr", srcs = ["//include:third_party/libcxx/numeric"], outs = ["third_party/libcxx/numeric"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/optional_hdr", srcs = ["//include:third_party/libcxx/optional"], outs = ["third_party/libcxx/optional"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/ostream_hdr", srcs = ["//include:third_party/libcxx/ostream"], outs = ["third_party/libcxx/ostream"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/queue_hdr", srcs = ["//include:third_party/libcxx/queue"], outs = ["third_party/libcxx/queue"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/random_hdr", srcs = ["//include:third_party/libcxx/random"], outs = ["third_party/libcxx/random"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/ratio_hdr", srcs = ["//include:third_party/libcxx/ratio"], outs = ["third_party/libcxx/ratio"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/refstring.hh_hdr", srcs = ["//include:third_party/libcxx/refstring.hh"], outs = ["third_party/libcxx/refstring.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/regex_hdr", srcs = ["//include:third_party/libcxx/regex"], outs = ["third_party/libcxx/regex"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/scoped_allocator_hdr", srcs = ["//include:third_party/libcxx/scoped_allocator"], outs = ["third_party/libcxx/scoped_allocator"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/set_hdr", srcs = ["//include:third_party/libcxx/set"], outs = ["third_party/libcxx/set"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/shared_mutex_hdr", srcs = ["//include:third_party/libcxx/shared_mutex"], outs = ["third_party/libcxx/shared_mutex"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/span_hdr", srcs = ["//include:third_party/libcxx/span"], outs = ["third_party/libcxx/span"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/sstream_hdr", srcs = ["//include:third_party/libcxx/sstream"], outs = ["third_party/libcxx/sstream"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/stack_hdr", srcs = ["//include:third_party/libcxx/stack"], outs = ["third_party/libcxx/stack"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/stdexcept_default.hh_hdr", srcs = ["//include:third_party/libcxx/stdexcept_default.hh"], outs = ["third_party/libcxx/stdexcept_default.hh"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/stdexcept_hdr", srcs = ["//include:third_party/libcxx/stdexcept"], outs = ["third_party/libcxx/stdexcept"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/stdio.h_hdr", srcs = ["//include:third_party/libcxx/stdio.h"], outs = ["third_party/libcxx/stdio.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/stdlib.h_hdr", srcs = ["//include:third_party/libcxx/stdlib.h"], outs = ["third_party/libcxx/stdlib.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/streambuf_hdr", srcs = ["//include:third_party/libcxx/streambuf"], outs = ["third_party/libcxx/streambuf"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/string.h_hdr", srcs = ["//include:third_party/libcxx/string.h"], outs = ["third_party/libcxx/string.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/string_hdr", srcs = ["//include:third_party/libcxx/string"], outs = ["third_party/libcxx/string"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/string_view_hdr", srcs = ["//include:third_party/libcxx/string_view"], outs = ["third_party/libcxx/string_view"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/strstream_hdr", srcs = ["//include:third_party/libcxx/strstream"], outs = ["third_party/libcxx/strstream"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/system_error_hdr", srcs = ["//include:third_party/libcxx/system_error"], outs = ["third_party/libcxx/system_error"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/thread_hdr", srcs = ["//include:third_party/libcxx/thread"], outs = ["third_party/libcxx/thread"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/tuple_hdr", srcs = ["//include:third_party/libcxx/tuple"], outs = ["third_party/libcxx/tuple"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/type_traits_hdr", srcs = ["//include:third_party/libcxx/type_traits"], outs = ["third_party/libcxx/type_traits"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/typeindex_hdr", srcs = ["//include:third_party/libcxx/typeindex"], outs = ["third_party/libcxx/typeindex"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/typeinfo_hdr", srcs = ["//include:third_party/libcxx/typeinfo"], outs = ["third_party/libcxx/typeinfo"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/unordered_map_hdr", srcs = ["//include:third_party/libcxx/unordered_map"], outs = ["third_party/libcxx/unordered_map"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/unordered_set_hdr", srcs = ["//include:third_party/libcxx/unordered_set"], outs = ["third_party/libcxx/unordered_set"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/utility_hdr", srcs = ["//include:third_party/libcxx/utility"], outs = ["third_party/libcxx/utility"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/valarray_hdr", srcs = ["//include:third_party/libcxx/valarray"], outs = ["third_party/libcxx/valarray"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/variant_hdr", srcs = ["//include:third_party/libcxx/variant"], outs = ["third_party/libcxx/variant"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/vector_hdr", srcs = ["//include:third_party/libcxx/vector"], outs = ["third_party/libcxx/vector"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/version_hdr", srcs = ["//include:third_party/libcxx/version"], outs = ["third_party/libcxx/version"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/wchar.h_hdr", srcs = ["//include:third_party/libcxx/wchar.h"], outs = ["third_party/libcxx/wchar.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/libcxx/wctype.h_hdr", srcs = ["//include:third_party/libcxx/wctype.h"], outs = ["third_party/libcxx/wctype.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/crypt.h_hdr", srcs = ["//include:third_party/musl/crypt.h"], outs = ["third_party/musl/crypt.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/crypt.internal.h_hdr", srcs = ["//include:third_party/musl/crypt.internal.h"], outs = ["third_party/musl/crypt.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/crypt_des.internal.h_hdr", srcs = ["//include:third_party/musl/crypt_des.internal.h"], outs = ["third_party/musl/crypt_des.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/fnmatch.h_hdr", srcs = ["//include:third_party/musl/fnmatch.h"], outs = ["third_party/musl/fnmatch.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/glob.h_hdr", srcs = ["//include:third_party/musl/glob.h"], outs = ["third_party/musl/glob.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/lockf.h_hdr", srcs = ["//include:third_party/musl/lockf.h"], outs = ["third_party/musl/lockf.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/mntent.h_hdr", srcs = ["//include:third_party/musl/mntent.h"], outs = ["third_party/musl/mntent.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/passwd.h_hdr", srcs = ["//include:third_party/musl/passwd.h"], outs = ["third_party/musl/passwd.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/rand48.h_hdr", srcs = ["//include:third_party/musl/rand48.h"], outs = ["third_party/musl/rand48.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/search.h_hdr", srcs = ["//include:third_party/musl/search.h"], outs = ["third_party/musl/search.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/tempnam.h_hdr", srcs = ["//include:third_party/musl/tempnam.h"], outs = ["third_party/musl/tempnam.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/musl/tsearch.internal.h_hdr", srcs = ["//include:third_party/musl/tsearch.internal.h"], outs = ["third_party/musl/tsearch.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/array.internal.h_hdr", srcs = ["//include:third_party/nsync/array.internal.h"], outs = ["third_party/nsync/array.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/atomic.h_hdr", srcs = ["//include:third_party/nsync/atomic.h"], outs = ["third_party/nsync/atomic.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/atomic.internal.h_hdr", srcs = ["//include:third_party/nsync/atomic.internal.h"], outs = ["third_party/nsync/atomic.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/common.internal.h_hdr", srcs = ["//include:third_party/nsync/common.internal.h"], outs = ["third_party/nsync/common.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/counter.h_hdr", srcs = ["//include:third_party/nsync/counter.h"], outs = ["third_party/nsync/counter.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/cv.h_hdr", srcs = ["//include:third_party/nsync/cv.h"], outs = ["third_party/nsync/cv.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/debug.h_hdr", srcs = ["//include:third_party/nsync/debug.h"], outs = ["third_party/nsync/debug.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/futex.internal.h_hdr", srcs = ["//include:third_party/nsync/futex.internal.h"], outs = ["third_party/nsync/futex.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/heap.internal.h_hdr", srcs = ["//include:third_party/nsync/heap.internal.h"], outs = ["third_party/nsync/heap.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/mu.h_hdr", srcs = ["//include:third_party/nsync/mu.h"], outs = ["third_party/nsync/mu.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/mu_semaphore.h_hdr", srcs = ["//include:third_party/nsync/mu_semaphore.h"], outs = ["third_party/nsync/mu_semaphore.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/mu_semaphore.internal.h_hdr", srcs = ["//include:third_party/nsync/mu_semaphore.internal.h"], outs = ["third_party/nsync/mu_semaphore.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/mu_wait.h_hdr", srcs = ["//include:third_party/nsync/mu_wait.h"], outs = ["third_party/nsync/mu_wait.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/note.h_hdr", srcs = ["//include:third_party/nsync/note.h"], outs = ["third_party/nsync/note.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/once.h_hdr", srcs = ["//include:third_party/nsync/once.h"], outs = ["third_party/nsync/once.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/races.internal.h_hdr", srcs = ["//include:third_party/nsync/races.internal.h"], outs = ["third_party/nsync/races.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/time.h_hdr", srcs = ["//include:third_party/nsync/time.h"], outs = ["third_party/nsync/time.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/wait_s.internal.h_hdr", srcs = ["//include:third_party/nsync/wait_s.internal.h"], outs = ["third_party/nsync/wait_s.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/nsync/waiter.h_hdr", srcs = ["//include:third_party/nsync/waiter.h"], outs = ["third_party/nsync/waiter.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/regex/notice.inc_hdr", srcs = ["//include:third_party/regex/notice.inc"], outs = ["third_party/regex/notice.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/regex/regex.h_hdr", srcs = ["//include:third_party/regex/regex.h"], outs = ["third_party/regex/regex.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/regex/tre.inc_hdr", srcs = ["//include:third_party/regex/tre.inc"], outs = ["third_party/regex/tre.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/xed/avx512.h_hdr", srcs = ["//include:third_party/xed/avx512.h"], outs = ["third_party/xed/avx512.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/xed/private.h_hdr", srcs = ["//include:third_party/xed/private.h"], outs = ["third_party/xed/private.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/xed/x86.h_hdr", srcs = ["//include:third_party/xed/x86.h"], outs = ["third_party/xed/x86.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/xed/x86isa.h_hdr", srcs = ["//include:third_party/xed/x86isa.h"], outs = ["third_party/xed/x86isa.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/adler32_simd.inc_hdr", srcs = ["//include:third_party/zlib/adler32_simd.inc"], outs = ["third_party/zlib/adler32_simd.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/chunkcopy.inc_hdr", srcs = ["//include:third_party/zlib/chunkcopy.inc"], outs = ["third_party/zlib/chunkcopy.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/cpu_features.internal.h_hdr", srcs = ["//include:third_party/zlib/cpu_features.internal.h"], outs = ["third_party/zlib/cpu_features.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/crc32.inc_hdr", srcs = ["//include:third_party/zlib/crc32.inc"], outs = ["third_party/zlib/crc32.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/crc32_simd.internal.h_hdr", srcs = ["//include:third_party/zlib/crc32_simd.internal.h"], outs = ["third_party/zlib/crc32_simd.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/deflate.internal.h_hdr", srcs = ["//include:third_party/zlib/deflate.internal.h"], outs = ["third_party/zlib/deflate.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/inffast.internal.h_hdr", srcs = ["//include:third_party/zlib/inffast.internal.h"], outs = ["third_party/zlib/inffast.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/inffast_chunk.internal.h_hdr", srcs = ["//include:third_party/zlib/inffast_chunk.internal.h"], outs = ["third_party/zlib/inffast_chunk.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/inffixed.inc_hdr", srcs = ["//include:third_party/zlib/inffixed.inc"], outs = ["third_party/zlib/inffixed.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/inflate.internal.h_hdr", srcs = ["//include:third_party/zlib/inflate.internal.h"], outs = ["third_party/zlib/inflate.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/inftrees.internal.h_hdr", srcs = ["//include:third_party/zlib/inftrees.internal.h"], outs = ["third_party/zlib/inftrees.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/insert_string.inc_hdr", srcs = ["//include:third_party/zlib/insert_string.inc"], outs = ["third_party/zlib/insert_string.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/internal.h_hdr", srcs = ["//include:third_party/zlib/internal.h"], outs = ["third_party/zlib/internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/macros.internal.h_hdr", srcs = ["//include:third_party/zlib/macros.internal.h"], outs = ["third_party/zlib/macros.internal.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/slide_hash_simd.inc_hdr", srcs = ["//include:third_party/zlib/slide_hash_simd.inc"], outs = ["third_party/zlib/slide_hash_simd.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/trees.inc_hdr", srcs = ["//include:third_party/zlib/trees.inc"], outs = ["third_party/zlib/trees.inc"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/zconf.h_hdr", srcs = ["//include:third_party/zlib/zconf.h"], outs = ["third_party/zlib/zconf.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/zlib.h_hdr", srcs = ["//include:third_party/zlib/zlib.h"], outs = ["third_party/zlib/zlib.h"], cmd_bash = "cp $< $@")
+genrule(name = "third_party/zlib/zutil.internal.h_hdr", srcs = ["//include:third_party/zlib/zutil.internal.h"], outs = ["third_party/zlib/zutil.internal.h"], cmd_bash = "cp $< $@")
+
+# tool/
+filegroup(
+    name = "tool",
+    srcs = [
+        ":tool/args/args.h_hdr",
+    ],
+)
+
+genrule(name = "tool/args/args.h_hdr", srcs = ["//include:tool/args/args.h"], outs = ["tool/args/args.h"], cmd_bash = "cp $< $@")
+
+# root-level
+filegroup(
+    name = ".",
+    srcs = [
+        ":algorithm_hdr",
+        ":alloca.h_hdr",
+        ":ammintrin.h_hdr",
+        ":any_hdr",
+        ":ar.h_hdr",
+        ":arm_acle.h_hdr",
+        ":arm_bf16.h_hdr",
+        ":arm_fp16.h_hdr",
+        ":arm_neon.h_hdr",
+        ":array_hdr",
+        ":assert.h_hdr",
+        ":atomic_hdr",
+        ":bit_hdr",
+        ":bitset_hdr",
+        ":byteswap.h_hdr",
+        ":cassert_hdr",
+        ":ccomplex_hdr",
+        ":cctype_hdr",
+        ":cerrno_hdr",
+        ":cfenv_hdr",
+        ":cfloat_hdr",
+        ":charconv_hdr",
+        ":chrono_hdr",
+        ":cinttypes_hdr",
+        ":ciso646_hdr",
+        ":climits_hdr",
+        ":clocale_hdr",
+        ":clzerointrin.h_hdr",
+        ":cmath_hdr",
+        ":codecvt_hdr",
+        ":compare_hdr",
+        ":complex.h_hdr",
+        ":complex_hdr",
+        ":condition_variable_hdr",
+        ":cosmo.h_hdr",
+        ":cpio.h_hdr",
+        ":cpuid.h_hdr",
+        ":crypt.h_hdr",
+        ":csetjmp_hdr",
+        ":csignal_hdr",
+        ":cstdarg_hdr",
+        ":cstdbool_hdr",
+        ":cstddef_hdr",
+        ":cstdint_hdr",
+        ":cstdio_hdr",
+        ":cstdlib_hdr",
+        ":cstring_hdr",
+        ":ctgmath_hdr",
+        ":ctime_hdr",
+        ":ctype.h_hdr",
+        ":cwchar_hdr",
+        ":cwctype_hdr",
+        ":cxxabi.h_hdr",
+        ":deque_hdr",
+        ":dirent.h_hdr",
+        ":dlfcn.h_hdr",
+        ":elf.h_hdr",
+        ":emmintrin.h_hdr",
+        ":endian.h_hdr",
+        ":err.h_hdr",
+        ":errno.h_hdr",
+        ":exception_hdr",
+        ":execution_hdr",
+        ":fcntl.h_hdr",
+        ":features.h_hdr",
+        ":fenv.h_hdr",
+        ":filesystem_hdr",
+        ":float.h_hdr",
+        ":fnmatch.h_hdr",
+        ":forward_list_hdr",
+        ":fstream_hdr",
+        ":ftw.h_hdr",
+        ":functional_hdr",
+        ":future_hdr",
+        ":getopt.h_hdr",
+        ":glob.h_hdr",
+        ":grp.h_hdr",
+        ":iconv.h_hdr",
+        ":ifaddrs.h_hdr",
+        ":immintrin.h_hdr",
+        ":initializer_list_hdr",
+        ":inttypes.h_hdr",
+        ":iomanip_hdr",
+        ":ios_hdr",
+        ":iosfwd_hdr",
+        ":iostream_hdr",
+        ":iso646.h_hdr",
+        ":istream_hdr",
+        ":iterator_hdr",
+        ":langinfo.h_hdr",
+        ":libgen.h_hdr",
+        ":limits.h_hdr",
+        ":limits_hdr",
+        ":list_hdr",
+        ":locale.h_hdr",
+        ":locale_hdr",
+        ":malloc.h_hdr",
+        ":map_hdr",
+        ":math.h_hdr",
+        ":memory.h_hdr",
+        ":memory_hdr",
+        ":mm3dnow.h_hdr",
+        ":mm_malloc.h_hdr",
+        ":mmintrin.h_hdr",
+        ":mntent.h_hdr",
+        ":monetary.h_hdr",
+        ":mutex_hdr",
+        ":mwaitxintrin.h_hdr",
+        ":netdb.h_hdr",
+        ":new_hdr",
+        ":nl_types.h_hdr",
+        ":nmmintrin.h_hdr",
+        ":nsync.h_hdr",
+        ":nsync_atomic.h_hdr",
+        ":nsync_counter.h_hdr",
+        ":nsync_cv.h_hdr",
+        ":nsync_debug.h_hdr",
+        ":nsync_mu.h_hdr",
+        ":nsync_mu_wait.h_hdr",
+        ":nsync_note.h_hdr",
+        ":nsync_once.h_hdr",
+        ":nsync_time.h_hdr",
+        ":nsync_waiter.h_hdr",
+        ":numeric_hdr",
+        ":optional_hdr",
+        ":ostream_hdr",
+        ":paths.h_hdr",
+        ":pmmintrin.h_hdr",
+        ":poll.h_hdr",
+        ":popcntintrin.h_hdr",
+        ":pthread.h_hdr",
+        ":pty.h_hdr",
+        ":pwd.h_hdr",
+        ":queue_hdr",
+        ":random_hdr",
+        ":ratio_hdr",
+        ":regex.h_hdr",
+        ":regex_hdr",
+        ":sched.h_hdr",
+        ":scoped_allocator_hdr",
+        ":search.h_hdr",
+        ":semaphore.h_hdr",
+        ":set_hdr",
+        ":setjmp.h_hdr",
+        ":sgxintrin.h_hdr",
+        ":shared_mutex_hdr",
+        ":signal.h_hdr",
+        ":smmintrin.h_hdr",
+        ":span_hdr",
+        ":spawn.h_hdr",
+        ":sstream_hdr",
+        ":stack_hdr",
+        ":stdalign.h_hdr",
+        ":stdarg.h_hdr",
+        ":stdatomic.h_hdr",
+        ":stdbool.h_hdr",
+        ":stdc-predef.h_hdr",
+        ":stdckdint.h_hdr",
+        ":stddef.h_hdr",
+        ":stdexcept_hdr",
+        ":stdint.h_hdr",
+        ":stdio.h_hdr",
+        ":stdio_ext.h_hdr",
+        ":stdlib.h_hdr",
+        ":stdnoreturn.h_hdr",
+        ":streambuf_hdr",
+        ":string.h_hdr",
+        ":string_hdr",
+        ":string_view_hdr",
+        ":strings.h_hdr",
+        ":strstream_hdr",
+        ":sysexits.h_hdr",
+        ":syslog.h_hdr",
+        ":system_error_hdr",
+        ":termios.h_hdr",
+        ":tgmath.h_hdr",
+        ":thread_hdr",
+        ":time.h_hdr",
+        ":tmmintrin.h_hdr",
+        ":tuple_hdr",
+        ":type_traits_hdr",
+        ":typeindex_hdr",
+        ":typeinfo_hdr",
+        ":uchar.h_hdr",
+        ":ucontext.h_hdr",
+        ":uio.h_hdr",
+        ":unistd.h_hdr",
+        ":unordered_map_hdr",
+        ":unordered_set_hdr",
+        ":utility_hdr",
+        ":utime.h_hdr",
+        ":utmp.h_hdr",
+        ":utmpx.h_hdr",
+        ":valarray_hdr",
+        ":variant_hdr",
+        ":vector_hdr",
+        ":version_hdr",
+        ":wait.h_hdr",
+        ":wchar.h_hdr",
+        ":wctype.h_hdr",
+        ":winternl.h_hdr",
+        ":wmmintrin.h_hdr",
+        ":x86intrin.h_hdr",
+        ":xmmintrin.h_hdr",
+    ],
+)
+
+genrule(name = "algorithm_hdr", srcs = ["//include:algorithm"], outs = ["algorithm"], cmd_bash = "cp $< $@")
+genrule(name = "alloca.h_hdr", srcs = ["//include:alloca.h"], outs = ["alloca.h"], cmd_bash = "cp $< $@")
+genrule(name = "ammintrin.h_hdr", srcs = ["//include:ammintrin.h"], outs = ["ammintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "any_hdr", srcs = ["//include:any"], outs = ["any"], cmd_bash = "cp $< $@")
+genrule(name = "ar.h_hdr", srcs = ["//include:ar.h"], outs = ["ar.h"], cmd_bash = "cp $< $@")
+genrule(name = "arm_acle.h_hdr", srcs = ["//include:arm_acle.h"], outs = ["arm_acle.h"], cmd_bash = "cp $< $@")
+genrule(name = "arm_bf16.h_hdr", srcs = ["//include:arm_bf16.h"], outs = ["arm_bf16.h"], cmd_bash = "cp $< $@")
+genrule(name = "arm_fp16.h_hdr", srcs = ["//include:arm_fp16.h"], outs = ["arm_fp16.h"], cmd_bash = "cp $< $@")
+genrule(name = "arm_neon.h_hdr", srcs = ["//include:arm_neon.h"], outs = ["arm_neon.h"], cmd_bash = "cp $< $@")
+genrule(name = "array_hdr", srcs = ["//include:array"], outs = ["array"], cmd_bash = "cp $< $@")
+genrule(name = "assert.h_hdr", srcs = ["//include:assert.h"], outs = ["assert.h"], cmd_bash = "cp $< $@")
+genrule(name = "atomic_hdr", srcs = ["//include:atomic"], outs = ["atomic"], cmd_bash = "cp $< $@")
+genrule(name = "bit_hdr", srcs = ["//include:bit"], outs = ["bit"], cmd_bash = "cp $< $@")
+genrule(name = "bitset_hdr", srcs = ["//include:bitset"], outs = ["bitset"], cmd_bash = "cp $< $@")
+genrule(name = "byteswap.h_hdr", srcs = ["//include:byteswap.h"], outs = ["byteswap.h"], cmd_bash = "cp $< $@")
+genrule(name = "cassert_hdr", srcs = ["//include:cassert"], outs = ["cassert"], cmd_bash = "cp $< $@")
+genrule(name = "ccomplex_hdr", srcs = ["//include:ccomplex"], outs = ["ccomplex"], cmd_bash = "cp $< $@")
+genrule(name = "cctype_hdr", srcs = ["//include:cctype"], outs = ["cctype"], cmd_bash = "cp $< $@")
+genrule(name = "cerrno_hdr", srcs = ["//include:cerrno"], outs = ["cerrno"], cmd_bash = "cp $< $@")
+genrule(name = "cfenv_hdr", srcs = ["//include:cfenv"], outs = ["cfenv"], cmd_bash = "cp $< $@")
+genrule(name = "cfloat_hdr", srcs = ["//include:cfloat"], outs = ["cfloat"], cmd_bash = "cp $< $@")
+genrule(name = "charconv_hdr", srcs = ["//include:charconv"], outs = ["charconv"], cmd_bash = "cp $< $@")
+genrule(name = "chrono_hdr", srcs = ["//include:chrono"], outs = ["chrono"], cmd_bash = "cp $< $@")
+genrule(name = "cinttypes_hdr", srcs = ["//include:cinttypes"], outs = ["cinttypes"], cmd_bash = "cp $< $@")
+genrule(name = "ciso646_hdr", srcs = ["//include:ciso646"], outs = ["ciso646"], cmd_bash = "cp $< $@")
+genrule(name = "climits_hdr", srcs = ["//include:climits"], outs = ["climits"], cmd_bash = "cp $< $@")
+genrule(name = "clocale_hdr", srcs = ["//include:clocale"], outs = ["clocale"], cmd_bash = "cp $< $@")
+genrule(name = "clzerointrin.h_hdr", srcs = ["//include:clzerointrin.h"], outs = ["clzerointrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "cmath_hdr", srcs = ["//include:cmath"], outs = ["cmath"], cmd_bash = "cp $< $@")
+genrule(name = "codecvt_hdr", srcs = ["//include:codecvt"], outs = ["codecvt"], cmd_bash = "cp $< $@")
+genrule(name = "compare_hdr", srcs = ["//include:compare"], outs = ["compare"], cmd_bash = "cp $< $@")
+genrule(name = "complex.h_hdr", srcs = ["//include:complex.h"], outs = ["complex.h"], cmd_bash = "cp $< $@")
+genrule(name = "complex_hdr", srcs = ["//include:complex"], outs = ["complex"], cmd_bash = "cp $< $@")
+genrule(name = "condition_variable_hdr", srcs = ["//include:condition_variable"], outs = ["condition_variable"], cmd_bash = "cp $< $@")
+genrule(name = "cosmo.h_hdr", srcs = ["//include:cosmo.h"], outs = ["cosmo.h"], cmd_bash = "cp $< $@")
+genrule(name = "cpio.h_hdr", srcs = ["//include:cpio.h"], outs = ["cpio.h"], cmd_bash = "cp $< $@")
+genrule(name = "cpuid.h_hdr", srcs = ["//include:cpuid.h"], outs = ["cpuid.h"], cmd_bash = "cp $< $@")
+genrule(name = "crypt.h_hdr", srcs = ["//include:crypt.h"], outs = ["crypt.h"], cmd_bash = "cp $< $@")
+genrule(name = "csetjmp_hdr", srcs = ["//include:csetjmp"], outs = ["csetjmp"], cmd_bash = "cp $< $@")
+genrule(name = "csignal_hdr", srcs = ["//include:csignal"], outs = ["csignal"], cmd_bash = "cp $< $@")
+genrule(name = "cstdarg_hdr", srcs = ["//include:cstdarg"], outs = ["cstdarg"], cmd_bash = "cp $< $@")
+genrule(name = "cstdbool_hdr", srcs = ["//include:cstdbool"], outs = ["cstdbool"], cmd_bash = "cp $< $@")
+genrule(name = "cstddef_hdr", srcs = ["//include:cstddef"], outs = ["cstddef"], cmd_bash = "cp $< $@")
+genrule(name = "cstdint_hdr", srcs = ["//include:cstdint"], outs = ["cstdint"], cmd_bash = "cp $< $@")
+genrule(name = "cstdio_hdr", srcs = ["//include:cstdio"], outs = ["cstdio"], cmd_bash = "cp $< $@")
+genrule(name = "cstdlib_hdr", srcs = ["//include:cstdlib"], outs = ["cstdlib"], cmd_bash = "cp $< $@")
+genrule(name = "cstring_hdr", srcs = ["//include:cstring"], outs = ["cstring"], cmd_bash = "cp $< $@")
+genrule(name = "ctgmath_hdr", srcs = ["//include:ctgmath"], outs = ["ctgmath"], cmd_bash = "cp $< $@")
+genrule(name = "ctime_hdr", srcs = ["//include:ctime"], outs = ["ctime"], cmd_bash = "cp $< $@")
+genrule(name = "ctype.h_hdr", srcs = ["//include:ctype.h"], outs = ["ctype.h"], cmd_bash = "cp $< $@")
+genrule(name = "cwchar_hdr", srcs = ["//include:cwchar"], outs = ["cwchar"], cmd_bash = "cp $< $@")
+genrule(name = "cwctype_hdr", srcs = ["//include:cwctype"], outs = ["cwctype"], cmd_bash = "cp $< $@")
+genrule(name = "cxxabi.h_hdr", srcs = ["//include:cxxabi.h"], outs = ["cxxabi.h"], cmd_bash = "cp $< $@")
+genrule(name = "deque_hdr", srcs = ["//include:deque"], outs = ["deque"], cmd_bash = "cp $< $@")
+genrule(name = "dirent.h_hdr", srcs = ["//include:dirent.h"], outs = ["dirent.h"], cmd_bash = "cp $< $@")
+genrule(name = "dlfcn.h_hdr", srcs = ["//include:dlfcn.h"], outs = ["dlfcn.h"], cmd_bash = "cp $< $@")
+genrule(name = "elf.h_hdr", srcs = ["//include:elf.h"], outs = ["elf.h"], cmd_bash = "cp $< $@")
+genrule(name = "emmintrin.h_hdr", srcs = ["//include:emmintrin.h"], outs = ["emmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "endian.h_hdr", srcs = ["//include:endian.h"], outs = ["endian.h"], cmd_bash = "cp $< $@")
+genrule(name = "err.h_hdr", srcs = ["//include:err.h"], outs = ["err.h"], cmd_bash = "cp $< $@")
+genrule(name = "errno.h_hdr", srcs = ["//include:errno.h"], outs = ["errno.h"], cmd_bash = "cp $< $@")
+genrule(name = "exception_hdr", srcs = ["//include:exception"], outs = ["exception"], cmd_bash = "cp $< $@")
+genrule(name = "execution_hdr", srcs = ["//include:execution"], outs = ["execution"], cmd_bash = "cp $< $@")
+genrule(name = "fcntl.h_hdr", srcs = ["//include:fcntl.h"], outs = ["fcntl.h"], cmd_bash = "cp $< $@")
+genrule(name = "features.h_hdr", srcs = ["//include:features.h"], outs = ["features.h"], cmd_bash = "cp $< $@")
+genrule(name = "fenv.h_hdr", srcs = ["//include:fenv.h"], outs = ["fenv.h"], cmd_bash = "cp $< $@")
+genrule(name = "filesystem_hdr", srcs = ["//include:filesystem"], outs = ["filesystem"], cmd_bash = "cp $< $@")
+genrule(name = "float.h_hdr", srcs = ["//include:float.h"], outs = ["float.h"], cmd_bash = "cp $< $@")
+genrule(name = "fnmatch.h_hdr", srcs = ["//include:fnmatch.h"], outs = ["fnmatch.h"], cmd_bash = "cp $< $@")
+genrule(name = "forward_list_hdr", srcs = ["//include:forward_list"], outs = ["forward_list"], cmd_bash = "cp $< $@")
+genrule(name = "fstream_hdr", srcs = ["//include:fstream"], outs = ["fstream"], cmd_bash = "cp $< $@")
+genrule(name = "ftw.h_hdr", srcs = ["//include:ftw.h"], outs = ["ftw.h"], cmd_bash = "cp $< $@")
+genrule(name = "functional_hdr", srcs = ["//include:functional"], outs = ["functional"], cmd_bash = "cp $< $@")
+genrule(name = "future_hdr", srcs = ["//include:future"], outs = ["future"], cmd_bash = "cp $< $@")
+genrule(name = "getopt.h_hdr", srcs = ["//include:getopt.h"], outs = ["getopt.h"], cmd_bash = "cp $< $@")
+genrule(name = "glob.h_hdr", srcs = ["//include:glob.h"], outs = ["glob.h"], cmd_bash = "cp $< $@")
+genrule(name = "grp.h_hdr", srcs = ["//include:grp.h"], outs = ["grp.h"], cmd_bash = "cp $< $@")
+genrule(name = "iconv.h_hdr", srcs = ["//include:iconv.h"], outs = ["iconv.h"], cmd_bash = "cp $< $@")
+genrule(name = "ifaddrs.h_hdr", srcs = ["//include:ifaddrs.h"], outs = ["ifaddrs.h"], cmd_bash = "cp $< $@")
+genrule(name = "immintrin.h_hdr", srcs = ["//include:immintrin.h"], outs = ["immintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "initializer_list_hdr", srcs = ["//include:initializer_list"], outs = ["initializer_list"], cmd_bash = "cp $< $@")
+genrule(name = "inttypes.h_hdr", srcs = ["//include:inttypes.h"], outs = ["inttypes.h"], cmd_bash = "cp $< $@")
+genrule(name = "iomanip_hdr", srcs = ["//include:iomanip"], outs = ["iomanip"], cmd_bash = "cp $< $@")
+genrule(name = "ios_hdr", srcs = ["//include:ios"], outs = ["ios"], cmd_bash = "cp $< $@")
+genrule(name = "iosfwd_hdr", srcs = ["//include:iosfwd"], outs = ["iosfwd"], cmd_bash = "cp $< $@")
+genrule(name = "iostream_hdr", srcs = ["//include:iostream"], outs = ["iostream"], cmd_bash = "cp $< $@")
+genrule(name = "iso646.h_hdr", srcs = ["//include:iso646.h"], outs = ["iso646.h"], cmd_bash = "cp $< $@")
+genrule(name = "istream_hdr", srcs = ["//include:istream"], outs = ["istream"], cmd_bash = "cp $< $@")
+genrule(name = "iterator_hdr", srcs = ["//include:iterator"], outs = ["iterator"], cmd_bash = "cp $< $@")
+genrule(name = "langinfo.h_hdr", srcs = ["//include:langinfo.h"], outs = ["langinfo.h"], cmd_bash = "cp $< $@")
+genrule(name = "libgen.h_hdr", srcs = ["//include:libgen.h"], outs = ["libgen.h"], cmd_bash = "cp $< $@")
+genrule(name = "limits.h_hdr", srcs = ["//include:limits.h"], outs = ["limits.h"], cmd_bash = "cp $< $@")
+genrule(name = "limits_hdr", srcs = ["//include:limits"], outs = ["limits"], cmd_bash = "cp $< $@")
+genrule(name = "list_hdr", srcs = ["//include:list"], outs = ["list"], cmd_bash = "cp $< $@")
+genrule(name = "locale.h_hdr", srcs = ["//include:locale.h"], outs = ["locale.h"], cmd_bash = "cp $< $@")
+genrule(name = "locale_hdr", srcs = ["//include:locale"], outs = ["locale"], cmd_bash = "cp $< $@")
+genrule(name = "malloc.h_hdr", srcs = ["//include:malloc.h"], outs = ["malloc.h"], cmd_bash = "cp $< $@")
+genrule(name = "map_hdr", srcs = ["//include:map"], outs = ["map"], cmd_bash = "cp $< $@")
+genrule(name = "math.h_hdr", srcs = ["//include:math.h"], outs = ["math.h"], cmd_bash = "cp $< $@")
+genrule(name = "memory.h_hdr", srcs = ["//include:memory.h"], outs = ["memory.h"], cmd_bash = "cp $< $@")
+genrule(name = "memory_hdr", srcs = ["//include:memory"], outs = ["memory"], cmd_bash = "cp $< $@")
+genrule(name = "mm3dnow.h_hdr", srcs = ["//include:mm3dnow.h"], outs = ["mm3dnow.h"], cmd_bash = "cp $< $@")
+genrule(name = "mm_malloc.h_hdr", srcs = ["//include:mm_malloc.h"], outs = ["mm_malloc.h"], cmd_bash = "cp $< $@")
+genrule(name = "mmintrin.h_hdr", srcs = ["//include:mmintrin.h"], outs = ["mmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "mntent.h_hdr", srcs = ["//include:mntent.h"], outs = ["mntent.h"], cmd_bash = "cp $< $@")
+genrule(name = "monetary.h_hdr", srcs = ["//include:monetary.h"], outs = ["monetary.h"], cmd_bash = "cp $< $@")
+genrule(name = "mutex_hdr", srcs = ["//include:mutex"], outs = ["mutex"], cmd_bash = "cp $< $@")
+genrule(name = "mwaitxintrin.h_hdr", srcs = ["//include:mwaitxintrin.h"], outs = ["mwaitxintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "netdb.h_hdr", srcs = ["//include:netdb.h"], outs = ["netdb.h"], cmd_bash = "cp $< $@")
+genrule(name = "new_hdr", srcs = ["//include:new"], outs = ["new"], cmd_bash = "cp $< $@")
+genrule(name = "nl_types.h_hdr", srcs = ["//include:nl_types.h"], outs = ["nl_types.h"], cmd_bash = "cp $< $@")
+genrule(name = "nmmintrin.h_hdr", srcs = ["//include:nmmintrin.h"], outs = ["nmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync.h_hdr", srcs = ["//include:nsync.h"], outs = ["nsync.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_atomic.h_hdr", srcs = ["//include:nsync_atomic.h"], outs = ["nsync_atomic.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_counter.h_hdr", srcs = ["//include:nsync_counter.h"], outs = ["nsync_counter.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_cv.h_hdr", srcs = ["//include:nsync_cv.h"], outs = ["nsync_cv.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_debug.h_hdr", srcs = ["//include:nsync_debug.h"], outs = ["nsync_debug.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_mu.h_hdr", srcs = ["//include:nsync_mu.h"], outs = ["nsync_mu.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_mu_wait.h_hdr", srcs = ["//include:nsync_mu_wait.h"], outs = ["nsync_mu_wait.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_note.h_hdr", srcs = ["//include:nsync_note.h"], outs = ["nsync_note.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_once.h_hdr", srcs = ["//include:nsync_once.h"], outs = ["nsync_once.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_time.h_hdr", srcs = ["//include:nsync_time.h"], outs = ["nsync_time.h"], cmd_bash = "cp $< $@")
+genrule(name = "nsync_waiter.h_hdr", srcs = ["//include:nsync_waiter.h"], outs = ["nsync_waiter.h"], cmd_bash = "cp $< $@")
+genrule(name = "numeric_hdr", srcs = ["//include:numeric"], outs = ["numeric"], cmd_bash = "cp $< $@")
+genrule(name = "optional_hdr", srcs = ["//include:optional"], outs = ["optional"], cmd_bash = "cp $< $@")
+genrule(name = "ostream_hdr", srcs = ["//include:ostream"], outs = ["ostream"], cmd_bash = "cp $< $@")
+genrule(name = "paths.h_hdr", srcs = ["//include:paths.h"], outs = ["paths.h"], cmd_bash = "cp $< $@")
+genrule(name = "pmmintrin.h_hdr", srcs = ["//include:pmmintrin.h"], outs = ["pmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "poll.h_hdr", srcs = ["//include:poll.h"], outs = ["poll.h"], cmd_bash = "cp $< $@")
+genrule(name = "popcntintrin.h_hdr", srcs = ["//include:popcntintrin.h"], outs = ["popcntintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "pthread.h_hdr", srcs = ["//include:pthread.h"], outs = ["pthread.h"], cmd_bash = "cp $< $@")
+genrule(name = "pty.h_hdr", srcs = ["//include:pty.h"], outs = ["pty.h"], cmd_bash = "cp $< $@")
+genrule(name = "pwd.h_hdr", srcs = ["//include:pwd.h"], outs = ["pwd.h"], cmd_bash = "cp $< $@")
+genrule(name = "queue_hdr", srcs = ["//include:queue"], outs = ["queue"], cmd_bash = "cp $< $@")
+genrule(name = "random_hdr", srcs = ["//include:random"], outs = ["random"], cmd_bash = "cp $< $@")
+genrule(name = "ratio_hdr", srcs = ["//include:ratio"], outs = ["ratio"], cmd_bash = "cp $< $@")
+genrule(name = "regex.h_hdr", srcs = ["//include:regex.h"], outs = ["regex.h"], cmd_bash = "cp $< $@")
+genrule(name = "regex_hdr", srcs = ["//include:regex"], outs = ["regex"], cmd_bash = "cp $< $@")
+genrule(name = "sched.h_hdr", srcs = ["//include:sched.h"], outs = ["sched.h"], cmd_bash = "cp $< $@")
+genrule(name = "scoped_allocator_hdr", srcs = ["//include:scoped_allocator"], outs = ["scoped_allocator"], cmd_bash = "cp $< $@")
+genrule(name = "search.h_hdr", srcs = ["//include:search.h"], outs = ["search.h"], cmd_bash = "cp $< $@")
+genrule(name = "semaphore.h_hdr", srcs = ["//include:semaphore.h"], outs = ["semaphore.h"], cmd_bash = "cp $< $@")
+genrule(name = "set_hdr", srcs = ["//include:set"], outs = ["set"], cmd_bash = "cp $< $@")
+genrule(name = "setjmp.h_hdr", srcs = ["//include:setjmp.h"], outs = ["setjmp.h"], cmd_bash = "cp $< $@")
+genrule(name = "sgxintrin.h_hdr", srcs = ["//include:sgxintrin.h"], outs = ["sgxintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "shared_mutex_hdr", srcs = ["//include:shared_mutex"], outs = ["shared_mutex"], cmd_bash = "cp $< $@")
+genrule(name = "signal.h_hdr", srcs = ["//include:signal.h"], outs = ["signal.h"], cmd_bash = "cp $< $@")
+genrule(name = "smmintrin.h_hdr", srcs = ["//include:smmintrin.h"], outs = ["smmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "span_hdr", srcs = ["//include:span"], outs = ["span"], cmd_bash = "cp $< $@")
+genrule(name = "spawn.h_hdr", srcs = ["//include:spawn.h"], outs = ["spawn.h"], cmd_bash = "cp $< $@")
+genrule(name = "sstream_hdr", srcs = ["//include:sstream"], outs = ["sstream"], cmd_bash = "cp $< $@")
+genrule(name = "stack_hdr", srcs = ["//include:stack"], outs = ["stack"], cmd_bash = "cp $< $@")
+genrule(name = "stdalign.h_hdr", srcs = ["//include:stdalign.h"], outs = ["stdalign.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdarg.h_hdr", srcs = ["//include:stdarg.h"], outs = ["stdarg.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdatomic.h_hdr", srcs = ["//include:stdatomic.h"], outs = ["stdatomic.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdbool.h_hdr", srcs = ["//include:stdbool.h"], outs = ["stdbool.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdc-predef.h_hdr", srcs = ["//include:stdc-predef.h"], outs = ["stdc-predef.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdckdint.h_hdr", srcs = ["//include:stdckdint.h"], outs = ["stdckdint.h"], cmd_bash = "cp $< $@")
+genrule(name = "stddef.h_hdr", srcs = ["//include:stddef.h"], outs = ["stddef.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdexcept_hdr", srcs = ["//include:stdexcept"], outs = ["stdexcept"], cmd_bash = "cp $< $@")
+genrule(name = "stdint.h_hdr", srcs = ["//include:stdint.h"], outs = ["stdint.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdio.h_hdr", srcs = ["//include:stdio.h"], outs = ["stdio.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdio_ext.h_hdr", srcs = ["//include:stdio_ext.h"], outs = ["stdio_ext.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdlib.h_hdr", srcs = ["//include:stdlib.h"], outs = ["stdlib.h"], cmd_bash = "cp $< $@")
+genrule(name = "stdnoreturn.h_hdr", srcs = ["//include:stdnoreturn.h"], outs = ["stdnoreturn.h"], cmd_bash = "cp $< $@")
+genrule(name = "streambuf_hdr", srcs = ["//include:streambuf"], outs = ["streambuf"], cmd_bash = "cp $< $@")
+genrule(name = "string.h_hdr", srcs = ["//include:string.h"], outs = ["string.h"], cmd_bash = "cp $< $@")
+genrule(name = "string_hdr", srcs = ["//include:string"], outs = ["string"], cmd_bash = "cp $< $@")
+genrule(name = "string_view_hdr", srcs = ["//include:string_view"], outs = ["string_view"], cmd_bash = "cp $< $@")
+genrule(name = "strings.h_hdr", srcs = ["//include:strings.h"], outs = ["strings.h"], cmd_bash = "cp $< $@")
+genrule(name = "strstream_hdr", srcs = ["//include:strstream"], outs = ["strstream"], cmd_bash = "cp $< $@")
+genrule(name = "sysexits.h_hdr", srcs = ["//include:sysexits.h"], outs = ["sysexits.h"], cmd_bash = "cp $< $@")
+genrule(name = "syslog.h_hdr", srcs = ["//include:syslog.h"], outs = ["syslog.h"], cmd_bash = "cp $< $@")
+genrule(name = "system_error_hdr", srcs = ["//include:system_error"], outs = ["system_error"], cmd_bash = "cp $< $@")
+genrule(name = "termios.h_hdr", srcs = ["//include:termios.h"], outs = ["termios.h"], cmd_bash = "cp $< $@")
+genrule(name = "tgmath.h_hdr", srcs = ["//include:tgmath.h"], outs = ["tgmath.h"], cmd_bash = "cp $< $@")
+genrule(name = "thread_hdr", srcs = ["//include:thread"], outs = ["thread"], cmd_bash = "cp $< $@")
+genrule(name = "time.h_hdr", srcs = ["//include:time.h"], outs = ["time.h"], cmd_bash = "cp $< $@")
+genrule(name = "tmmintrin.h_hdr", srcs = ["//include:tmmintrin.h"], outs = ["tmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "tuple_hdr", srcs = ["//include:tuple"], outs = ["tuple"], cmd_bash = "cp $< $@")
+genrule(name = "type_traits_hdr", srcs = ["//include:type_traits"], outs = ["type_traits"], cmd_bash = "cp $< $@")
+genrule(name = "typeindex_hdr", srcs = ["//include:typeindex"], outs = ["typeindex"], cmd_bash = "cp $< $@")
+genrule(name = "typeinfo_hdr", srcs = ["//include:typeinfo"], outs = ["typeinfo"], cmd_bash = "cp $< $@")
+genrule(name = "uchar.h_hdr", srcs = ["//include:uchar.h"], outs = ["uchar.h"], cmd_bash = "cp $< $@")
+genrule(name = "ucontext.h_hdr", srcs = ["//include:ucontext.h"], outs = ["ucontext.h"], cmd_bash = "cp $< $@")
+genrule(name = "uio.h_hdr", srcs = ["//include:uio.h"], outs = ["uio.h"], cmd_bash = "cp $< $@")
+genrule(name = "unistd.h_hdr", srcs = ["//include:unistd.h"], outs = ["unistd.h"], cmd_bash = "cp $< $@")
+genrule(name = "unordered_map_hdr", srcs = ["//include:unordered_map"], outs = ["unordered_map"], cmd_bash = "cp $< $@")
+genrule(name = "unordered_set_hdr", srcs = ["//include:unordered_set"], outs = ["unordered_set"], cmd_bash = "cp $< $@")
+genrule(name = "utility_hdr", srcs = ["//include:utility"], outs = ["utility"], cmd_bash = "cp $< $@")
+genrule(name = "utime.h_hdr", srcs = ["//include:utime.h"], outs = ["utime.h"], cmd_bash = "cp $< $@")
+genrule(name = "utmp.h_hdr", srcs = ["//include:utmp.h"], outs = ["utmp.h"], cmd_bash = "cp $< $@")
+genrule(name = "utmpx.h_hdr", srcs = ["//include:utmpx.h"], outs = ["utmpx.h"], cmd_bash = "cp $< $@")
+genrule(name = "valarray_hdr", srcs = ["//include:valarray"], outs = ["valarray"], cmd_bash = "cp $< $@")
+genrule(name = "variant_hdr", srcs = ["//include:variant"], outs = ["variant"], cmd_bash = "cp $< $@")
+genrule(name = "vector_hdr", srcs = ["//include:vector"], outs = ["vector"], cmd_bash = "cp $< $@")
+genrule(name = "version_hdr", srcs = ["//include:version"], outs = ["version"], cmd_bash = "cp $< $@")
+genrule(name = "wait.h_hdr", srcs = ["//include:wait.h"], outs = ["wait.h"], cmd_bash = "cp $< $@")
+genrule(name = "wchar.h_hdr", srcs = ["//include:wchar.h"], outs = ["wchar.h"], cmd_bash = "cp $< $@")
+genrule(name = "wctype.h_hdr", srcs = ["//include:wctype.h"], outs = ["wctype.h"], cmd_bash = "cp $< $@")
+genrule(name = "winternl.h_hdr", srcs = ["//include:winternl.h"], outs = ["winternl.h"], cmd_bash = "cp $< $@")
+genrule(name = "wmmintrin.h_hdr", srcs = ["//include:wmmintrin.h"], outs = ["wmmintrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "x86intrin.h_hdr", srcs = ["//include:x86intrin.h"], outs = ["x86intrin.h"], cmd_bash = "cp $< $@")
+genrule(name = "xmmintrin.h_hdr", srcs = ["//include:xmmintrin.h"], outs = ["xmmintrin.h"], cmd_bash = "cp $< $@")
diff --git a/include/BUILD b/include/BUILD
new file mode 100644
index 0000000..14ce118
--- /dev/null
+++ b/include/BUILD
@@ -0,0 +1,3 @@
+package(default_visibility = ["//headers:__pkg__"])
+
+exports_files(glob(["**/*"]))
diff --git a/libexec/gcc/x86_64-linux-cosmo/11.2.0/BUILD b/libexec/gcc/x86_64-linux-cosmo/11.2.0/BUILD
new file mode 100644
index 0000000..bea5b65
--- /dev/null
+++ b/libexec/gcc/x86_64-linux-cosmo/11.2.0/BUILD
@@ -0,0 +1,10 @@
+package(default_visibility = ["//binaries/__pkg__"])
+
+exports_files([
+    "as",
+    "cc1",
+    "cc1plus",
+    "collect2",
+    "ld",
+    "ld.bfd",
+])
diff --git a/libraries/BUILD b/libraries/BUILD
new file mode 100644
index 0000000..13df9df
--- /dev/null
+++ b/libraries/BUILD
@@ -0,0 +1,38 @@
+package(default_visibility = ["//visibility:public"])
+
+filegroup(
+    name = "lib",
+    srcs = [
+        ":ape-no-modify-self.o_lib",
+        ":ape.lds_lib",
+        ":ape.o_lib",
+        ":crt.o_lib",
+        ":libc.a_lib",
+        ":libcosmo.a_lib",
+        ":libcxx.a_lib",
+        ":libdl.a_lib",
+        ":libgcc_s.a_lib",
+        ":libm.a_lib",
+        ":libpthread.a_lib",
+        ":libresolv.a_lib",
+        ":librt.a_lib",
+        ":libstdc++.a_lib",
+        ":libz.a_lib",
+    ],
+)
+
+genrule(name = "ape-no-modify-self.o_lib", srcs = ["//x86_64-linux-cosmo/lib:ape-no-modify-self.o"], outs = ["ape-no-modify-self.o"], cmd_bash = "cp $< $@")
+genrule(name = "ape.lds_lib", srcs = ["//x86_64-linux-cosmo/lib:ape.lds"], outs = ["ape.lds"], cmd_bash = "cp $< $@")
+genrule(name = "ape.o_lib", srcs = ["//x86_64-linux-cosmo/lib:ape.o"], outs = ["ape.o"], cmd_bash = "cp $< $@")
+genrule(name = "crt.o_lib", srcs = ["//x86_64-linux-cosmo/lib:crt.o"], outs = ["crt.o"], cmd_bash = "cp $< $@")
+genrule(name = "libc.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libc.a"], outs = ["libc.a"], cmd_bash = "cp $< $@")
+genrule(name = "libcosmo.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libcosmo.a"], outs = ["libcosmo.a"], cmd_bash = "cp $< $@")
+genrule(name = "libcxx.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libcxx.a"], outs = ["libcxx.a"], cmd_bash = "cp $< $@")
+genrule(name = "libdl.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libdl.a"], outs = ["libdl.a"], cmd_bash = "cp $< $@")
+genrule(name = "libgcc_s.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libgcc_s.a"], outs = ["libgcc_s.a"], cmd_bash = "cp $< $@")
+genrule(name = "libm.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libm.a"], outs = ["libm.a"], cmd_bash = "cp $< $@")
+genrule(name = "libpthread.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libpthread.a"], outs = ["libpthread.a"], cmd_bash = "cp $< $@")
+genrule(name = "libresolv.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libresolv.a"], outs = ["libresolv.a"], cmd_bash = "cp $< $@")
+genrule(name = "librt.a_lib", srcs = ["//x86_64-linux-cosmo/lib:librt.a"], outs = ["librt.a"], cmd_bash = "cp $< $@")
+genrule(name = "libstdc++.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libstdc++.a"], outs = ["libstdc++.a"], cmd_bash = "cp $< $@")
+genrule(name = "libz.a_lib", srcs = ["//x86_64-linux-cosmo/lib:libz.a"], outs = ["libz.a"], cmd_bash = "cp $< $@")
diff --git a/x86_64-linux-cosmo/lib/BUILD b/x86_64-linux-cosmo/lib/BUILD
new file mode 100644
index 0000000..3f41526
--- /dev/null
+++ b/x86_64-linux-cosmo/lib/BUILD
@@ -0,0 +1,3 @@
+package(default_visibility = ["//libraries:__pkg__"])
+
+exports_files(glob(["**/*"]))
-- 
2.39.2

