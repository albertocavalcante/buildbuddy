load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "resolver",
    srcs = [
        "logging.go",
        "serviceconfig.go",
        "watch_service.go",
        "xds_resolver.go",
    ],
    importpath = "google.golang.org/grpc/xds/internal/resolver",
    visibility = ["//xds:__subpackages__"],
    deps = [
        "//codes",
        "//credentials",
        "//grpclog",
        "//internal",
        "//internal/envconfig",
        "//internal/grpclog",
        "//internal/grpcrand",
        "//internal/grpcsync",
        "//internal/pretty",
        "//internal/resolver",
        "//internal/serviceconfig",
        "//internal/wrr",
        "//metadata",
        "//resolver",
        "//status",
        "//xds/internal/balancer/clustermanager",
        "//xds/internal/balancer/ringhash",
        "//xds/internal/clusterspecifier",
        "//xds/internal/httpfilter",
        "//xds/internal/xdsclient",
        "//xds/internal/xdsclient/bootstrap",
        "//xds/internal/xdsclient/xdsresource",
        "@com_github_cespare_xxhash_v2//:xxhash",
    ],
)

alias(
    name = "go_default_library",
    actual = ":resolver",
    visibility = ["//xds:__subpackages__"],
)

go_test(
    name = "resolver_test",
    srcs = [
        "cluster_specifier_plugin_test.go",
        "serviceconfig_test.go",
        "watch_service_test.go",
        "xds_resolver_test.go",
    ],
    embed = [":resolver"],
    deps = [
        "//balancer",
        "//codes",
        "//credentials",
        "//credentials/insecure",
        "//credentials/xds",
        "//internal",
        "//internal/envconfig",
        "//internal/grpcsync",
        "//internal/grpctest",
        "//internal/resolver",
        "//internal/testutils",
        "//internal/testutils/xds/bootstrap",
        "//internal/testutils/xds/e2e",
        "//internal/wrr",
        "//metadata",
        "//resolver",
        "//serviceconfig",
        "//status",
        "//xds/internal/balancer/cdsbalancer",
        "//xds/internal/balancer/clustermanager",
        "//xds/internal/balancer/ringhash",
        "//xds/internal/clusterspecifier",
        "//xds/internal/httpfilter",
        "//xds/internal/httpfilter/router",
        "//xds/internal/testutils",
        "//xds/internal/testutils/fakeclient",
        "//xds/internal/xdsclient",
        "//xds/internal/xdsclient/bootstrap",
        "//xds/internal/xdsclient/xdsresource",
        "//xds/internal/xdsclient/xdsresource/version",
        "@com_github_cespare_xxhash_v2//:xxhash",
        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:core",
        "@com_github_envoyproxy_go_control_plane//envoy/config/listener/v3:listener",
        "@com_github_envoyproxy_go_control_plane//envoy/config/route/v3:route",
        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/http/router/v3:router",
        "@com_github_envoyproxy_go_control_plane//envoy/extensions/filters/network/http_connection_manager/v3:http_connection_manager",
        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v3:discovery",
        "@com_github_envoyproxy_go_control_plane//pkg/wellknown",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_google_uuid//:uuid",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/wrapperspb",
    ],
)
