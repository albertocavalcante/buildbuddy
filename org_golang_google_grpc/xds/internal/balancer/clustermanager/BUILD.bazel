load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "clustermanager",
    srcs = [
        "balancerstateaggregator.go",
        "clustermanager.go",
        "config.go",
        "picker.go",
    ],
    importpath = "google.golang.org/grpc/xds/internal/balancer/clustermanager",
    visibility = ["//xds:__subpackages__"],
    deps = [
        "//balancer",
        "//balancer/base",
        "//codes",
        "//connectivity",
        "//grpclog",
        "//internal/balancergroup",
        "//internal/grpclog",
        "//internal/hierarchy",
        "//internal/pretty",
        "//internal/serviceconfig",
        "//resolver",
        "//serviceconfig",
        "//status",
    ],
)

alias(
    name = "go_default_library",
    actual = ":clustermanager",
    visibility = ["//xds:__subpackages__"],
)

go_test(
    name = "clustermanager_test",
    srcs = [
        "clustermanager_test.go",
        "config_test.go",
    ],
    embed = [":clustermanager"],
    deps = [
        "//:grpc",
        "//balancer",
        "//balancer/weightedtarget",
        "//codes",
        "//connectivity",
        "//credentials/insecure",
        "//internal/balancer/stub",
        "//internal/channelz",
        "//internal/grpctest",
        "//internal/hierarchy",
        "//internal/serviceconfig",
        "//internal/testutils",
        "//resolver",
        "//status",
        "//xds/internal/balancer/cdsbalancer",
        "@com_github_google_go_cmp//cmp",
    ],
)
