load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "cdsbalancer",
    srcs = [
        "cdsbalancer.go",
        "cluster_handler.go",
        "logging.go",
    ],
    importpath = "google.golang.org/grpc/xds/internal/balancer/cdsbalancer",
    visibility = ["//xds:__subpackages__"],
    deps = [
        "//balancer",
        "//balancer/base",
        "//connectivity",
        "//credentials",
        "//credentials/tls/certprovider",
        "//grpclog",
        "//internal/balancer/nop",
        "//internal/buffer",
        "//internal/credentials/xds",
        "//internal/envconfig",
        "//internal/grpclog",
        "//internal/grpcsync",
        "//internal/pretty",
        "//resolver",
        "//serviceconfig",
        "//xds/internal/balancer/clusterresolver",
        "//xds/internal/xdsclient",
        "//xds/internal/xdsclient/xdsresource",
    ],
)

alias(
    name = "go_default_library",
    actual = ":cdsbalancer",
    visibility = ["//xds:__subpackages__"],
)

go_test(
    name = "cdsbalancer_test",
    srcs = [
        "cdsbalancer_security_test.go",
        "cdsbalancer_test.go",
        "cluster_handler_test.go",
    ],
    embed = [":cdsbalancer"],
    deps = [
        "//:grpc",
        "//attributes",
        "//balancer",
        "//codes",
        "//connectivity",
        "//credentials",
        "//credentials/insecure",
        "//credentials/tls/certprovider",
        "//credentials/tls/certprovider/pemfile",
        "//credentials/xds",
        "//internal",
        "//internal/balancer/stub",
        "//internal/credentials/xds",
        "//internal/grpctest",
        "//internal/stubserver",
        "//internal/testutils",
        "//internal/testutils/xds/bootstrap",
        "//internal/testutils/xds/e2e",
        "//interop/grpc_testing",
        "//peer",
        "//resolver",
        "//resolver/manual",
        "//serviceconfig",
        "//status",
        "//testdata",
        "//xds/internal/balancer/clusterresolver",
        "//xds/internal/balancer/ringhash",
        "//xds/internal/testutils/fakeclient",
        "//xds/internal/xdsclient",
        "//xds/internal/xdsclient/bootstrap",
        "//xds/internal/xdsclient/xdsresource",
        "//xds/internal/xdsclient/xdsresource/version",
        "@com_github_envoyproxy_go_control_plane//envoy/config/cluster/v3:cluster",
        "@com_github_envoyproxy_go_control_plane//envoy/config/core/v3:core",
        "@com_github_envoyproxy_go_control_plane//envoy/config/endpoint/v3:endpoint",
        "@com_github_envoyproxy_go_control_plane//envoy/extensions/transport_sockets/tls/v3:tls",
        "@com_github_envoyproxy_go_control_plane//envoy/service/discovery/v3:discovery",
        "@com_github_google_go_cmp//cmp",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/wrapperspb",
    ],
)
