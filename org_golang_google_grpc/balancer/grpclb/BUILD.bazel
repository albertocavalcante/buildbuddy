load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "grpclb",
    srcs = [
        "grpclb.go",
        "grpclb_config.go",
        "grpclb_picker.go",
        "grpclb_remote_balancer.go",
        "grpclb_util.go",
    ],
    importpath = "google.golang.org/grpc/balancer/grpclb",
    visibility = ["//visibility:public"],
    deps = [
        "//:grpc",
        "//balancer",
        "//balancer/grpclb/grpc_lb_v1",
        "//balancer/grpclb/state",
        "//balancer/roundrobin",
        "//codes",
        "//connectivity",
        "//credentials",
        "//credentials/insecure",
        "//grpclog",
        "//internal",
        "//internal/backoff",
        "//internal/grpcrand",
        "//internal/metadata",
        "//internal/resolver/dns",
        "//keepalive",
        "//metadata",
        "//resolver",
        "//serviceconfig",
        "//status",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_golang_protobuf//ptypes/duration",
        "@com_github_golang_protobuf//ptypes/timestamp",
        "@com_github_google_go_cmp//cmp",
    ],
)

alias(
    name = "go_default_library",
    actual = ":grpclb",
    visibility = ["//visibility:public"],
)

go_test(
    name = "grpclb_test",
    srcs = [
        "grpclb_config_test.go",
        "grpclb_test.go",
        "grpclb_util_test.go",
    ],
    embed = [":grpclb"],
    deps = [
        "//:grpc",
        "//balancer",
        "//balancer/grpclb/grpc_lb_v1",
        "//balancer/grpclb/state",
        "//codes",
        "//credentials",
        "//internal",
        "//internal/grpctest",
        "//internal/testutils",
        "//internal/testutils/pickfirst",
        "//internal/testutils/roundrobin",
        "//interop/grpc_testing",
        "//metadata",
        "//peer",
        "//resolver",
        "//resolver/manual",
        "//serviceconfig",
        "//status",
        "@com_github_golang_protobuf//ptypes/duration",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
    ],
)
