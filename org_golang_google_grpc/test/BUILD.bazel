load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "test",
    srcs = [
        "clienttester.go",
        "logging.go",
        "parse_config.go",
        "rawConnWrapper.go",
        "servertester.go",
        "timeouts.go",
    ],
    importpath = "google.golang.org/grpc/test",
    visibility = ["//visibility:public"],
    deps = [
        "//grpclog",
        "//resolver/manual",
        "//serviceconfig",
        "@org_golang_x_net//http2",
        "@org_golang_x_net//http2/hpack",
    ],
)

alias(
    name = "go_default_library",
    actual = ":test",
    visibility = ["//visibility:public"],
)

go_test(
    name = "test_test",
    srcs = [
        "authority_test.go",
        "balancer_switching_test.go",
        "balancer_test.go",
        "channelz_linux_test.go",
        "channelz_test.go",
        "clientconn_state_transition_test.go",
        "clientconn_test.go",
        "compressor_test.go",
        "config_selector_test.go",
        "context_canceled_test.go",
        "control_plane_status_test.go",
        "creds_test.go",
        "end2end_test.go",
        "goaway_test.go",
        "gracefulstop_test.go",
        "healthcheck_test.go",
        "http_header_end2end_test.go",
        "insecure_creds_test.go",
        "interceptor_test.go",
        "invoke_test.go",
        "local_creds_test.go",
        "metadata_test.go",
        "pickfirst_test.go",
        "race_test.go",
        "recv_buffer_pool_test.go",
        "resolver_update_test.go",
        "retry_test.go",
        "roundrobin_test.go",
        "server_test.go",
        "service_config_deprecated_test.go",
        "stream_cleanup_test.go",
        "subconn_test.go",
        "transport_test.go",
    ],
    embed = [":test"],
    deps = [
        "//:grpc",
        "//attributes",
        "//backoff",
        "//balancer",
        "//balancer/base",
        "//balancer/grpclb",
        "//balancer/grpclb/state",
        "//balancer/roundrobin",
        "//codes",
        "//connectivity",
        "//credentials",
        "//credentials/insecure",
        "//credentials/local",
        "//encoding",
        "//encoding/gzip",
        "//health",
        "//health/grpc_health_v1",
        "//internal",
        "//internal/balancer/stub",
        "//internal/balancerload",
        "//internal/binarylog",
        "//internal/channelz",
        "//internal/envconfig",
        "//internal/grpcrand",
        "//internal/grpcsync",
        "//internal/grpctest",
        "//internal/grpcutil",
        "//internal/metadata",
        "//internal/resolver",
        "//internal/serviceconfig",
        "//internal/stubserver",
        "//internal/testutils",
        "//internal/testutils/fakegrpclb",
        "//internal/testutils/pickfirst",
        "//internal/testutils/roundrobin",
        "//internal/transport",
        "//interop/grpc_testing",
        "//keepalive",
        "//metadata",
        "//peer",
        "//resolver",
        "//resolver/manual",
        "//serviceconfig",
        "//stats",
        "//status",
        "//tap",
        "//test/bufconn",
        "//testdata",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_golang_protobuf//ptypes/any",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@org_golang_google_genproto_googleapis_rpc//status",
        "@org_golang_x_net//http2",
        "@org_golang_x_net//http2/hpack",
    ],
)
